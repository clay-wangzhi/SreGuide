const e=JSON.parse('{"key":"v-5c17fa36","path":"/code/shell/part5/36_3_tests_and_comparisons_alternatives.html","title":"36.3 测试和比较的其他方法","lang":"zh-CN","frontmatter":{"author":"LinuxStory","category":"Linux","tag":["Bash"],"description":"36.3 测试和比较的其他方法 对于判断（test命令）来说，[[ ]]比[ ]更加合适。同样的，算数运算符（译注：-eq之类的）比(( ))更有优势。 a=8 # 下面所有这些比较的结果都应该是相等的 test \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\" # \\"and list\\" /bin/test \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\" [ \\"$a\\" -lt 16 ] &amp;&amp; echo \\"yes, $a &lt; 16\\" [[ $a -lt 16 ]] &amp;&amp; echo \\"yes, $a &lt; 16\\" # 为表达式添加 (( a &lt; 16 )) &amp;&amp; echo \\"yes, $a &lt; 16\\" # [[ ]]和(( ))并不是必须的 city=\\"New York\\" # 下面这些结果也是相等的 test \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\" # ASCII字符比较 /bin/test \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\" [ \\"$city\\" \\\\&lt; Paris ] &amp;&amp; echo \\"Yes, Paris is greater than $city\\" [[ $city &lt; Paris ]] &amp;&amp; echo \\"Yes, Paris is greater than $city\\" # 并不需要为$city变量加引号。 # 向S.C.致谢","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/shell/part5/36_3_tests_and_comparisons_alternatives.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"36.3 测试和比较的其他方法"}],["meta",{"property":"og:description","content":"36.3 测试和比较的其他方法 对于判断（test命令）来说，[[ ]]比[ ]更加合适。同样的，算数运算符（译注：-eq之类的）比(( ))更有优势。 a=8 # 下面所有这些比较的结果都应该是相等的 test \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\" # \\"and list\\" /bin/test \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\" [ \\"$a\\" -lt 16 ] &amp;&amp; echo \\"yes, $a &lt; 16\\" [[ $a -lt 16 ]] &amp;&amp; echo \\"yes, $a &lt; 16\\" # 为表达式添加 (( a &lt; 16 )) &amp;&amp; echo \\"yes, $a &lt; 16\\" # [[ ]]和(( ))并不是必须的 city=\\"New York\\" # 下面这些结果也是相等的 test \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\" # ASCII字符比较 /bin/test \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\" [ \\"$city\\" \\\\&lt; Paris ] &amp;&amp; echo \\"Yes, Paris is greater than $city\\" [[ $city &lt; Paris ]] &amp;&amp; echo \\"Yes, Paris is greater than $city\\" # 并不需要为$city变量加引号。 # 向S.C.致谢"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"LinuxStory"}],["meta",{"property":"article:tag","content":"Bash"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"36.3 测试和比较的其他方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LinuxStory\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":0.64,"words":193},"filePathRelative":"code/shell/part5/36_3_tests_and_comparisons_alternatives.md","localizedDate":"2023年4月19日","excerpt":"<h1> 36.3 测试和比较的其他方法</h1>\\n<p>对于判断（test命令）来说，[[ ]]比[ ]更加合适。同样的，算数运算符（译注：-eq之类的）比(( ))更有优势。</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>a=8\\n\\n# 下面所有这些比较的结果都应该是相等的\\ntest \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\"         # \\"and list\\"\\n/bin/test \\"$a\\" -lt 16 &amp;&amp; echo \\"yes, $a &lt; 16\\" \\n[ \\"$a\\" -lt 16 ] &amp;&amp; echo \\"yes, $a &lt; 16\\" \\n[[ $a -lt 16 ]] &amp;&amp; echo \\"yes, $a &lt; 16\\"          # 为表达式添加\\n(( a &lt; 16 )) &amp;&amp; echo \\"yes, $a &lt; 16\\"             # [[ ]]和(( ))并不是必须的\\n\\ncity=\\"New York\\"\\n# 下面这些结果也是相等的\\ntest \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\"\\n                                  # ASCII字符比较\\n/bin/test \\"$city\\" \\\\&lt; Paris &amp;&amp; echo \\"Yes, Paris is greater than $city\\" \\n[ \\"$city\\" \\\\&lt; Paris ] &amp;&amp; echo \\"Yes, Paris is greater than $city\\" \\n[[ $city &lt; Paris ]] &amp;&amp; echo \\"Yes, Paris is greater than $city\\"\\n                                  # 并不需要为$city变量加引号。\\n\\n# 向S.C.致谢\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"LinuxStory"},"autoDesc":true}');export{e as data};

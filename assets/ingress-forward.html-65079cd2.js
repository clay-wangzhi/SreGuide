import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as e,e as n}from"./app-7187cc90.js";const t={},r=n(`<h1 id="故障排查-之-单点登录跳转失败-ingress-相关" tabindex="-1"><a class="header-anchor" href="#故障排查-之-单点登录跳转失败-ingress-相关" aria-hidden="true">#</a> 故障排查 之 单点登录跳转失败(Ingress 相关)</h1><h2 id="故障现象" tabindex="-1"><a class="header-anchor" href="#故障现象" aria-hidden="true">#</a> 故障现象</h2><p>单点登录失败，但是其他接口正常</p><h2 id="根因分析" tabindex="-1"><a class="header-anchor" href="#根因分析" aria-hidden="true">#</a> 根因分析</h2><p>问题要点是：单点登录失败，看代码是 request 和 response 的 RedirectUri 不一样导致的。</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106201212000.png" alt=""></p><p>目前的南北流量架构为：</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106205830482.png" alt=""></p><p><strong>二分法排查问题</strong>：去掉 外层 Nginx， 或者去掉 K8s Ingress , 故障均可恢复，那么问题就出现在转发过程。</p><p><strong>使用 arthas 排查问题</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入 Pod 执行如下命令：</span>
<span class="token function">curl</span> <span class="token parameter variable">-O</span> https://arthas.aliyun.com/arthas-boot.jar
<span class="token function">java</span> <span class="token parameter variable">-jar</span> arthas-boot.jar
<span class="token function">watch</span> org.springframework.security.oauth2.client.authentication.OAuth2LoginAuthenticationProvider authenticate <span class="token string">&#39;params[0]&#39;</span> <span class="token parameter variable">-x</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106203055523.png" alt=""></p><p>可以证实是 <code>redirectUri</code> 不一致导致的。</p><p><strong>抓包排查问题</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 登录 Pod 所在 Node 节点，抓包</span>
<span class="token assign-left variable">podName</span><span class="token operator">=</span>xxx
nsenter <span class="token parameter variable">-t</span> <span class="token variable"><span class="token variable">$(</span>nerdctl <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> $<span class="token punctuation">{</span>podName<span class="token punctuation">}</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> pause <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> nerdctl inspect <span class="token parameter variable">-f</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>.State.Pid<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">)</span></span> <span class="token parameter variable">-n</span> tcpdump <span class="token parameter variable">-i</span> eth0 <span class="token parameter variable">-nne</span> <span class="token parameter variable">-C</span> <span class="token number">100</span> <span class="token parameter variable">-W</span> <span class="token number">30</span> <span class="token parameter variable">-w</span> /tmp/container.pcap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将包传到本地，通过 wireshark 进行分析</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106200836425.png" alt=""></p><p>重点看 <strong>X-Forwarded</strong> 信息，发现 Scheme 是 http，Port 是 80 ， 拿的 K8s Ingress 的值。</p><p>所以 K8s Ingress 没有使用上层的 X-Forwarded 信息。</p><p>改进：如果 Nginx 在其他7层代理或负载均衡后面，当期望Nginx将 <code>X-Forwarded-*</code> 的头信息传递给后端服务时，则需要将此参数设为 true</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  use-forwarded-headers: &quot;true&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>改完，再抓包验证：</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106204434600.png" alt=""></p><p>发现还是不行，Scheme 是 https，对了，但是 Port 还是 80， 也就意味着，外层 Nginx，没有把 Port 传下来。</p><p>搜索 Ingress Issue ，发现有类似的问题：Problem with HTTPS, CloudFlare and X-Forwarded-Port header https://github.com/kubernetes/ingress-nginx/issues/6358</p><p>他使用的是 CloudFlare 产品，不支持加 X-Forwarded-Port header ， 我们用的自建的，可以直接增加一个 header，在外层 Nginx 中新增</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    proxy_set_header X-Forwarded-Port <span class="token variable">$server_port</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>问题解决， enjoy</strong></p><h2 id="总结问题解决方法" tabindex="-1"><a class="header-anchor" href="#总结问题解决方法" aria-hidden="true">#</a> 总结问题解决方法</h2><p>解决方法一：如上过程</p><p>1）如果 Nginx 在其他7层代理或负载均衡后面，当期望Nginx将 <code>X-Forwarded-*</code> 的头信息传递给后端服务时，Ingress 新增参数，<code>use-forwarded-headers: &quot;true&quot;</code>。</p><p>2）外层 Nginx 也配置好 <code>X-Forwarded-Port</code>等。</p><p>解决方法二：</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20241106205159434.png" alt=""></p><p>这里的 upstream 换成 https://$ip:443 和 外层保持一致即可</p><p>解决方法三：</p><p>如果像这个 issue https://github.com/kubernetes/ingress-nginx/issues/6358 这样， 外层 Nginx， 和 K8s Ingress 都不方便改的情况下，只能修改 Ingress 的模版了，修改模版<code>/etc/nginx/template</code> 后，重新打镜像使用。</p><p>我是 Clay，下期见 👋</p><hr><blockquote><ul><li><p>欢迎订阅我的公众号「SRE运维进阶之路」或关注我的 Github https://github.com/clay-wangzhi/SreGuide 查看最新文章</p></li><li><p>欢迎加我微信<code>sre-k8s-ai</code>，与我讨论云原生、稳定性相关内容</p></li></ul></blockquote><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/weixin-20240615194414355.png" alt="weixin" style="zoom:50%;">`,41),p=[r];function i(o,c){return s(),e("div",null,p)}const u=a(t,[["render",i],["__file","ingress-forward.html.vue"]]);export{u as default};

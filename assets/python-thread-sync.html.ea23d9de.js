import{_ as n,e as s}from"./app.c279a5c9.js";const a={},p=s(`<h1 id="_10-2-\u7EBF\u7A0B\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#_10-2-\u7EBF\u7A0B\u540C\u6B65" aria-hidden="true">#</a> 10.2 \u7EBF\u7A0B\u540C\u6B65</h1><h2 id="\u7EBF\u7A0B\u540C\u6B65\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u540C\u6B65\u6982\u5FF5" aria-hidden="true">#</a> \u7EBF\u7A0B\u540C\u6B65\u6982\u5FF5</h2><p>\u7EBF\u7A0B\u540C\u6B65\uFF0C\u7EBF\u7A0B\u95F4\u534F\u540C\uFF0C\u901A\u8FC7\u67D0\u79CD\u6280\u672F\uFF0C\u8BA9\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u67D0\u4E9B\u6570\u636E\u65F6\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u4E0D\u80FD\u8BBF\u95EE\u8FD9\u4E9B\u6570\u636E\uFF0C\u76F4\u5230\u8BE5\u7EBF\u7A0B\u5B8C\u6210\u5BF9\u6570\u636E\u7684\u64CD\u4F5C\u3002</p><h2 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> Event</h2><p>Event \u4E8B\u4EF6\uFF0C\u662F\u7EBF\u7A0B\u95F4\u901A\u4FE1\u673A\u5236\u4E2D\u6700\u7B80\u5355\u7684\u5B9E\u73B0\uFF0C\u4F7F\u7528\u4E00\u4E2A\u5185\u90E8\u7684\u6807\u8BB0 flag\uFF0C\u901A\u8FC7 flag \u7684 True \u6216 False \u7684\u53D8\u5316\u6765\u8FDB\u884C\u64CD\u4F5C\u3002</p><table><thead><tr><th>\u540D\u79F0</th><th>\u542B\u4E49</th></tr></thead><tbody><tr><td>set()</td><td>\u6807\u8BB0\u8BBE\u7F6E\u4E3ATrue</td></tr><tr><td>clear()</td><td>\u6807\u8BB0\u8BBE\u7F6E\u4E3AFalse</td></tr><tr><td>is_set()</td><td>\u6807\u8BB0\u662F\u5426\u4E3ATrue</td></tr><tr><td>wait(timeout=None)</td><td>\u8BBE\u7F6E\u7B49\u5F85\u6807\u8BB0\u4E3ATrue\u7684\u65F6\u957F\uFF0CNone\u4E3A\u65E0\u9650\u7B49\u5F85\u3002\u7B49\u5230\u8FD4\u56DETrue\uFF0C\u672A\u7B49\u5230\u8D85\u65F6\u4E86\u8FD4\u56DEFalse</td></tr></tbody></table><p><strong>\u7EC3\u4E60</strong></p><p>\u8001\u677F\u96C7\u4F63\u4E86\u4E00\u4E2A\u5DE5\u4EBA\uFF0C\u8BA9\u4ED6\u751F\u4EA7\u676F\u5B50\uFF0C\u8001\u677F\u4E00\u76F4\u7B49\u7740\u8FD9\u4E2A\u5DE5\u4EBA\uFF0C\u76F4\u5230\u751F\u4EA7\u4E8610\u4E2A\u676F\u5B50</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u4E0B\u9762\u7684\u4EE3\u7801\u662F\u5426\u80FD\u591F\u5B8C\u6210\u529F\u80FD\uFF1F</span>
<span class="token keyword">from</span> threading <span class="token keyword">import</span> Event<span class="token punctuation">,</span> Thread
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> time

FORMAT <span class="token operator">=</span> <span class="token string">&#39;%(asctime)s %(threadName)s %(thread)s %(message)s&#39;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

cups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
flag <span class="token operator">=</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">boss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;I&#39;m boss, waiting for U&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Good Job.&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I am working for U&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;make 1 cup&#39;</span><span class="token punctuation">)</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
        cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
            flag <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">break</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span>

b <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>boss<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;boss&#39;</span><span class="token punctuation">)</span>
w <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;worker&#39;</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
w<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u57FA\u672C\u80FD\u591F\u5B8C\u6210\uFF0C\u4F46\u4E0A\u9762\u4EE3\u7801\u95EE\u9898\u6709\uFF1A</p><ul><li>bug\uFF0C\u5E94\u8BE5\u5C06worker\u4E2D\u7684flag\u5B9A\u4E49\u4E3Aglobal\u5C31\u53EF\u89E3\u51B3</li><li>\u8001\u677F\u4E00\u76F4\u8981\u4E0D\u505C\u7684\u67E5\u8BE2worker\u7684\u72B6\u6001\u53D8\u5316</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u4E0B\u9762\u7684\u4EE3\u7801\u662F\u5426\u80FD\u591F\u5B8C\u6210\u529F\u80FD\uFF1F</span>
<span class="token keyword">from</span> threading <span class="token keyword">import</span> Event<span class="token punctuation">,</span> Thread
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> time

FORMAT <span class="token operator">=</span> <span class="token string">&#39;%(asctime)s %(threadName)s %(thread)s %(message)s&#39;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

cups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
flag <span class="token operator">=</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">boss</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;I&#39;m boss, waiting for U&quot;</span><span class="token punctuation">)</span>
    event<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u963B\u585E\u7B49\u5F85</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Good Job.&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>Event <span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I am working for U&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;make 1 cup&#39;</span><span class="token punctuation">)</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
        cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
            event<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span>

event <span class="token operator">=</span> Event<span class="token punctuation">(</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>boss<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;boss&#39;</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
w <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;worker&#39;</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
w<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><strong>\u603B\u7ED3</strong></p><p>\u9700\u8981\u4F7F\u7528\u540C\u4E00\u4E2A Event \u5BF9\u8C61\u7684\u6807\u8BB0 flag\u3002 \u8C01 wait \u5C31\u662F\u7B49\u5230 flag \u53D8\u4E3A True\uFF0C\u6216\u7B49\u5230\u8D85\u65F6\u8FD4\u56DE False\u3002 \u4E0D\u9650\u5236\u7B49\u5F85\u8005\u7684\u4E2A\u6570\uFF0C\u901A\u77E5\u6240\u6709\u7B49\u5F85\u8005\u3002</p><p><strong>wait \u7684\u4F7F\u7528</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>Event <span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I am working for U&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token keyword">not</span> event<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># \u4F7F\u7528 wait \u963B\u585E\u7B49\u5F85</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;make 1 cup&#39;</span><span class="token punctuation">)</span>
        cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
            event<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># break</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="lock" tabindex="-1"><a class="header-anchor" href="#lock" aria-hidden="true">#</a> Lock</h2><ul><li>Lock \u7C7B\u662F mutex \u4E92\u65A5\u9501</li><li>\u4E00\u65E6\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u9501\uFF0C\u5176\u5B83\u8BD5\u56FE\u83B7\u53D6\u9501\u7684\u7EBF\u7A0B\u5C06\u88AB\u963B\u585E\uFF0C\u53EA\u5230\u62E5\u6709\u9501\u7684\u7EBF\u7A0B\u91CA\u653E\u9501</li><li>\u51E1\u662F\u5B58\u5728\u5171\u4EAB\u8D44\u6E90\u4E89\u62A2\u7684\u5730\u65B9\u90FD\u53EF\u4EE5\u4F7F\u7528\u9501\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u53EA\u6709\u4E00\u4E2A\u4F7F\u7528\u8005\u53EF\u4EE5\u5B8C\u5168\u4F7F\u7528\u8FD9\u4E2A\u8D44\u6E90\u3002</li></ul><table><thead><tr><th>\u540D\u79F0</th><th>\u542B\u4E49</th></tr></thead><tbody><tr><td>acquire(blocking=True, timeout=-1)</td><td>\u9ED8\u8BA4\u963B\u585E\uFF0C\u963B\u585E\u53EF\u4EE5\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4\u3002\u975E\u963B\u585E\u65F6\uFF0Ctimeout\u7981<br>\u6B62\u8BBE\u7F6E\u3002<br>\u6210\u529F\u83B7\u53D6\u9501\uFF0C\u8FD4\u56DETrue\uFF0C\u5426\u5219\u8FD4\u56DEFalse</td></tr><tr><td>release()</td><td>\u91CA\u653E\u9501\u3002\u53EF\u4EE5\u4ECE\u4EFB\u4F55\u7EBF\u7A0B\u8C03\u7528\u91CA\u653E\u3002<br>\u5DF2\u4E0A\u9501\u7684\u9501\uFF0C\u4F1A\u88AB\u91CD\u7F6E\u4E3Aunlocked<br>\u672A\u4E0A\u9501\u7684\u9501\u4E0A\u8C03\u7528\uFF0C\u629BRuntimeError\u5F02\u5E38\u3002</td></tr></tbody></table><p>\u9501\u7684\u57FA\u672C\u4F7F\u7528</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> threading
<span class="token keyword">import</span> time

lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u4E92\u65A5 mutex</span>

lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>l<span class="token punctuation">:</span>threading<span class="token punctuation">.</span>Lock<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;worker start&#39;</span><span class="token punctuation">,</span> threading<span class="token punctuation">.</span>current_thread<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    l<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;worker done&#39;</span><span class="token punctuation">,</span> threading<span class="token punctuation">.</span>current_thread<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;w{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>
                     args<span class="token operator">=</span><span class="token punctuation">(</span>lock<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> daemon<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">:</span> <span class="token comment"># \u6309 r \u540E\u679A\u4E3E\u6240\u6709\u7EBF\u7A0B\u67E5\u770B</span>
        lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;released one locker&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">&#39;quit&#39;</span><span class="token punctuation">:</span>
        lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>threading<span class="token punctuation">.</span><span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>lock<span class="token punctuation">.</span>locked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u4E0A\u4F8B\u53EF\u4EE5\u770B\u51FA\u4E0D\u7BA1\u5728\u54EA\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\uFF0C\u53EA\u8981\u5BF9\u4E00\u4E2A\u5DF2\u7ECF\u4E0A\u9501\u7684\u9501\u53D1\u8D77\u963B\u585E\u5730\u8BF7\u6C42\uFF0C\u8BE5\u7EBF\u7A0B\u5C31\u4F1A\u963B\u585E\u3002</p><p><strong>\u7EC3\u4E60</strong> \u8BA2\u5355\u8981\u6C42\u751F\u4EA71000\u4E2A\u676F\u5B50\uFF0C\u7EC4\u7EC710\u4E2A\u5DE5\u4EBA\u751F\u4EA7\u3002\u8BF7\u5FFD\u7565\u8001\u677F\uFF0C\u5173\u6CE8\u5DE5\u4EBA\u751F\u6210\u676F\u5B50</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token punctuation">,</span> Lock
<span class="token keyword">import</span> time
<span class="token keyword">import</span> logging

FORMAT <span class="token operator">=</span> <span class="token string">&quot;%(asctime)s %(threadName)s %(thread)d %(message)s&quot;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

cups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;I&#39;m working&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
        cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    t <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;w{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4ECE\u4E0A\u4F8B\u7684\u8FD0\u884C\u7ED3\u679C\u770B\u51FA\uFF0C\u591A\u7EBF\u7A0B\u8C03\u5EA6\uFF0C\u5BFC\u81F4\u4E86\u5224\u65AD\u5931\u6548\uFF0C\u591A\u751F\u4EA7\u4E86\u676F\u5B50\u3002 \u5982\u4F55\u4FEE\u6539\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF1F\u52A0\u9501 \u4E0A\u4F8B\u4F7F\u7528\u9501\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token punctuation">,</span> Lock
<span class="token keyword">import</span> time
<span class="token keyword">import</span> logging

FORMAT <span class="token operator">=</span> <span class="token string">&quot;%(asctime)s %(threadName)s %(thread)d %(message)s&quot;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

cups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
lock <span class="token operator">=</span> Lock<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u9501</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;I&#39;m working&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u83B7\u53D6\u9501</span>

        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
            lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
            <span class="token keyword">break</span>
        <span class="token comment"># lock.release() # 2</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
        cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 3</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    t <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;w{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="\u9501\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9501\u5206\u6790" aria-hidden="true">#</a> \u9501\u5206\u6790</h3><p><strong>\u4F4D\u7F6E2\u5206\u6790</strong></p><ul><li>\u5047\u8BBE\u67D0\u4E00\u4E2A\u77AC\u95F4\uFF0C\u6709\u4E00\u4E2A\u5DE5\u4F5C\u7EBF\u7A0BA\u83B7\u53D6\u4E86\u9501\uFF0Clen(cups)\u6B63\u597D\u6709999\u4E2A\uFF0C\u7136\u540E\u5C31\u91CA\u653E\u4E86\u9501\uFF0C\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\u4E0B\u9762\u7684\u8BED\u53E5\uFF0C\u751F\u4EA7\u4E00\u4E2A\u676F\u5B50\uFF0C\u8FD9\u5730\u65B9\u4E0D\u963B\u585E\uFF0C\u4F46\u662F\u6B63\u597D\u676F\u5B50\u4E5F\u6CA1\u6709\u751F\u4EA7\u5B8C\u3002\u9501\u91CA\u653E\u540E\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u83B7\u5F97\u9501\uFF0C\u7EBF\u7A0BB\u83B7\u5F97\u4E86\u9501\uFF0C\u53D1\u73B0len(cups)\u4E5F\u662F999\u4E2A\uFF0C\u7136\u540E\u91CA\u653E\u9501\uFF0C\u7136\u540E\u4E5F\u53EF\u4EE5\u53BB\u751F\u4EA7\u4E00\u4E2A\u676F\u5B50\u3002\u9501\u91CA\u653E\u540E\uFF0C\u5176\u4ED6\u7684\u7EBF\u4E5F\u53EF\u80FD\u83B7\u5F97\u9501\u3002\u5C31\u8BF4A\u548CB\u7EBF\u7A0B\u90FD\u8BA4\u4E3A\u662F999\u4E2A\uFF0C\u90FD\u4F1A\u751F\u4EA7\u4E00\u4E2A\u676F\u5B50\uFF0C\u90A3\u4E48\u5B9E\u9645\u4E0A\u6700\u540E\u4E00\u5B9A\u4F1A\u8D85\u51FA1000\u4E2A\u3002</li><li>\u5047\u8BBE\u67D0\u4E2A\u77AC\u95F4\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u9501\uFF0C\u7136\u540E\u53D1\u73B0\u676F\u5B50\u5230\u4E861000\u4E2A\uFF0C\u6CA1\u6709\u91CA\u653E\u9501\u5C31\u76F4\u63A5break\u4E86\uFF0C\u7531\u4E8E\u5176\u4ED6\u7EBF\u7A0B\u8FD8\u5728\u963B\u585E\u7B49\u5F85\u9501\u91CA\u653E\uFF0C\u8FD9\u5C31\u6210\u4E86\u6B7B\u9501\u4E86\u3002</li></ul><p><strong>\u4F4D\u7F6E3\u5206\u6790</strong></p><ul><li>\u83B7\u5F97\u9501\u7684\u7EBF\u7A0B\u53D1\u73B0\u662F999\uFF0C\u6709\u8D44\u683C\u751F\u4EA7\u676F\u5B50\uFF0C\u751F\u4EA7\u4E00\u4E2A\uFF0C\u91CA\u653E\u9501\uFF0C\u770B\u4F3C\u5F88\u5B8C\u7F8E</li><li>\u95EE\u9898\u5728\u4E8E\uFF0C\u83B7\u53D6\u9501\u7684\u7EBF\u7A0B\u53D1\u73B0\u676F\u5B50\u67091000\u4E2A\uFF0C\u76F4\u63A5break\uFF0C\u6CA1\u91CA\u653E\u9501\u79BB\u5F00\u4E86\uFF0C\u6B7B\u9501\u4E86</li></ul><p>\u4F4D\u7F6E1\u5206\u6790</p><ul><li>\u5982\u679C\u7EBF\u7A0B\u83B7\u5F97\u9501\uFF0C\u53D1\u73B0\u662F1000\uFF0Cbreak\u524D\u91CA\u653E\u9501\uFF0C\u6CA1\u95EE\u9898 \u95EE\u9898\u5728\u4E8E\uFF0CA\u7EBF\u7A0B\u83B7\u5F97\u9501\u540E\uFF0C\u53D1\u73B0\u5C0F\u4E8E1000\uFF0C\u7EE7\u7EED\u6267\u884C\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u83B7\u5F97\u9501\u5168\u90E8\u963B\u585E\u3002A\u7EBF\u7A0B\u518D\u6B21\u6267\u884C\u5FAA\u73AF\u540E\uFF0C\u81EA\u5DF1\u4E5F\u963B\u585E\u4E86\u3002\u6B7B\u9501\u4E86\u3002</li></ul><p>\u95EE\u9898\uFF1A\u7A76\u7ADF\u600E\u6837\u52A0\u9501\u624D\u6B63\u786E\u5462\uFF1F</p><p>\u8981\u5728\u4F4D\u7F6E1\u548C\u4F4D\u7F6E3\u540C\u65F6\u52A0release\u3002</p><h3 id="\u4E0A\u4E0B\u6587\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4E0B\u6587\u652F\u6301" aria-hidden="true">#</a> \u4E0A\u4E0B\u6587\u652F\u6301</h3><p>\u9501\u662F\u5178\u578B\u5FC5\u987B\u91CA\u653E\u7684\uFF0CPython\u63D0\u4F9B\u4E86\u4E0A\u4E0B\u6587\u652F\u6301\u3002\u67E5\u770BLock\u7C7B\u7684\u4E0A\u4E0B\u6587\u65B9\u6CD5\uFF0C<code>__enter__</code>\u65B9\u6CD5\u8FD4\u56DEbool\u8868\u793A\u662F\u5426\u83B7\u5F97\u9501\uFF0C<code>__exit__</code>\u65B9\u6CD5\u4E2D\u91CA\u653E\u9501\u3002</p><p>\u7531\u6B64\u4E0A\u4F8B\u53EF\u4EE5\u4FEE\u6539\u4E3A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token punctuation">,</span> Lock
<span class="token keyword">import</span> time
<span class="token keyword">import</span> logging

FORMAT <span class="token operator">=</span> <span class="token string">&quot;%(asctime)s %(threadName)s %(thread)d %(message)s&quot;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

cups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
lock <span class="token operator">=</span> Lock<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u9501</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;I&#39;m working&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> lock<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> count<span class="token punctuation">:</span>
                <span class="token keyword">break</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
            cups<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;I finished my job. cups = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cups<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    t <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;w{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u611F\u89C9\u4E00\u4E0B\u6B63\u786E\u5F97\u5230\u7ED3\u679C\u4E86\u5417\uFF1F\u611F\u89C9\u5230\u4E86\u6267\u884C\u901F\u5EA6\u4E86\u5417\uFF1F\u6162\u4E86\u8FD8\u662F\u5FEB\u4E86\uFF0C\u4E3A\u4EC0\u4E48\uFF1F</p><h3 id="\u9501\u7684\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9501\u7684\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u9501\u7684\u5E94\u7528\u573A\u666F</h3><p>\u9501\u9002\u7528\u4E8E\u8BBF\u95EE\u548C\u4FEE\u6539\u540C\u4E00\u4E2A\u5171\u4EAB\u8D44\u6E90\u7684\u65F6\u5019\uFF0C\u5373\u8BFB\u5199\u540C\u4E00\u4E2A\u8D44\u6E90\u7684\u65F6\u5019\u3002</p><p>\u5982\u679C\u5168\u90E8\u90FD\u662F\u8BFB\u53D6\u540C\u4E00\u4E2A\u5171\u4EAB\u8D44\u6E90\u9700\u8981\u9501\u5417\uFF1F \u4E0D\u9700\u8981\u3002\u56E0\u4E3A\u8FD9\u65F6\u53EF\u4EE5\u8BA4\u4E3A\u5171\u4EAB\u8D44\u6E90\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u6BCF\u4E00\u6B21\u8BFB\u53D6\u5B83\u90FD\u662F\u4E00\u6837\u7684\u503C\uFF0C\u6240\u4EE5\u4E0D\u7528\u52A0\u9501</p><p>\u4F7F\u7528\u9501\u7684\u6CE8\u610F\u4E8B\u9879\uFF1A</p><ul><li>\u5C11\u7528\u9501\uFF0C\u5FC5\u8981\u65F6\u7528\u9501\u3002\u4F7F\u7528\u4E86\u9501\uFF0C\u591A\u7EBF\u7A0B\u8BBF\u95EE\u88AB\u9501\u7684\u8D44\u6E90\u65F6\uFF0C\u5C31\u6210\u4E86\u4E32\u884C\uFF0C\u8981\u4E48\u6392\u961F\u6267\u884C\uFF0C\u8981\u4E48\u4E89\u62A2\u6267\u884C \u4E3E\u4F8B\uFF0C\u9AD8\u901F\u516C\u8DEF\u4E0A\u8F66\u5E76\u884C\u8DD1\uFF0C\u53EF\u662F\u5230\u4E86\u7701\u754C\u53EA\u5F00\u653E\u4E86\u4E00\u4E2A\u6536\u8D39\u53E3\uFF0C\u8FC7\u4E86\u8FD9\u4E2A\u53E3\uFF0C\u8F66\u8F86\u4F9D\u7136\u53EF\u4EE5\u5728\u591A\u8F66\u9053\u4E0A\u4E00\u8D77\u8DD1\u3002\u8FC7\u6536\u8D39\u53E3\u7684\u65F6\u5019\uFF0C\u5982\u679C\u6392\u961F\u4E00\u8F86\u8F86\u8FC7\uFF0C\u52A0\u4E0D\u52A0\u9501\u4E00\u6837\u6548\u7387\u76F8\u5F53\uFF0C\u4F46\u662F\u4E00\u65E6\u51FA\u73B0\u4E89\u62A2\uFF0C\u5C31\u5FC5\u987B\u52A0\u9501\u4E00\u8F86\u8F86\u8FC7\u3002\u6CE8\u610F\uFF0C\u4E0D\u7BA1\u52A0\u4E0D\u52A0\u9501\uFF0C\u53EA\u8981\u662F\u4E00\u8F86\u8F86\u8FC7\uFF0C\u6548\u7387\u5C31\u4E0B\u964D\u4E86\u3002</li><li>\u52A0\u9501\u65F6\u95F4\u8D8A\u77ED\u8D8A\u597D\uFF0C\u4E0D\u9700\u8981\u5C31\u7ACB\u5373\u91CA\u653E\u9501</li><li>\u4E00\u5B9A\u8981\u907F\u514D\u6B7B\u9501</li></ul><p>\u4E0D\u4F7F\u7528\u9501\uFF0C\u6709\u4E86\u6548\u7387\uFF0C\u4F46\u662F\u7ED3\u679C\u662F\u9519\u7684\u3002 \u4F7F\u7528\u4E86\u9501\uFF0C\u6548\u7387\u4F4E\u4E0B\uFF0C\u4F46\u662F\u7ED3\u679C\u662F\u5BF9\u7684\u3002 \u6240\u4EE5\uFF0C\u6211\u4EEC\u662F\u4E3A\u4E86\u6548\u7387\u8981\u9519\u8BEF\u7ED3\u679C\u5462\uFF1F\u8FD8\u662F\u4E3A\u4E86\u5BF9\u7684\u7ED3\u679C\uFF0C\u8BA9\u8BA1\u7B97\u673A\u53BB\u8BA1\u7B97\u5427</p><h3 id="\u975E\u963B\u585E\u9501\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u975E\u963B\u585E\u9501\u4F7F\u7528" aria-hidden="true">#</a> \u975E\u963B\u585E\u9501\u4F7F\u7528</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token punctuation">,</span> Lock
<span class="token keyword">import</span> time
<span class="token keyword">import</span> logging

FORMAT <span class="token operator">=</span> <span class="token string">&quot;%(asctime)s %(threadName)s %(thread)d %(message)s&quot;</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token operator">=</span>FORMAT<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>

lock <span class="token operator">=</span> Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>l<span class="token punctuation">:</span>Lock<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        flag <span class="token operator">=</span> l<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token comment"># flag = l.acquire()</span>
        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
            logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;do sth.&#39;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># \u62FF\u5230\u9501\u505A\u4E8B\u60C5</span>
            l<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;try again&#39;</span><span class="token punctuation">)</span> <span class="token comment"># \u6CA1\u62FF\u5230\u9501\uFF0C\u91CD\u8BD5</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;w-</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>lock<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="queue\u7684\u7EBF\u7A0B\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#queue\u7684\u7EBF\u7A0B\u5B89\u5168" aria-hidden="true">#</a> Queue\u7684\u7EBF\u7A0B\u5B89\u5168</h2><p>\u6807\u51C6\u5E93queue\u6A21\u5757\uFF0C\u63D0\u4F9BFIFO\u7684Queue\u3001LIFO\u7684\u961F\u5217\u3001\u4F18\u5148\u961F\u5217\u3002</p><p>Queue\u7C7B\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u9002\u7528\u4E8E\u540C\u4E00\u8FDB\u7A0B\u5185\u591A\u7EBF\u7A0B\u95F4\u5B89\u5168\u7684\u4EA4\u6362\u6570\u636E\u3002\u5185\u90E8\u4F7F\u7528\u4E86Lock\u548CCondition\u3002</p><p>\u7279\u522B\u6CE8\u610F\u4E0B\u9762\u7684\u4EE3\u7801\u5728\u591A\u7EBF\u7A0B\u4E2D\u4F7F\u7528</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> queue

q <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> q<span class="token punctuation">.</span>qsize<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    q<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u4E0A\u4E0B\u4E24\u53E5\u53EF\u80FD\u88AB\u6253\u65AD</span>

<span class="token keyword">if</span> q<span class="token punctuation">.</span>qsize<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    q<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># \u672A\u5FC5\u4F1A\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5982\u679C\u4E0D\u52A0\u9501\uFF0C\u662F\u4E0D\u53EF\u80FD\u83B7\u5F97\u51C6\u786E\u7684\u5927\u5C0F\u7684\uFF0C\u56E0\u4E3A\u4F60\u521A\u8BFB\u53D6\u5230\u4E86\u4E00\u4E2A\u5927\u5C0F\uFF0C\u8FD8\u6CA1\u6709\u53D6\u8D70\u6570\u636E\uFF0C\u5C31\u6709\u53EF\u80FD\u88AB\u5176\u4ED6\u7EBF\u7A0B\u6539\u4E86\u3002 Queue \u7C7B\u7684 size \u867D\u7136\u52A0\u4E86\u9501\uFF0C\u4F46\u662F\uFF0C\u4F9D\u7136\u4E0D\u80FD\u4FDD\u8BC1\u7ACB\u5373 get\u3001put \u5C31\u80FD\u6210\u529F\uFF0C\u56E0\u4E3A\u8BFB\u53D6\u5927\u5C0F\u548C get\u3001put \u65B9\u6CD5\u662F\u5206\u5F00\u7684\u3002</p>`,54);function t(e,o){return p}var l=n(a,[["render",t],["__file","python-thread-sync.html.vue"]]);export{l as default};

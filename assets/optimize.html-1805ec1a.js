const e=JSON.parse('{"key":"v-3320fa28","path":"/devops/ansible/optimize.html","title":"6 Ansible使用优化","lang":"zh-CN","frontmatter":{"date":"2020-03-20T00:00:00.000Z","category":"自动化工具","tag":["Ansible"],"description":"6 Ansible使用优化 1 加大forks的值 默认forks=5，即最多5个Ansible工作进程。即便是只有6个目标节点，对于\\"效率\\"常挂嘴边的21世纪IT人来说，这么一点数量的工作进程，也显然是杯水车薪。 对于Ansible来说，它的的大多数任务都是分派给目标节点去执行的，所以控制端通常比较闲暇。换句话说，控制端在浪费宝贵的资源。因此，如果没有其它资源的瓶颈(比如网络带宽瓶颈、磁盘IO瓶颈)，Ansible控制端可以尽可能开大马力，让足够多的节点同时开始运行。 加大forks的值，甚至尽情地加大forks的值，可以很大幅度地提升整个任务的执行效率。不用担心太多Ansible工作进程数量会影响Ansible控制端的性能，Ansible工作进程那缓慢的工作量对OS来说实在太轻松了(除非是一些会占用大量资源的特殊任务)。我想，对于一般任务来说，唯一需要考虑的是网络带宽是否足够支撑足够数量目标节点，偶尔可能还需要考虑磁盘瓶颈。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/devops/ansible/optimize.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"6 Ansible使用优化"}],["meta",{"property":"og:description","content":"6 Ansible使用优化 1 加大forks的值 默认forks=5，即最多5个Ansible工作进程。即便是只有6个目标节点，对于\\"效率\\"常挂嘴边的21世纪IT人来说，这么一点数量的工作进程，也显然是杯水车薪。 对于Ansible来说，它的的大多数任务都是分派给目标节点去执行的，所以控制端通常比较闲暇。换句话说，控制端在浪费宝贵的资源。因此，如果没有其它资源的瓶颈(比如网络带宽瓶颈、磁盘IO瓶颈)，Ansible控制端可以尽可能开大马力，让足够多的节点同时开始运行。 加大forks的值，甚至尽情地加大forks的值，可以很大幅度地提升整个任务的执行效率。不用担心太多Ansible工作进程数量会影响Ansible控制端的性能，Ansible工作进程那缓慢的工作量对OS来说实在太轻松了(除非是一些会占用大量资源的特殊任务)。我想，对于一般任务来说，唯一需要考虑的是网络带宽是否足够支撑足够数量目标节点，偶尔可能还需要考虑磁盘瓶颈。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:50:36.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Ansible"}],["meta",{"property":"article:published_time","content":"2020-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:50:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6 Ansible使用优化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-19T13:50:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1 加大forks的值","slug":"_1-加大forks的值","link":"#_1-加大forks的值","children":[]},{"level":2,"title":"2 修改执行策略","slug":"_2-修改执行策略","link":"#_2-修改执行策略","children":[]},{"level":2,"title":"3 使Ansible异步执行任务","slug":"_3-使ansible异步执行任务","link":"#_3-使ansible异步执行任务","children":[{"level":3,"title":"3.1 async和poll指令","slug":"_3-1-async和poll指令","link":"#_3-1-async和poll指令","children":[]},{"level":3,"title":"3.2 等待异步任务","slug":"_3-2-等待异步任务","link":"#_3-2-等待异步任务","children":[]},{"level":3,"title":"3.3 何时使用异步任务","slug":"_3-3-何时使用异步任务","link":"#_3-3-何时使用异步任务","children":[]}]},{"level":2,"title":"4 controlpresist 持久化socket","slug":"_4-controlpresist-持久化socket","link":"#_4-controlpresist-持久化socket","children":[]},{"level":2,"title":"5 开启SSH长连接","slug":"_5-开启ssh长连接","link":"#_5-开启ssh长连接","children":[]},{"level":2,"title":"6 关闭gather_facts","slug":"_6-关闭gather-facts","link":"#_6-关闭gather-facts","children":[]},{"level":2,"title":"7 开启pipeling","slug":"_7-开启pipeling","link":"#_7-开启pipeling","children":[]},{"level":2,"title":"8 Shell层次上的优化：将任务分开执行","slug":"_8-shell层次上的优化-将任务分开执行","link":"#_8-shell层次上的优化-将任务分开执行","children":[]},{"level":2,"title":"9 第三方策略插件：Mitogen for Ansible","slug":"_9-第三方策略插件-mitogen-for-ansible","link":"#_9-第三方策略插件-mitogen-for-ansible","children":[]},{"level":2,"title":"10 优化常规配置","slug":"_10-优化常规配置","link":"#_10-优化常规配置","children":[]},{"level":2,"title":"11 其他优化项","slug":"_11-其他优化项","link":"#_11-其他优化项","children":[]}],"git":{"createdTime":1681912236000,"updatedTime":1681912236000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":8.44,"words":2533},"filePathRelative":"devops/ansible/optimize.md","localizedDate":"2020年3月20日","excerpt":"<h1> 6 Ansible使用优化</h1>\\n<h2> 1 加大forks的值</h2>\\n<p>默认forks=5，即最多5个Ansible工作进程。即便是只有6个目标节点，对于\\"效率\\"常挂嘴边的21世纪IT人来说，这么一点数量的工作进程，也显然是杯水车薪。</p>\\n<p>对于Ansible来说，它的的大多数任务都是分派给目标节点去执行的，所以控制端通常比较闲暇。换句话说，控制端在浪费宝贵的资源。因此，如果没有其它资源的瓶颈(比如网络带宽瓶颈、磁盘IO瓶颈)，Ansible控制端可以尽可能开大马力，让足够多的节点同时开始运行。</p>\\n<p>加大forks的值，甚至尽情地加大forks的值，可以很大幅度地提升整个任务的执行效率。不用担心太多Ansible工作进程数量会影响Ansible控制端的性能，Ansible工作进程那缓慢的工作量对OS来说实在太轻松了(除非是一些会占用大量资源的特殊任务)。我想，对于一般任务来说，唯一需要考虑的是网络带宽是否足够支撑足够数量目标节点，偶尔可能还需要考虑磁盘瓶颈。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

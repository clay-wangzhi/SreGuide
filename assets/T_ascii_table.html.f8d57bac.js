import{_ as s,e as n}from"./app.958f2970.js";const a={},p=n(`<h1 id="\u9644\u5F55-t-ascii-\u8868" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55-t-ascii-\u8868" aria-hidden="true">#</a> \u9644\u5F55 T. ASCII \u8868</h1><p>\u4F20\u7EDF\u4E0A\uFF0C\u8FD9\u7C7B\u4E66\u7684\u9644\u5F55\u4F1A\u6709\u4E00\u4E2A ASCII \u8868\u3002\u4F46\u672C\u4E66\u4E0D\u4F1A\u3002\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\u8FD9\u4E9B\u751F\u6210\u4E00\u5F20\u5B8C\u6574 ASCII \u8868\u7684\u7B80\u77ED\u811A\u672C\u3002</p><p>\u4F8B T-1. \u4E00\u4E2A\u751F\u6210 ASCII \u8868\u7684\u811A\u672C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># ascii.sh</span>
<span class="token comment"># ver. 0.2, reldate 26 Aug 2008</span>
<span class="token comment"># Patched by ABS Guide author.</span>

<span class="token comment"># Original script by Sebastian Arming.</span>
<span class="token comment"># Used with permission (thanks!).</span>

<span class="token builtin class-name">exec</span> <span class="token operator">&gt;</span>ASCII.txt         <span class="token comment">#  Save stdout to file,</span>
                        <span class="token comment">#+ as in the example scripts</span>
                        <span class="token comment">#+ reassign-stdout.sh and upperconv.sh.</span>

<span class="token assign-left variable">MAXNUM</span><span class="token operator">=</span><span class="token number">256</span>
<span class="token assign-left variable"><span class="token environment constant">COLUMNS</span></span><span class="token operator">=</span><span class="token number">5</span>
<span class="token assign-left variable">OCT</span><span class="token operator">=</span><span class="token number">8</span>
<span class="token assign-left variable">OCTSQU</span><span class="token operator">=</span><span class="token number">64</span>
<span class="token assign-left variable">LITTLESPACE</span><span class="token operator">=</span>-3
<span class="token assign-left variable">BIGSPACE</span><span class="token operator">=</span>-5

<span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span> <span class="token comment"># Decimal counter</span>
<span class="token assign-left variable">o</span><span class="token operator">=</span><span class="token number">1</span> <span class="token comment"># Octal counter</span>

<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$i</span>&quot;</span> -lt <span class="token string">&quot;<span class="token variable">$MAXNUM</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>  <span class="token comment"># We don&#39;t have to count past 400 octal.</span>
        <span class="token assign-left variable">paddi</span><span class="token operator">=</span><span class="token string">&quot;    <span class="token variable">$i</span>&quot;</span>
        <span class="token builtin class-name">echo</span> -n <span class="token string">&quot;<span class="token variable">\${paddi<span class="token operator">:</span> $BIGSPACE}</span>  &quot;</span>       <span class="token comment"># Column spacing.</span>
        <span class="token assign-left variable">paddo</span><span class="token operator">=</span><span class="token string">&quot;00<span class="token variable">$o</span>&quot;</span>
<span class="token comment">#       echo -ne &quot;\\\\\${paddo: $LITTLESPACE}&quot;   # Original.</span>
        <span class="token builtin class-name">echo</span> -ne <span class="token string">&quot;<span class="token entity" title="\\\\">\\\\</span>0<span class="token variable">\${paddo<span class="token operator">:</span> $LITTLESPACE}</span>&quot;</span>  <span class="token comment"># Fixup.</span>
<span class="token comment">#                   ^</span>
        <span class="token builtin class-name">echo</span> -n <span class="token string">&quot;     &quot;</span>
        <span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> i <span class="token operator">%</span> $COLUMNS <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>       <span class="token comment"># New line.</span>
           <span class="token builtin class-name">echo</span>
        <span class="token keyword">fi</span>
        <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">++</span><span class="token punctuation">,</span> o<span class="token operator">++</span><span class="token punctuation">))</span></span>
        <span class="token comment"># The octal notation for 8 is 10, and 64 decimal is 100 octal.</span>
        <span class="token variable"><span class="token punctuation">((</span> i <span class="token operator">%</span> $OCT <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">))</span></span>    <span class="token operator">&amp;&amp;</span> <span class="token variable"><span class="token punctuation">((</span>o<span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">))</span></span>
        <span class="token variable"><span class="token punctuation">((</span> i <span class="token operator">%</span> $OCTSQU <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">))</span></span> <span class="token operator">&amp;&amp;</span> <span class="token variable"><span class="token punctuation">((</span>o<span class="token operator">+=</span><span class="token number">20</span><span class="token punctuation">))</span></span>
<span class="token keyword">done</span>

<span class="token builtin class-name">exit</span> <span class="token variable">$?</span>

<span class="token comment"># Compare this script with the &quot;pr-asc.sh&quot; example.</span>
<span class="token comment"># This one handles &quot;unprintable&quot; characters.</span>

<span class="token comment"># Exercise:</span>
<span class="token comment"># Rewrite this script to use decimal numbers, rather than octal.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u4F8B T-2. \u53E6\u4E00\u4E2A ASCII \u8868\u811A\u672C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># Script author: Joseph Steinhauser</span>
<span class="token comment"># Lightly edited by ABS Guide author, but not commented.</span>
<span class="token comment"># Used in ABS Guide with permission.</span>

<span class="token comment">#-------------------------------------------------------------------------</span>
<span class="token comment">#-- File:  ascii.sh    Print ASCII chart, base 10/8/16         (JETS-2012)</span>
<span class="token comment">#-------------------------------------------------------------------------</span>
<span class="token comment">#-- Usage: ascii [oct|dec|hex|help|8|10|16]</span>
<span class="token comment">#--</span>
<span class="token comment">#-- This script prints out a summary of ASCII char codes from Zero to 127.</span>
<span class="token comment">#-- Numeric values may be printed in Base10, Octal, or Hex.</span>
<span class="token comment">#--</span>
<span class="token comment">#-- Format Based on: /usr/share/lib/pub/ascii with base-10 as default.</span>
<span class="token comment">#-- For more detail, man ascii . . .</span>
<span class="token comment">#-------------------------------------------------------------------------</span>

<span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token environment constant">$BASH_VERSION</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">shopt</span> -s extglob

<span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>
   oct<span class="token operator">|</span><span class="token punctuation">[</span>Oo<span class="token punctuation">]</span>?<span class="token punctuation">(</span><span class="token punctuation">[</span>Cc<span class="token punctuation">]</span><span class="token punctuation">[</span>Tt<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">8</span><span class="token punctuation">)</span>       <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Octal<span class="token punctuation">;</span>  <span class="token assign-left variable">Numy</span><span class="token operator">=</span>3o<span class="token punctuation">;</span><span class="token punctuation">;</span>
   hex<span class="token operator">|</span><span class="token punctuation">[</span>Hh<span class="token punctuation">]</span>?<span class="token punctuation">(</span><span class="token punctuation">[</span>Ee<span class="token punctuation">]</span><span class="token punctuation">[</span>Xx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">16</span><span class="token operator">|</span><span class="token punctuation">[</span>Xx<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Hex<span class="token punctuation">;</span>    <span class="token assign-left variable">Numy</span><span class="token operator">=</span>2X<span class="token punctuation">;</span><span class="token punctuation">;</span>
   <span class="token builtin class-name">help</span><span class="token operator">|</span>?<span class="token punctuation">(</span>-<span class="token punctuation">)</span><span class="token punctuation">[</span>h?<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token function">sed</span> -n <span class="token string">&#39;2,/^[ ]*$/p&#39;</span> <span class="token variable">$0</span><span class="token punctuation">;</span><span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
   code<span class="token operator">|</span><span class="token punctuation">[</span>Cc<span class="token punctuation">]</span><span class="token punctuation">[</span>Oo<span class="token punctuation">]</span><span class="token punctuation">[</span>Dd<span class="token punctuation">]</span><span class="token punctuation">[</span>Ee<span class="token punctuation">]</span><span class="token punctuation">)</span>sed -n <span class="token string">&#39;/case/,$p&#39;</span>   <span class="token variable">$0</span><span class="token punctuation">;</span><span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
   *<span class="token punctuation">)</span> <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Decimal
<span class="token keyword">esac</span> <span class="token comment"># CODE is actually shorter than the chart!</span>

<span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span><span class="token entity" title="\\t">\\t</span>## <span class="token variable">$Obase</span> ASCII Chart ##<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">FM1</span><span class="token operator">=</span><span class="token string">&quot;|%0<span class="token variable">\${Numy<span class="token operator">:-</span>3d}</span>&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">LD</span><span class="token operator">=</span>-1

<span class="token assign-left variable">AB</span><span class="token operator">=</span><span class="token string">&quot;nul soh stx etx eot enq ack bel bs tab nl vt np cr so si dle&quot;</span>
<span class="token assign-left variable">AD</span><span class="token operator">=</span><span class="token string">&quot;dc1 dc2 dc3 dc4 nak syn etb can em sub esc fs gs rs us sp&quot;</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">TOK</span> <span class="token keyword">in</span> <span class="token variable">$AB</span> <span class="token variable">$AD</span><span class="token punctuation">;</span> <span class="token keyword">do</span> ABR<span class="token punctuation">[</span><span class="token variable"><span class="token variable">$((</span>LD<span class="token operator">+=</span><span class="token number">1</span><span class="token variable">))</span></span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$TOK</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span class="token punctuation">;</span>
ABR<span class="token punctuation">[</span><span class="token number">127</span><span class="token punctuation">]</span><span class="token operator">=</span>del

<span class="token assign-left variable">IDX</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$IDX</span> -le <span class="token number">127</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">CHR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${ABR<span class="token punctuation">[</span>$IDX<span class="token punctuation">]</span>}</span>&quot;</span>
   <span class="token keyword">do</span> <span class="token variable"><span class="token punctuation">((</span>\${#CHR}<span class="token punctuation">))</span></span><span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">FM2</span><span class="token operator">=</span><span class="token string">&#39;%-3s&#39;</span><span class="token operator">||</span> <span class="token assign-left variable">FM2</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">printf</span> <span class="token string">&#39;\\\\\\\\%o  &#39;</span> $IDX<span class="token variable">\`</span></span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token variable">$FM1</span> <span class="token variable">$FM2</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$IDX</span>&quot;</span> <span class="token variable">$CHR</span><span class="token punctuation">;</span> <span class="token variable"><span class="token punctuation">((</span> <span class="token punctuation">(</span>IDX<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">8</span><span class="token punctuation">))</span></span><span class="token operator">||</span><span class="token builtin class-name">echo</span> <span class="token string">&#39;|&#39;</span>
   <span class="token keyword">done</span>

<span class="token builtin class-name">exit</span> <span class="token variable">$?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>\u4F8B T-3. \u7B2C\u4E09\u4E2A ASCII \u8868\u811A\u672C\uFF0C\u4F7F\u7528 <em>awk</em></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># ASCII table script, using awk.</span>
<span class="token comment"># Author: Joseph Steinhauser</span>
<span class="token comment"># Used in ABS Guide with permission.</span>


<span class="token comment">#-------------------------------------------------------------------------</span>
<span class="token comment">#-- File:  ascii     Print ASCII chart, base 10/8/16         (JETS-2010)</span>
<span class="token comment">#-------------------------------------------------------------------------</span>
<span class="token comment">#-- Usage: ascii [oct|dec|hex|help|8|10|16]</span>
<span class="token comment">#--</span>
<span class="token comment">#-- This script prints a summary of ASCII char codes from Zero to 127.</span>
<span class="token comment">#-- Numeric values may be printed in Base10, Octal, or Hex (Base16).</span>
<span class="token comment">#--</span>
<span class="token comment">#-- Format Based on: /usr/share/lib/pub/ascii with base-10 as default.</span>
<span class="token comment">#-- For more detail, man ascii</span>
<span class="token comment">#-------------------------------------------------------------------------</span>

<span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token environment constant">$BASH_VERSION</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">shopt</span> -s extglob

<span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>
   oct<span class="token operator">|</span><span class="token punctuation">[</span>Oo<span class="token punctuation">]</span>?<span class="token punctuation">(</span><span class="token punctuation">[</span>Cc<span class="token punctuation">]</span><span class="token punctuation">[</span>Tt<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">8</span><span class="token punctuation">)</span>       <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Octal<span class="token punctuation">;</span>  <span class="token assign-left variable">Numy</span><span class="token operator">=</span>3o<span class="token punctuation">;</span><span class="token punctuation">;</span>
   hex<span class="token operator">|</span><span class="token punctuation">[</span>Hh<span class="token punctuation">]</span>?<span class="token punctuation">(</span><span class="token punctuation">[</span>Ee<span class="token punctuation">]</span><span class="token punctuation">[</span>Xx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">16</span><span class="token operator">|</span><span class="token punctuation">[</span>Xx<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Hex<span class="token punctuation">;</span>    <span class="token assign-left variable">Numy</span><span class="token operator">=</span>2X<span class="token punctuation">;</span><span class="token punctuation">;</span>
   <span class="token builtin class-name">help</span><span class="token operator">|</span>?<span class="token punctuation">(</span>-<span class="token punctuation">)</span><span class="token punctuation">[</span>h?<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token function">sed</span> -n <span class="token string">&#39;2,/^[ ]*$/p&#39;</span> <span class="token variable">$0</span><span class="token punctuation">;</span><span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
   code<span class="token operator">|</span><span class="token punctuation">[</span>Cc<span class="token punctuation">]</span><span class="token punctuation">[</span>Oo<span class="token punctuation">]</span><span class="token punctuation">[</span>Dd<span class="token punctuation">]</span><span class="token punctuation">[</span>Ee<span class="token punctuation">]</span><span class="token punctuation">)</span>sed -n <span class="token string">&#39;/case/,$p&#39;</span>   <span class="token variable">$0</span><span class="token punctuation">;</span><span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
   *<span class="token punctuation">)</span> <span class="token assign-left variable">Obase</span><span class="token operator">=</span>Decimal
<span class="token keyword">esac</span>
<span class="token builtin class-name">export</span> Obase   <span class="token comment"># CODE is actually shorter than the chart!</span>

<span class="token function">awk</span> <span class="token string">&#39;BEGIN{print &quot;\\n\\t\\t## &quot;ENVIRON[&quot;Obase&quot;]&quot; ASCII Chart ##\\n&quot;
           ab=&quot;soh,stx,etx,eot,enq,ack,bel,bs,tab,nl,vt,np,cr,so,si,dle,&quot;
           ad=&quot;dc1,dc2,dc3,dc4,nak,syn,etb,can,em,sub,esc,fs,gs,rs,us,sp&quot;
           split(ab ad,abr,&quot;,&quot;);abr[0]=&quot;nul&quot;;abr[127]=&quot;del&quot;;
           fm1=&quot;|%0&#39;</span>&quot;<span class="token variable">\${Numy<span class="token operator">:-</span> 4d}</span><span class="token string">&quot;&#39; %-3s&quot;</span>
           for<span class="token punctuation">(</span>idx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>idx<span class="token operator">&lt;</span><span class="token number">128</span><span class="token punctuation">;</span>idx++<span class="token punctuation">)</span><span class="token punctuation">{</span>fmt<span class="token operator">=</span>fm1 <span class="token punctuation">(</span>++colz%8?<span class="token string">&quot;&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;|<span class="token entity" title="\\n">\\n</span>&quot;</span><span class="token punctuation">)</span>
           printf<span class="token punctuation">(</span>fmt,idx,<span class="token punctuation">(</span>idx <span class="token keyword">in</span> abr<span class="token punctuation">)</span>?abr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>:sprintf<span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span>,idx<span class="token punctuation">))</span><span class="token punctuation">}</span> <span class="token punctuation">}</span>&#39;

<span class="token builtin class-name">exit</span> <span class="token variable">$?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,8);function e(t,o){return p}var c=s(a,[["render",e],["__file","T_ascii_table.html.vue"]]);export{c as default};

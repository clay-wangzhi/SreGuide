const e=JSON.parse(`{"key":"v-39cd5056","path":"/cloudnative/kubernetes/cri/k8s-gpu.html","title":"k8s 适配 GPU","lang":"zh-CN","frontmatter":{"order":1,"category":"云原生","tag":["Kubernetes"],"description":"k8s 适配 GPU GPU 安装步骤 # centos7 内核升级后 GPU 安装步骤 # 1. 加载 新 内核 # 查看内核列表 awk -F\\\\' '$1==\\"menuentry \\" {print $2}' /etc/grub2.cfg # 指定新内核启动 grub2-set-default 'CentOS Linux (5.4.186-1.el7.elrepo.x86_64) 7 (Core)' reboot # 2. 准备GPU驱动安装环境 # 卸载原有内核的header与devel模块 yum -y remove kernel-headers kernel-devel # 安装现有内核headers和devel模块（必须，显卡编译需要） yum --enablerepo=elrepo-kernel install -y kernel-lt-devel-$(uname -r) kernel-lt-headers-$(uname -r) # 卸载旧的安装包 cd 目录防止 当前目录有相关安装包，卸载不干净 cd /opt yum -y remove nvidia* # 安装新版本 gcc ，并使用新版本gcc，注意需要当前会话操作，临时生效 yum install centos-release-scl -y yum install devtoolset-8-gcc* -y scl enable devtoolset-8 bash # 安装相关依赖 yum -y install libglvnd* # 3. 编译安装GPU驱动 # 从官网下载 .run 文件，我放在了xxx /home/clay/NVIDIA-Linux-x86_64-510.54.run , 可以直接去服务器拿 # 执行安装命令（/usr/src/kernels目录下文件需要安装kernel-devel包后才会出现），具体的安装包与内核路径根据实际情况填写 ./NVIDIA-Linux-x86_64-510.54.run --kernel-source-path=/usr/src/kernels/5.4.186-1.el7.elrepo.x86_64 -k $(uname -r) -s # 查看显卡驱动是否安装成功 nvidia-smi","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/kubernetes/cri/k8s-gpu.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"k8s 适配 GPU"}],["meta",{"property":"og:description","content":"k8s 适配 GPU GPU 安装步骤 # centos7 内核升级后 GPU 安装步骤 # 1. 加载 新 内核 # 查看内核列表 awk -F\\\\' '$1==\\"menuentry \\" {print $2}' /etc/grub2.cfg # 指定新内核启动 grub2-set-default 'CentOS Linux (5.4.186-1.el7.elrepo.x86_64) 7 (Core)' reboot # 2. 准备GPU驱动安装环境 # 卸载原有内核的header与devel模块 yum -y remove kernel-headers kernel-devel # 安装现有内核headers和devel模块（必须，显卡编译需要） yum --enablerepo=elrepo-kernel install -y kernel-lt-devel-$(uname -r) kernel-lt-headers-$(uname -r) # 卸载旧的安装包 cd 目录防止 当前目录有相关安装包，卸载不干净 cd /opt yum -y remove nvidia* # 安装新版本 gcc ，并使用新版本gcc，注意需要当前会话操作，临时生效 yum install centos-release-scl -y yum install devtoolset-8-gcc* -y scl enable devtoolset-8 bash # 安装相关依赖 yum -y install libglvnd* # 3. 编译安装GPU驱动 # 从官网下载 .run 文件，我放在了xxx /home/clay/NVIDIA-Linux-x86_64-510.54.run , 可以直接去服务器拿 # 执行安装命令（/usr/src/kernels目录下文件需要安装kernel-devel包后才会出现），具体的安装包与内核路径根据实际情况填写 ./NVIDIA-Linux-x86_64-510.54.run --kernel-source-path=/usr/src/kernels/5.4.186-1.el7.elrepo.x86_64 -k $(uname -r) -s # 查看显卡驱动是否安装成功 nvidia-smi"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-18T15:14:52.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-06-18T15:14:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"k8s 适配 GPU\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-18T15:14:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"GPU 安装步骤","slug":"gpu-安装步骤","link":"#gpu-安装步骤","children":[]},{"level":2,"title":"nvidia-docker 2.0 安装步骤","slug":"nvidia-docker-2-0-安装步骤","link":"#nvidia-docker-2-0-安装步骤","children":[]}],"git":{"createdTime":1687101292000,"updatedTime":1687101292000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.29,"words":388},"filePathRelative":"cloudnative/kubernetes/cri/k8s-gpu.md","localizedDate":"2023年6月18日","excerpt":"<h1> k8s 适配 GPU</h1>\\n<h2> GPU 安装步骤</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># centos7 内核升级后   GPU 安装步骤</span>\\n\\n<span class=\\"token comment\\"># 1.  加载 新 内核</span>\\n<span class=\\"token comment\\"># 查看内核列表</span>\\n<span class=\\"token function\\">awk</span> -F<span class=\\"token punctuation\\">\\\\</span>' <span class=\\"token string\\">'$1==\\"menuentry \\" {print $2}'</span> /etc/grub2.cfg\\n<span class=\\"token comment\\"># 指定新内核启动</span>\\ngrub2-set-default <span class=\\"token string\\">'CentOS Linux (5.4.186-1.el7.elrepo.x86_64) 7 (Core)'</span>\\n<span class=\\"token function\\">reboot</span>\\n\\n<span class=\\"token comment\\"># 2. 准备GPU驱动安装环境</span>\\n<span class=\\"token comment\\"># 卸载原有内核的header与devel模块</span>\\nyum <span class=\\"token parameter variable\\">-y</span> remove kernel-headers kernel-devel\\n<span class=\\"token comment\\"># 安装现有内核headers和devel模块（必须，显卡编译需要）</span>\\nyum <span class=\\"token parameter variable\\">--enablerepo</span><span class=\\"token operator\\">=</span>elrepo-kernel <span class=\\"token function\\">install</span> <span class=\\"token parameter variable\\">-y</span> kernel-lt-devel-<span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">uname</span> <span class=\\"token parameter variable\\">-r</span><span class=\\"token variable\\">)</span></span> kernel-lt-headers-<span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">uname</span> <span class=\\"token parameter variable\\">-r</span><span class=\\"token variable\\">)</span></span>\\n<span class=\\"token comment\\"># 卸载旧的安装包 cd 目录防止 当前目录有相关安装包，卸载不干净</span>\\n<span class=\\"token builtin class-name\\">cd</span> /opt\\nyum <span class=\\"token parameter variable\\">-y</span> remove nvidia*\\n<span class=\\"token comment\\"># 安装新版本 gcc ，并使用新版本gcc，注意需要当前会话操作，临时生效</span>\\nyum <span class=\\"token function\\">install</span> centos-release-scl <span class=\\"token parameter variable\\">-y</span>\\nyum <span class=\\"token function\\">install</span> devtoolset-8-gcc* <span class=\\"token parameter variable\\">-y</span>\\nscl <span class=\\"token builtin class-name\\">enable</span> devtoolset-8 <span class=\\"token function\\">bash</span>\\n<span class=\\"token comment\\"># 安装相关依赖</span>\\nyum <span class=\\"token parameter variable\\">-y</span> <span class=\\"token function\\">install</span> libglvnd*\\n\\n<span class=\\"token comment\\"># 3. 编译安装GPU驱动</span>\\n<span class=\\"token comment\\"># 从官网下载 .run 文件，我放在了xxx /home/clay/NVIDIA-Linux-x86_64-510.54.run , 可以直接去服务器拿</span>\\n<span class=\\"token comment\\"># 执行安装命令（/usr/src/kernels目录下文件需要安装kernel-devel包后才会出现），具体的安装包与内核路径根据实际情况填写</span>\\n./NVIDIA-Linux-x86_64-510.54.run --kernel-source-path<span class=\\"token operator\\">=</span>/usr/src/kernels/5.4.186-1.el7.elrepo.x86_64 <span class=\\"token parameter variable\\">-k</span> <span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">uname</span> <span class=\\"token parameter variable\\">-r</span><span class=\\"token variable\\">)</span></span> <span class=\\"token parameter variable\\">-s</span>\\n<span class=\\"token comment\\"># 查看显卡驱动是否安装成功</span>\\nnvidia-smi\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Clay"},"autoDesc":true}`);export{e as data};

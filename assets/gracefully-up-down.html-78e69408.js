const e=JSON.parse('{"key":"v-8669d30e","path":"/cloudnative/best-practice/gracefully-up-down.html","title":"容器化后无损上下线解决方案","lang":"zh-CN","frontmatter":{"isOriginal":true,"order":3,"category":"云原生","tag":["Kubernetes"],"description":"容器化后无损上下线解决方案 说明： 本文主要以 Spring Cloud 应用举例 1. 背景 绝大数事故发生在应用上下线发布阶段，所以要尽可能避免发布过程中由于应用自身代码问题对用户造成的影响。 业界发布规范： 可灰度（可以通过 Argo Rollout/OpenKruise 支持） 可观测（容器状态、容器速查大盘、发布/配置变更/K8s 事件、业务日志/业务埋点、jstack/jvm/gc、链路，主要是通过指标、事件、日志、链路几大类进行收集分析，后续可观测性会介绍具体方案及关键指标收集/汇聚/展示） 可回滚（应用维度的快照回滚）","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/best-practice/gracefully-up-down.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"容器化后无损上下线解决方案"}],["meta",{"property":"og:description","content":"容器化后无损上下线解决方案 说明： 本文主要以 Spring Cloud 应用举例 1. 背景 绝大数事故发生在应用上下线发布阶段，所以要尽可能避免发布过程中由于应用自身代码问题对用户造成的影响。 业界发布规范： 可灰度（可以通过 Argo Rollout/OpenKruise 支持） 可观测（容器状态、容器速查大盘、发布/配置变更/K8s 事件、业务日志/业务埋点、jstack/jvm/gc、链路，主要是通过指标、事件、日志、链路几大类进行收集分析，后续可观测性会介绍具体方案及关键指标收集/汇聚/展示） 可回滚（应用维度的快照回滚）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-21T12:28:53.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-11-21T12:28:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"容器化后无损上下线解决方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-21T12:28:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 背景","slug":"_1-背景","link":"#_1-背景","children":[]},{"level":2,"title":"2. 容器应用上下线流程分析","slug":"_2-容器应用上下线流程分析","link":"#_2-容器应用上下线流程分析","children":[{"level":3,"title":"2.1 应用上线","slug":"_2-1-应用上线","link":"#_2-1-应用上线","children":[]},{"level":3,"title":"2.2 应用下线","slug":"_2-2-应用下线","link":"#_2-2-应用下线","children":[]}]},{"level":2,"title":"3. 现状遇到的问题","slug":"_3-现状遇到的问题","link":"#_3-现状遇到的问题","children":[{"level":3,"title":"3.1 消费者无法及时感知生产者已下线","slug":"_3-1-消费者无法及时感知生产者已下线","link":"#_3-1-消费者无法及时感知生产者已下线","children":[]},{"level":3,"title":"3.2 初始化慢","slug":"_3-2-初始化慢","link":"#_3-2-初始化慢","children":[]},{"level":3,"title":"3.3 注册太早","slug":"_3-3-注册太早","link":"#_3-3-注册太早","children":[]},{"level":3,"title":"3.4 发布态与运行态未对⻬","slug":"_3-4-发布态与运行态未对⻬","link":"#_3-4-发布态与运行态未对⻬","children":[]}]},{"level":2,"title":"4. 解决方案","slug":"_4-解决方案","link":"#_4-解决方案","children":[{"level":3,"title":"4.1 无损下线","slug":"_4-1-无损下线","link":"#_4-1-无损下线","children":[]},{"level":3,"title":"4.2 无损上线","slug":"_4-2-无损上线","link":"#_4-2-无损上线","children":[]}]},{"level":2,"title":"5 总结","slug":"_5-总结","link":"#_5-总结","children":[]}],"git":{"createdTime":1700480945000,"updatedTime":1700569733000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":2}]},"readingTime":{"minutes":9.98,"words":2994},"filePathRelative":"cloudnative/best-practice/gracefully-up-down.md","localizedDate":"2023年11月20日","excerpt":"<h1> 容器化后无损上下线解决方案</h1>\\n<blockquote>\\n<p>说明： 本文主要以 Spring Cloud 应用举例</p>\\n</blockquote>\\n<h2> 1. 背景</h2>\\n<p><strong>绝大数事故发生在应用上下线发布阶段</strong>，所以要尽可能避免发布过程中由于应用自身代码问题对用户造成的影响。</p>\\n<p>业界发布规范：</p>\\n<ul>\\n<li>可灰度（可以通过 Argo Rollout/OpenKruise 支持）</li>\\n<li>可观测（容器状态、容器速查大盘、发布/配置变更/K8s 事件、业务日志/业务埋点、jstack/jvm/gc、链路，主要是通过指标、事件、日志、链路几大类进行收集分析，后续可观测性会介绍具体方案及关键指标收集/汇聚/展示）</li>\\n<li>可回滚（应用维度的快照回滚）</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

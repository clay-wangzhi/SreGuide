import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as a,c as o,b as t,d as e,a as n,e as r}from"./app-f536079c.js";const d={},c=t("h1",{id:"_33-选项",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_33-选项","aria-hidden":"true"},"#"),e(" 33 选项")],-1),h=t("p",null,"选项用来更改shell和脚本的行为.",-1),g={href:"http://tldp.org/LDP/abs/html/internal.html#SETREF",target:"_blank",rel:"noopener noreferrer"},_=t("strong",null,"set -o option-name",-1),f=t("strong",null,"set -option-abbrev",-1),b=r(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/bin/bash

set -o verbose
# # 打印出所有执行前的命令.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/bin/bash

set -v
# 与上边的例子具有相同的效果.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://tldp.org/LDP/abs/images/note.gif" alt="extra"> 如果你想在脚本中禁用某个选项, 可以使用<strong>set +o option-name</strong>或<strong>set +option-abbrev</strong>.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/bin/bash
set -o verbose
# 激活命令回显.
command
...
command

set +o verbose
# 禁用命令回显.
command
# 没有命令回显了.

set -v
# 激活命令回显.
command
...
command

set +v
# 禁用命令回显.
command

exit 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有另一种可以在脚本中启用选项的方法, 那就是在脚本头部, #!的后边直接指定选项.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/bin/bash -x
#
# 下边是脚本的主要内容.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以从命令行中打开脚本的选项. 某些不能与<strong>set</strong>命令一起用的选项就可以使用这种方法来打开. - i就是其中之一, 这个选项用来强制脚本以交互的方式运行.</p><p><strong>bash - v script - name</strong></p><p><strong>bash - o verbose script - name</strong></p><p>下表列出了一些有用的选项. 它们都可以使用缩写的形式来指定(开头加一个破折号), 也可以使用完整名字来指定(开头加上双破折号, 或者使用-o选项来指定).</p><h2 id="bash-选项表" tabindex="-1"><a class="header-anchor" href="#bash-选项表" aria-hidden="true">#</a> Bash 选项表</h2>`,11),x=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"缩写"),t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"作用")])],-1),v=t("tr",null,[t("td",{style:{"text-align":"left"}},"-B"),t("td",{style:{"text-align":"left"}},"brace expansion"),t("td",{style:{"text-align":"left"}},[e("开启"),t("a",{href:""},"大括号展开"),e("(默认 setting = on)")])],-1),m=t("tr",null,[t("td",{style:{"text-align":"left"}},"+B"),t("td",{style:{"text-align":"left"}},"brace expansion"),t("td",{style:{"text-align":"left"}},"关闭大括号展开")],-1),u=t("tr",null,[t("td",{style:{"text-align":"left"}},"-C"),t("td",{style:{"text-align":"left"}},"noclobber"),t("td",{style:{"text-align":"left"}},"防止重定向时覆盖文件(可能会被>|覆盖)")],-1),p=t("tr",null,[t("td",{style:{"text-align":"left"}},"-D"),t("td",{style:{"text-align":"left"}},"(none)"),t("td",{style:{"text-align":"left"}},"列出用双引号引用起来的, 以$为前缀的字符串, 但是不执行脚本中的命令")],-1),y=t("tr",null,[t("td",{style:{"text-align":"left"}},"-a"),t("td",{style:{"text-align":"left"}},"all export"),t("td",{style:{"text-align":"left"}},"export(导出)所有定义过的变量")],-1),L=t("tr",null,[t("td",{style:{"text-align":"left"}},"-b"),t("td",{style:{"text-align":"left"}},"notify"),t("td",{style:{"text-align":"left"}},"当后台运行的作业终止时, 给出通知(脚本中并不常见)")],-1),P=t("tr",null,[t("td",{style:{"text-align":"left"}},"-c ..."),t("td",{style:{"text-align":"left"}},"(none)"),t("td",{style:{"text-align":"left"}},"从...中读取命令")],-1),k=t("td",{style:{"text-align":"left"}},"checkjobs",-1),E=t("td",{style:{"text-align":"left"}},"(none)",-1),D={style:{"text-align":"left"}},S={href:"http://tldp.org/LDP/abs/html/x9644.html#JOBSREF",target:"_blank",rel:"noopener noreferrer"},O={href:"http://tldp.org/LDP/abs/html/bashver4.html#BASH4REF",target:"_blank",rel:"noopener noreferrer"},B=t("td",{style:{"text-align":"left"}},"-e",-1),R=t("td",{style:{"text-align":"left"}},"errexit",-1),T={style:{"text-align":"left"}},F={href:"http://tldp.org/LDP/abs/html/loops1.html#UNTILLOOPREF",target:"_blank",rel:"noopener noreferrer"},N={href:"http://tldp.org/LDP/abs/html/loops1.html#WHILELOOPREF",target:"_blank",rel:"noopener noreferrer"},I={href:"http://tldp.org/LDP/abs/html/testconstructs.html#TESTCONSTRUCTS1",target:"_blank",rel:"noopener noreferrer"},A={href:"http://tldp.org/LDP/abs/html/list-cons.html#LCONS1",target:"_blank",rel:"noopener noreferrer"},C=t("tr",null,[t("td",{style:{"text-align":"left"}},"-f"),t("td",{style:{"text-align":"left"}},"noglob"),t("td",{style:{"text-align":"left"}},"禁用文件名扩展(就是禁用globbing)")],-1),V=t("td",{style:{"text-align":"left"}},"globstar",-1),X={style:{"text-align":"left"}},H={href:"http://tldp.org/LDP/abs/html/bashver4.html#GLOBSTARREF",target:"_blank",rel:"noopener noreferrer"},U={style:{"text-align":"left"}},j={href:"http://tldp.org/LDP/abs/html/globbingref.html",target:"_blank",rel:"noopener noreferrer"},w={href:"http://tldp.org/LDP/abs/html/bashver4.html#BASH4REF",target:"_blank",rel:"noopener noreferrer"},G=t("tr",null,[t("td",{style:{"text-align":"left"}},"-i"),t("td",{style:{"text-align":"left"}},"interactive"),t("td",{style:{"text-align":"left"}},"让脚本以交互模式运行")],-1),J=t("tr",null,[t("td",{style:{"text-align":"left"}},"-n"),t("td",{style:{"text-align":"left"}},"noexec"),t("td",{style:{"text-align":"left"}},"从脚本中读取命令, 但是不执行它们(做语法检查)")],-1),M=t("tr",null,[t("td",{style:{"text-align":"left"}},"-o Option-Name"),t("td",{style:{"text-align":"left"}},"(none)"),t("td",{style:{"text-align":"left"}},"调用Option-Name选项")],-1),W=t("td",{style:{"text-align":"left"}},"-o posix",-1),$=t("td",{style:{"text-align":"left"}},"POSIX",-1),q={style:{"text-align":"left"}},z={href:"http://tldp.org/LDP/abs/html/sha-bang.html#POSIX2REF",target:"_blank",rel:"noopener noreferrer"},K=t("td",{style:{"text-align":"left"}},"-o pipefail",-1),Q=t("td",{style:{"text-align":"left"}},"pipe failure",-1),Y={style:{"text-align":"left"}},Z={href:"http://tldp.org/LDP/abs/html/exit-status.html#EXITSTATUSREF",target:"_blank",rel:"noopener noreferrer"},tt=t("tr",null,[t("td",{style:{"text-align":"left"}},"-p"),t("td",{style:{"text-align":"left"}},"privileged"),t("td",{style:{"text-align":"left"}},'以"suid"身份来运行脚本(小心!)')],-1),et=t("td",{style:{"text-align":"left"}},"-r",-1),lt=t("td",{style:{"text-align":"left"}},"restricted",-1),nt={style:{"text-align":"left"}},st={href:"http://tldp.org/LDP/abs/html/restricted-sh.html",target:"_blank",rel:"noopener noreferrer"},it=t("tr",null,[t("td",{style:{"text-align":"left"}},"-s"),t("td",{style:{"text-align":"left"}},"stdin"),t("td",{style:{"text-align":"left"}},"从stdin 中读取命令")],-1),at=t("tr",null,[t("td",{style:{"text-align":"left"}},"-t"),t("td",{style:{"text-align":"left"}},"(none)"),t("td",{style:{"text-align":"left"}},"执行完第一个命令之后, 就退出")],-1),ot=t("tr",null,[t("td",{style:{"text-align":"left"}},"-u"),t("td",{style:{"text-align":"left"}},"nounset"),t("td",{style:{"text-align":"left"}},"如果尝试使用了未定义的变量, 就会输出一个错误消息, 然后强制退出")],-1),rt=t("tr",null,[t("td",{style:{"text-align":"left"}},"-v"),t("td",{style:{"text-align":"left"}},"verbose"),t("td",{style:{"text-align":"left"}},"在执行每个命令之前, 把每个命令打印到stdout上")],-1),dt=t("tr",null,[t("td",{style:{"text-align":"left"}},"-x"),t("td",{style:{"text-align":"left"}},"xtrace"),t("td",{style:{"text-align":"left"}},"与-v选项类似, 但是会打印完整命令")],-1),ct=t("td",{style:{"text-align":"left"}},"-",-1),ht=t("td",{style:{"text-align":"left"}},"(none)",-1),gt={style:{"text-align":"left"}},_t={href:"http://tldp.org/LDP/abs/html/internalvariables.html#POSPARAMREF",target:"_blank",rel:"noopener noreferrer"},ft=t("tr",null,[t("td",{style:{"text-align":"left"}},"--"),t("td",{style:{"text-align":"left"}},"(none)"),t("td",{style:{"text-align":"left"}},"unset(释放)位置参数. 如果指定了参数列表(-- arg1 arg2), 那么位置 参数将会依次设置到参数列表中.")],-1);function bt(xt,vt){const l=i("ExternalLinkIcon");return a(),o("div",null,[c,h,t("p",null,[t("a",g,[e("set"),n(l)]),e("命令用来打开脚本中的选项. 你可以在脚本中任何你想让选项生效的地方插入"),_,e(", 或者使用更简单的形式, "),f,e(". 这两种形式是等价的.")]),b,t("table",null,[x,t("tbody",null,[v,m,u,p,y,L,P,t("tr",null,[k,E,t("td",D,[e("通知有活跃shell"),t("a",S,[e("任务"),n(l)]),e("的用户退出。"),t("a",O,[e("Bash 4"),n(l)]),e('版本中引入，仍然处于"实验"阶段. 用法:shopt -s checkjobs .(注意：可能会hang！')])]),t("tr",null,[B,R,t("td",T,[e("当脚本发生第一个错误时, 就退出脚本, 换种说法就是, 当一个命令返回非零值时, 就退出脚本(除了"),t("a",F,[e("until"),n(l)]),e("或"),t("a",N,[e("while loops"),n(l)]),e(", "),t("a",I,[e("if-tests"),n(l)]),e(", "),t("a",A,[e("list constructs"),n(l)]),e(")")])]),C,t("tr",null,[V,t("td",X,[t("a",H,[e("globbing star-match"),n(l)])]),t("td",U,[e("打开"),t("a",j,[e("globbling"),n(l)]),e("操作符(Bash "),t("a",w,[e("4+"),n(l)]),e("). 使用方法：shopt -s globstar")])]),G,J,M,t("tr",null,[W,$,t("td",q,[e("修改Bash或被调用脚本的行为, 使其符合"),t("a",z,[e("POSIX"),n(l)]),e("标准.")])]),t("tr",null,[K,Q,t("td",Y,[e("创建一个管道去返回最后一条命令的"),t("a",Z,[e("退出状态码"),n(l)]),e("，这个返回值是一个非0的返回值")])]),tt,t("tr",null,[et,lt,t("td",nt,[e("以受限模式来运行脚本(参考 "),t("a",st,[e("22"),n(l)]),e(").")])]),it,at,ot,rt,dt,t("tr",null,[ct,ht,t("td",gt,[e("选项结束标志. 后面的参数为"),t("a",_t,[e("位置参数"),n(l)]),e(".")])]),ft])])])}const pt=s(d,[["render",bt],["__file","33_options.html.vue"]]);export{pt as default};

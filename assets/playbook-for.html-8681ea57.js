const e=JSON.parse('{"key":"v-64097c30","path":"/devops/ansible/playbook-for.html","title":"4.2 Playbook循环语句","lang":"zh-CN","frontmatter":{"date":"2020-03-20T00:00:00.000Z","category":"自动化工具","tag":["Ansible"],"description":"4.2 Playbook循环语句 1 简介 我们在编写playbook的时候，不可避免的要执行一些重复性操作，比如指安装软件包，批量创建用户，操作某个目录下的所有文件等。正如我们所说，ansible一门简单的自动化语言，所以流程控制、循环语句这些编程语言的基本元素它同样都具备。 loop循环，它是在Ansible 2.5版本中新添加的循环结构，等价于with_list。大多数时候，with_xxx的循环都可以通过一定的手段转换成loop循环，所以从Ansible 2.5版本之后，原来经常使用的with_items循环都可以尝试转换成loop。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/devops/ansible/playbook-for.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"4.2 Playbook循环语句"}],["meta",{"property":"og:description","content":"4.2 Playbook循环语句 1 简介 我们在编写playbook的时候，不可避免的要执行一些重复性操作，比如指安装软件包，批量创建用户，操作某个目录下的所有文件等。正如我们所说，ansible一门简单的自动化语言，所以流程控制、循环语句这些编程语言的基本元素它同样都具备。 loop循环，它是在Ansible 2.5版本中新添加的循环结构，等价于with_list。大多数时候，with_xxx的循环都可以通过一定的手段转换成loop循环，所以从Ansible 2.5版本之后，原来经常使用的with_items循环都可以尝试转换成loop。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:50:36.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Ansible"}],["meta",{"property":"article:published_time","content":"2020-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:50:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.2 Playbook循环语句\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-19T13:50:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2 loop关键字说明","slug":"_2-loop关键字说明","link":"#_2-loop关键字说明","children":[]},{"level":2,"title":"3 循环的控制：loop_control","slug":"_3-循环的控制-loop-control","link":"#_3-循环的控制-loop-control","children":[]},{"level":2,"title":"3 在循环语句中注册变量","slug":"_3-在循环语句中注册变量","link":"#_3-在循环语句中注册变量","children":[]},{"level":2,"title":"4 旧循环语句","slug":"_4-旧循环语句","link":"#_4-旧循环语句","children":[{"level":3,"title":"4.1 with_items","slug":"_4-1-with-items","link":"#_4-1-with-items","children":[]},{"level":3,"title":"4.2 with_nested","slug":"_4-2-with-nested","link":"#_4-2-with-nested","children":[]},{"level":3,"title":"4.3 with_dict","slug":"_4-3-with-dict","link":"#_4-3-with-dict","children":[]},{"level":3,"title":"4.4 with_fileglob","slug":"_4-4-with-fileglob","link":"#_4-4-with-fileglob","children":[]},{"level":3,"title":"4.5 with_lines","slug":"_4-5-with-lines","link":"#_4-5-with-lines","children":[]},{"level":3,"title":"4.6 with_subelement","slug":"_4-6-with-subelement","link":"#_4-6-with-subelement","children":[]},{"level":3,"title":"4.7 with_sequence","slug":"_4-7-with-sequence","link":"#_4-7-with-sequence","children":[]},{"level":3,"title":"4.8 with_random_choice","slug":"_4-8-with-random-choice","link":"#_4-8-with-random-choice","children":[]},{"level":3,"title":"4.9 do-Util循环","slug":"_4-9-do-util循环","link":"#_4-9-do-util循环","children":[]},{"level":3,"title":"4.10 with_together","slug":"_4-10-with-together","link":"#_4-10-with-together","children":[]}]}],"git":{"createdTime":1681912236000,"updatedTime":1681912236000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":6.41,"words":1923},"filePathRelative":"devops/ansible/playbook-for.md","localizedDate":"2020年3月20日","excerpt":"<h1> 4.2 Playbook循环语句</h1>\\n<h2> 1 简介</h2>\\n<p>我们在编写playbook的时候，不可避免的要执行一些重复性操作，比如指安装软件包，批量创建用户，操作某个目录下的所有文件等。正如我们所说，ansible一门简单的自动化语言，所以流程控制、循环语句这些编程语言的基本元素它同样都具备。</p>\\n<p>loop循环，它是在Ansible 2.5版本中新添加的循环结构，等价于with_list。大多数时候，with_xxx的循环都可以通过一定的手段转换成loop循环，所以从Ansible 2.5版本之后，原来经常使用的with_items循环都可以尝试转换成loop。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

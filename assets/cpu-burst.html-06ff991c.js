import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e}from"./app-4d4f7d7e.js";const t={},l=e(`<h1 id="k8s-cpu-throttle-优化方案" tabindex="-1"><a class="header-anchor" href="#k8s-cpu-throttle-优化方案" aria-hidden="true">#</a> K8s CPU Throttle 优化方案</h1><h2 id="cpu-throttle-问题详解" tabindex="-1"><a class="header-anchor" href="#cpu-throttle-问题详解" aria-hidden="true">#</a> CPU Throttle 问题详解</h2><p>受内核调度控制周期（cfs_period）影响，容器的 CPU 利用率往往具有一定的欺骗性，下图展示了某容器一段时间的 CPU 使用情况（单位为0.01核），可以看到在 1s 级别的粒度下（图中紫色折线），容器的 CPU 用量较为稳定，平均在 2.5 核左右。根据经验，管理员会将 CPU Limit设置为 4 核。本以为这已经保留了充足的弹性空间，然而若我们将观察粒度放大到 100ms 级别（图中绿色折线），容器的 CPU 用量呈现出了严重的毛刺现象，峰值达到 4 核以上。此时容器会产生频繁的 CPU Throttle，进而导致应用性能下降、RT 抖动，但我们从常用的 CPU 利用率指标中竟然完全无法发现！</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240802142813585.png" alt=""></p><p>毛刺产生的原因通常是由于应用突发性的 CPU 资源需求（如代码逻辑热点、流量突增等），下面我们用一个具体的例子来描述 CPU Throttle 导致应用性能下降的过程。图中展示了一个CPU Limit = 2 的 Web 服务类容器，在收到请求后（req）各线程（Thread）的 CPU 资源分配情况。假设每个请求的处理时间均为 60 ms，可以看到，即使容器在最近整体的 CPU 利用率较低，由于在 100 ms～200 ms 区间内连续处理了4 个请求，将该内核调度周期内的时间片预算（200ms）全部消耗，Thread 2 需要等待下一个周期才能继续将 req 2 处理完成，该请求的响应时延（RT）就会变长。这种情况在应用负载上升时将更容易发生，导致其 RT 的长尾情况将会变得更为严重。</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240802143534465.png" alt=""></p><p>为了避免 CPU Throttle 的问题，我们只能将容器的 CPU Limit 值调大。然而，若想彻底解决 CPU Throttle，通常需要将 CPU Limit 调大两三倍，有时甚至五到十倍，问题才会得到明显缓解。而为了降低 CPU Limit 超卖过多的风险，还需降低容器的部署密度，进而导致整体资源成本上升。</p><h2 id="调研-cpu-burst-方案" tabindex="-1"><a class="header-anchor" href="#调研-cpu-burst-方案" aria-hidden="true">#</a> 调研 CPU Burst 方案</h2><p>**什么是 CPU Burst：**CPU Burst（CPU 突发）是指在计算机处理器空闲时，允许进程或线程在一段短时间内使用超过其平均 CPU 使用量的额外 CPU 时间。在 CPU 突发期间，进程可以使用比其在限定时间段内被允许的平均 CPU 使用量更多的 CPU 资源，以提高应用程序的响应速度和性能。</p><p><strong>方案对比</strong></p><table><thead><tr><th></th><th>koordinator + cpuBurstOnly</th><th>koordinator + cfsQuotaBurstOnly</th><th>二开 koordlet 组件 + cfsQuotaBurstOnly</th></tr></thead><tbody><tr><td>依赖</td><td>操作系统内核 &gt;= 5.14</td><td></td><td></td></tr><tr><td>策略控制</td><td>CRD/configmap/annotation</td><td>CRD/configmap/annotation</td><td>configmap/annotation</td></tr><tr><td>功能&amp;复杂度</td><td>功能强大且复杂<br>Koord-Scheduler/Koord-Descheduler/Koord-Manager/Koordlet/Koord-RuntimeProxy</td><td>功能强大且复杂<br>Koord-Scheduler/Koord-Descheduler/Koord-Manager/Koordlet/Koord-RuntimeProxy</td><td>功能单一简单，支持基于全局 cm 指定哪些 Pod 需要执行策略<br>Koordlet</td></tr></tbody></table><p><strong>本项目的由来</strong>： 二开 koordlet 组件 + cfsQuotaBurstOnly 优化 K8s CPU Throttle 问题</p><h2 id="项目架构" tabindex="-1"><a class="header-anchor" href="#项目架构" aria-hidden="true">#</a> 项目架构</h2><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/koordlet.png" alt=""></p><p>StatesInformer</p><ul><li>Node Informer：提供本节点 corev1.Node</li><li>Pod Informer：提供本节点所有 PodMeta 信息， PodMeta 包括 corev1.Pod 和 CgroupDir <ul><li>PLEG：监听 Pod 变化，触发同步</li><li>Kubelet：获取 GetAllPods</li></ul></li><li>CM Informer：提供全局 CM 指定哪些 Pod ，可以动态调节 cpu.cfs_quota_us</li></ul><p>Metric Cache：Prometheus tsdb 存在收集到的指标</p><p>MetricCollectors</p><ul><li>Node Info：收集 Node CPU 核数等</li><li>Node Resource：收集 Node CPU 、MEM 使用情况</li><li>Pod Throttled：收集 Pod Throttled 信息，从 cpu.stat 收集</li></ul><p>CPU Burst Plugin：发现 Pod Throttled， 动态调整 cpu.cfs_quota_us</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建 ns</span>
kubectl apply <span class="token parameter variable">-f</span> manifests/setup/
<span class="token comment"># 创建 rbac、cm、ds</span>
kubectl apply <span class="token parameter variable">-f</span> manifests/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认的 cm 内容如下：</p><p>其中 <code>app：apache-demo</code> 是用于匹配 Pod 的 label 的，匹配成功，则 Pod 应用 策略</p><p><code>cpu-burst-config</code> 是默认的策略文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">data</span><span class="token punctuation">:</span>
  <span class="token key atrule">app</span><span class="token punctuation">:</span> apache<span class="token punctuation">-</span>demo
  <span class="token key atrule">cpu-burst-config</span><span class="token punctuation">:</span> &#39;<span class="token punctuation">{</span><span class="token key atrule">&quot;policy&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cfsQuotaBurstOnly&quot;</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;cpuBurstPercent&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;cfsQuotaBurstPercent&quot;</span><span class="token punctuation">:</span>
    <span class="token number">300</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;cfsQuotaBurstPeriodSeconds&quot;</span><span class="token punctuation">:</span> <span class="token number">-1</span><span class="token punctuation">}</span>&#39;
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> cfs<span class="token punctuation">-</span>quota<span class="token punctuation">-</span>burst<span class="token punctuation">-</span>cm
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> koordinator<span class="token punctuation">-</span>system
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建 demo 测试</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> apache<span class="token punctuation">-</span>demo
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> apache<span class="token punctuation">-</span>demo <span class="token comment"># use label enable or disable CPU Burst.</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">containers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">command</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> httpd
    <span class="token punctuation">-</span> <span class="token punctuation">-</span>D
    <span class="token punctuation">-</span> FOREGROUND
    <span class="token key atrule">image</span><span class="token punctuation">:</span> koordinatorsh/apache<span class="token punctuation">-</span>2<span class="token punctuation">-</span>4<span class="token punctuation">-</span>51<span class="token punctuation">-</span>for<span class="token punctuation">-</span>slo<span class="token punctuation">-</span>test<span class="token punctuation">:</span>v0.1
    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always
    <span class="token key atrule">name</span><span class="token punctuation">:</span> apache
    <span class="token key atrule">resources</span><span class="token punctuation">:</span>
      <span class="token key atrule">limits</span><span class="token punctuation">:</span>
        <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">&quot;4&quot;</span>
        <span class="token key atrule">memory</span><span class="token punctuation">:</span> 10Gi
      <span class="token key atrule">requests</span><span class="token punctuation">:</span>
        <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">&quot;4&quot;</span>
        <span class="token key atrule">memory</span><span class="token punctuation">:</span> 10Gi
  <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> <span class="token comment"># $nodeName Set the value to the name of the node that you use.</span>
  <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">False</span>
  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never
  <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 wrk2 进行压力测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./wrk <span class="token parameter variable">-H</span> <span class="token string">&quot;Accept-Encoding: deflate, gzip&quot;</span> <span class="token parameter variable">-t</span> <span class="token number">2</span> <span class="token parameter variable">-c</span> <span class="token number">12</span> <span class="token parameter variable">-d</span> <span class="token number">120</span> <span class="token parameter variable">--latency</span> <span class="token parameter variable">--timeout</span> 2s <span class="token parameter variable">-R</span> <span class="token number">24</span> http://<span class="token variable">$target_ip_address</span>:8010/static/file.1m.test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 demo 中 label 去掉，再进行测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>apiVersion: v1
kind: Pod
metadata:
  name: apache-demo
spec:
  containers:
  - command:
    - httpd
    - <span class="token parameter variable">-D</span>
    - FOREGROUND
    image: koordinatorsh/apache-2-4-51-for-slo-test:v0.1
    imagePullPolicy: Always
    name: apache
    resources:
      limits:
        cpu: <span class="token string">&quot;4&quot;</span>
        memory: 10Gi
      requests:
        cpu: <span class="token string">&quot;4&quot;</span>
        memory: 10Gi
  nodeName: <span class="token comment"># $nodeName Set the value to the name of the node that you use.</span>
  hostNetwork: False
  restartPolicy: Never
  schedulerName: default-scheduler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl delete pod apache-demo
kubectl apply <span class="token parameter variable">-f</span> apache-demo.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果如下：</p><table><thead><tr><th></th><th>默认</th><th>开启 cfsQuotaBurstOnly</th></tr></thead><tbody><tr><td>apache RT-p99</td><td>231.93ms</td><td>99.52ms</td></tr></tbody></table><h2 id="show-me-code" tabindex="-1"><a class="header-anchor" href="#show-me-code" aria-hidden="true">#</a> Show me Code</h2><p>源码地址：https://github.com/clay-wangzhi/cfs-quota-burst</p><p>参考链接：</p><p>如何合理使用 CPU 管理策略，提升容器性能？：https://developer.aliyun.com/article/872282</p><p>Koordinator cpuBurst： https://koordinator.sh/zh-Hans/docs/user-manuals/cpu-burst</p><p>我是 Clay，下期见 👋</p><hr><blockquote><ul><li><p>欢迎订阅我的公众号「SRE运维进阶之路」或关注我的 Github https://github.com/clay-wangzhi/SreGuide 查看最新文章</p></li><li><p>欢迎加我微信<code>sre-k8s-ai</code>，与我讨论云原生、稳定性相关内容</p></li></ul></blockquote><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/weixin-20240615194414355.png" alt="weixin" style="zoom:50%;">`,44),i=[l];function p(o,c){return n(),s("div",null,i)}const d=a(t,[["render",p],["__file","cpu-burst.html.vue"]]);export{d as default};

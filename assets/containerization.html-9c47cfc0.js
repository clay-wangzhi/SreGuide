const e=JSON.parse('{"key":"v-10dd1b0f","path":"/cloudnative/best-practice/containerization.html","title":"云原生落地","lang":"zh-CN","frontmatter":{"isOriginal":true,"order":1,"category":"云原生","tag":["Kubernetes"],"description":"云原生落地 1. 上价值 从虚拟机到 Kubernetes 转变的收益 更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。 保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。 加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。 强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。 支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/best-practice/containerization.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"云原生落地"}],["meta",{"property":"og:description","content":"云原生落地 1. 上价值 从虚拟机到 Kubernetes 转变的收益 更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。 保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。 加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。 强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。 支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-24T12:38:16.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-11-24T12:38:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"云原生落地\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-24T12:38:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 上价值","slug":"_1-上价值","link":"#_1-上价值","children":[]},{"level":2,"title":"2. 搭建底层环境","slug":"_2-搭建底层环境","link":"#_2-搭建底层环境","children":[]},{"level":2,"title":"3. 业务推广","slug":"_3-业务推广","link":"#_3-业务推广","children":[]},{"level":2,"title":"4. 风险控制和可靠性保障","slug":"_4-风险控制和可靠性保障","link":"#_4-风险控制和可靠性保障","children":[]},{"level":2,"title":"5.核心能力全景图","slug":"_5-核心能力全景图","link":"#_5-核心能力全景图","children":[]},{"level":2,"title":"6. 对比 KVM 的 FAQ","slug":"_6-对比-kvm-的-faq","link":"#_6-对比-kvm-的-faq","children":[{"level":3,"title":"1）应用从 KVM 迁移到 容器 后，资源利用率为何发生变化？","slug":"_1-应用从-kvm-迁移到-容器-后-资源利用率为何发生变化","link":"#_1-应用从-kvm-迁移到-容器-后-资源利用率为何发生变化","children":[]},{"level":3,"title":"2) 流量洪峰时，容器比虚拟RT长","slug":"_2-流量洪峰时-容器比虚拟rt长","link":"#_2-流量洪峰时-容器比虚拟rt长","children":[]}]}],"git":{"createdTime":1691144928000,"updatedTime":1700829496000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":2}]},"readingTime":{"minutes":8.9,"words":2671},"filePathRelative":"cloudnative/best-practice/containerization.md","localizedDate":"2023年8月4日","excerpt":"<h1> 云原生落地</h1>\\n<h2> 1. 上价值</h2>\\n<p><strong>从虚拟机到 Kubernetes 转变的收益</strong></p>\\n<ol>\\n<li>更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。</li>\\n<li>保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。</li>\\n<li>加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。</li>\\n<li>强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。</li>\\n<li>支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。</li>\\n</ol>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

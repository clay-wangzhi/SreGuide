import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c,b as n,d as e,a,e as l}from"./app-587e3400.js";const i={},p=l(`<h1 id="_7-5-牛刀小试" tabindex="-1"><a class="header-anchor" href="#_7-5-牛刀小试" aria-hidden="true">#</a> 7.5 牛刀小试</h1><p>系统文件 <code>xinitrc</code> 可以用来启动软件 X Server。该文件包含了许多 <code>if/then</code> 测试结构。下面的代码摘录自较早版本的 <code>xinitrc</code>（大约在 Red Hat 7.1 版本）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token environment constant">$HOME</span>/.Xclients <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">exec</span> <span class="token environment constant">$HOME</span>/.Xclients
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /etc/X11/xinit/Xclients <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">exec</span> /etc/X11/xinit/Xclients
<span class="token keyword">else</span>
    <span class="token comment"># 安全分支。尽管程序不会执行这个分支。</span>
    <span class="token comment"># （我们在 Xclients 中也提供了相同的机制）增强程序可靠性。</span>
    xclock <span class="token parameter variable">-geometry</span> 100x100-5+5 <span class="token operator">&amp;</span>
    xterm <span class="token parameter variable">-geometry</span> 80x50-50+150 <span class="token operator">&amp;</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /usr/bin/netscape <span class="token parameter variable">-a</span> <span class="token parameter variable">-f</span> /usr/share/doc/HTML/index.html <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            netscape /usr/share/doc/HTML/index.html
    <span class="token keyword">fi</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),d={href:"http://tldp.org/LDP/abs/html/textproc.html#GREPREF",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"grep",-1),k={href:"http://tldp.org/LDP/abs/html/sedawk.html#SEDREF",target:"_blank",rel:"noopener noreferrer"},u=n("code",null,"sed",-1),_={href:"http://tldp.org/LDP/abs/html/regexp.html#REGEXREF",target:"_blank",rel:"noopener noreferrer"};function v(h,b){const s=o("ExternalLinkIcon");return r(),c("div",null,[p,n("p",null,[e("试着解释代码片段中的条件测试结构, 然后试着在 /etc/X11/xinit/xinitrc 查看最新版本，并且分析其中的 if/then 条件测试结构。为了更好的进行分析，你可能需要继续阅读后面章节中对 "),n("a",d,[m,a(s)]),e("，"),n("a",k,[u,a(s)]),e(" 和 "),n("a",_,[e("正则表达式"),a(s)]),e(" 的讨论。")])])}const g=t(i,[["render",v],["__file","07_5_testing_your_knowledge_of_tests.html.vue"]]);export{g as default};

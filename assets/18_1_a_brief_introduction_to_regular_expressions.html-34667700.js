const t=JSON.parse('{"key":"v-04de7f18","path":"/code/shell/part5/18_1_a_brief_introduction_to_regular_expressions.html","title":"18.1 正则表达式简介","lang":"zh-CN","frontmatter":{"author":"LinuxStory","category":"Linux","tag":["Bash"],"description":"18.1 正则表达式简介 正则表达式是一系列的字符串。这些包含超过其字面含义的字符串被称之为元字符。例如，一个符号前面的引用符代表一个人的言语能力，或者按照上面的说法，代表着meta-meaning[1]。正则表达式是一组字符串和（或者）一组匹配（特定的）模式的元字符。 一个正则表达式包含下面的一个或多个选项： 一组字符串。这是仅仅表示字面意思的字符串。最简单形式的正则表达式仅仅包含一组字符串。 一个锚字符。锚节点指定了正则表达式在一行文本中的匹配位置。例如，^和$就是锚字符。 修饰符。修饰符扩展或者限定（修改）了正则表达式在文本中的匹配范围。修饰符包括星号、方括号和反斜线。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/shell/part5/18_1_a_brief_introduction_to_regular_expressions.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"18.1 正则表达式简介"}],["meta",{"property":"og:description","content":"18.1 正则表达式简介 正则表达式是一系列的字符串。这些包含超过其字面含义的字符串被称之为元字符。例如，一个符号前面的引用符代表一个人的言语能力，或者按照上面的说法，代表着meta-meaning[1]。正则表达式是一组字符串和（或者）一组匹配（特定的）模式的元字符。 一个正则表达式包含下面的一个或多个选项： 一组字符串。这是仅仅表示字面意思的字符串。最简单形式的正则表达式仅仅包含一组字符串。 一个锚字符。锚节点指定了正则表达式在一行文本中的匹配位置。例如，^和$就是锚字符。 修饰符。修饰符扩展或者限定（修改）了正则表达式在文本中的匹配范围。修饰符包括星号、方括号和反斜线。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"LinuxStory"}],["meta",{"property":"article:tag","content":"Bash"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18.1 正则表达式简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LinuxStory\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":3.98,"words":1193},"filePathRelative":"code/shell/part5/18_1_a_brief_introduction_to_regular_expressions.md","localizedDate":"2023年4月19日","excerpt":"<h1> 18.1 正则表达式简介</h1>\\n<p>正则表达式是一系列的字符串。这些包含超过其字面含义的字符串被称之为元字符。例如，一个符号前面的引用符代表一个人的言语能力，或者按照上面的说法，代表着meta-meaning<a href=\\"http://tldp.org/LDP/abs/html/x17129.html#FTN.AEN17134\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">[1]</a>。正则表达式是一组字符串和（或者）一组匹配（特定的）模式的元字符。</p>\\n<p>一个正则表达式包含下面的一个或多个选项：</p>\\n<ul>\\n<li>一组字符串。这是仅仅表示字面意思的字符串。最简单形式的正则表达式仅仅包含一组字符串。</li>\\n<li>一个锚字符。锚节点指定了正则表达式在一行文本中的匹配位置。例如，^和$就是锚字符。</li>\\n<li>修饰符。修饰符扩展或者限定（修改）了正则表达式在文本中的匹配范围。修饰符包括星号、方括号和反斜线。</li>\\n</ul>","copyright":{"author":"LinuxStory"},"autoDesc":true}');export{t as data};

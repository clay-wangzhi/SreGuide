const e=JSON.parse('{"key":"v-ae8f4894","path":"/code/shell/part5/32_Debugging.html","title":"32 调试","lang":"zh-CN","frontmatter":{"author":"LinuxStory","category":"Linux","tag":["Bash"],"description":"32 调试 调试代码要比写代码困难两倍。因此，你写代码时越多的使用奇技淫巧（自做聪明），顾名思义，你越难以调试它。 --Brian Kernighan Bash shell中不包含内置的debug工具，甚至没有调试专用的命令和结构。当调试非功能脚本，产生语法错误或者有错别字时，往往是无用的错误提示消息。 例子 32-1. 一个错误脚本 #!/bin/bash # ex74.sh # 这是一个错误脚本，但是它错在哪？ a=37 if [$a -gt 27 ] then echo $a fi exit $? # 0! 为什么?","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/shell/part5/32_Debugging.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"32 调试"}],["meta",{"property":"og:description","content":"32 调试 调试代码要比写代码困难两倍。因此，你写代码时越多的使用奇技淫巧（自做聪明），顾名思义，你越难以调试它。 --Brian Kernighan Bash shell中不包含内置的debug工具，甚至没有调试专用的命令和结构。当调试非功能脚本，产生语法错误或者有错别字时，往往是无用的错误提示消息。 例子 32-1. 一个错误脚本 #!/bin/bash # ex74.sh # 这是一个错误脚本，但是它错在哪？ a=37 if [$a -gt 27 ] then echo $a fi exit $? # 0! 为什么?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"LinuxStory"}],["meta",{"property":"article:tag","content":"Bash"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"32 调试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LinuxStory\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":8.94,"words":2683},"filePathRelative":"code/shell/part5/32_Debugging.md","localizedDate":"2023年4月19日","excerpt":"<h1> 32 调试</h1>\\n<blockquote class=\\"blockquote-center\\">\\n调试代码要比写代码困难两倍。因此，你写代码时越多的使用奇技淫巧（自做聪明），顾名思义，你越难以调试它。    --Brian Kernighan\\n</blockquote>\\n<p>Bash shell中不包含内置的debug工具，甚至没有调试专用的命令和结构。当调试非功能脚本，产生语法错误或者有错别字时，往往是无用的错误提示消息。</p>\\n<p>例子 32-1. 一个错误脚本</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>#!/bin/bash\\n# ex74.sh\\n\\n# 这是一个错误脚本，但是它错在哪？\\n\\na=37\\n\\nif [$a -gt 27 ]\\nthen\\n  echo $a\\nfi  \\n\\nexit $?   # 0! 为什么?\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"LinuxStory"},"autoDesc":true}');export{e as data};

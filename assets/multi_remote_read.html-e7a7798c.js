const e=JSON.parse('{"key":"v-d3fe39f2","path":"/monitor/prometheus/multi_remote_read.html","title":"别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案","lang":"zh-CN","frontmatter":{"category":"监控","tag":["prometheus"],"description":"别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 转载自：别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 ｜ 云原生实验室 前言 我看到很多人会这样使用联邦：联邦 prometheus 收集多个采集器的数据 实在看不下下去了，很多小白还在乱用prometheus的联邦 其实很多人是想实现 prometheus 数据的可用性，数据分片保存，有个统一的查询地方(小白中的联邦 prometheus) 而且引入 m3db 等支持集群的 tsdb 可能比较重 具体问题可以看我之前写的文章 m3db 资源开销，聚合降采样，查询限制等注意事项[1] m3db-node oom 追踪和内存分配器代码查看[2] 今天写篇文章分析下联邦的问题，并给出一个基于全部是 prometheus 的multi_remote_read方案","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/monitor/prometheus/multi_remote_read.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案"}],["meta",{"property":"og:description","content":"别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 转载自：别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 ｜ 云原生实验室 前言 我看到很多人会这样使用联邦：联邦 prometheus 收集多个采集器的数据 实在看不下下去了，很多小白还在乱用prometheus的联邦 其实很多人是想实现 prometheus 数据的可用性，数据分片保存，有个统一的查询地方(小白中的联邦 prometheus) 而且引入 m3db 等支持集群的 tsdb 可能比较重 具体问题可以看我之前写的文章 m3db 资源开销，聚合降采样，查询限制等注意事项[1] m3db-node oom 追踪和内存分配器代码查看[2] 今天写篇文章分析下联邦的问题，并给出一个基于全部是 prometheus 的multi_remote_read方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"prometheus"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"架构图","slug":"架构图","link":"#架构图","children":[]},{"level":2,"title":"联邦问题","slug":"联邦问题","link":"#联邦问题","children":[]},{"level":2,"title":"联邦使用样例","slug":"联邦使用样例","link":"#联邦使用样例","children":[]},{"level":2,"title":"看上面的样例配置怎么感觉是采集的配置呢","slug":"看上面的样例配置怎么感觉是采集的配置呢","link":"#看上面的样例配置怎么感觉是采集的配置呢","children":[]},{"level":2,"title":"正确使用联邦的姿势","slug":"正确使用联邦的姿势","link":"#正确使用联邦的姿势","children":[]},{"level":2,"title":"默认 prometheus 不支持降采样","slug":"默认-prometheus-不支持降采样","link":"#默认-prometheus-不支持降采样","children":[]},{"level":2,"title":"正确实现统一查询的姿势","slug":"正确实现统一查询的姿势","link":"#正确实现统一查询的姿势","children":[]},{"level":2,"title":"multi_remote_read","slug":"multi-remote-read","link":"#multi-remote-read","children":[]},{"level":2,"title":"prometheus 可以 remote_read prometheus 自己","slug":"prometheus-可以-remote-read-prometheus-自己","link":"#prometheus-可以-remote-read-prometheus-自己","children":[]},{"level":2,"title":"高可用方案","slug":"高可用方案","link":"#高可用方案","children":[{"level":3,"title":"数据重复怎么办","slug":"数据重复怎么办","link":"#数据重复怎么办","children":[]},{"level":3,"title":"这种方案的缺点","slug":"这种方案的缺点","link":"#这种方案的缺点","children":[]},{"level":3,"title":"脚注","slug":"脚注","link":"#脚注","children":[]}]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":6.03,"words":1809},"filePathRelative":"monitor/prometheus/multi_remote_read.md","localizedDate":"2023年4月19日","excerpt":"<h1> 别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案</h1>\\n<blockquote>\\n<p>转载自：<a href=\\"https://mp.weixin.qq.com/s/PDmSntHaN-tTltLBghyO4g\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 ｜ 云原生实验室</a></p>\\n</blockquote>\\n<h2> 前言</h2>\\n<ul>\\n<li>\\n<p>我看到很多人会这样使用联邦：联邦 prometheus 收集多个采集器的数据</p>\\n</li>\\n<li>\\n<p>实在看不下下去了，很多小白还在乱用<code>prometheus</code>的联邦</p>\\n</li>\\n<li>\\n<p>其实很多人是想实现 prometheus 数据的可用性，数据分片保存，有个统一的查询地方(小白中的联邦 prometheus)</p>\\n</li>\\n<li>\\n<p>而且引入 m3db 等支持集群的 tsdb 可能比较重</p>\\n</li>\\n<li>\\n<p>具体问题可以看我之前写的文章 <strong>m3db 资源开销，聚合降采样，查询限制等注意事项</strong>[1]</p>\\n</li>\\n<li>\\n<ul>\\n<li><strong>m3db-node oom 追踪和内存分配器代码查看</strong>[2]</li>\\n</ul>\\n</li>\\n<li>\\n<p>今天写篇文章分析下联邦的问题，并给出一个基于全部是 prometheus 的<code>multi_remote_read</code>方案</p>\\n</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

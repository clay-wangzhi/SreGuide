const t=JSON.parse('{"key":"v-a77317a2","path":"/code/golang/go-struct.html","title":"Go Struct超详细讲解","lang":"zh-CN","frontmatter":{"category":"Golang","description":"Go Struct超详细讲解 转载自：Go Struct超详细讲解 | 程序员读书 Go语言中提供了对struct的支持,struct,中文翻译称为结构体，与数组一样，属于复合类型，并非引用类型。 Go语言的struct，与C语言中的struct或其他面向对象编程语言中的类(class)类似，可以定义字段(属性)和方法，但也有很不同的地方，需要深入学习，才能区分他们之间的区别。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/golang/go-struct.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"Go Struct超详细讲解"}],["meta",{"property":"og:description","content":"Go Struct超详细讲解 转载自：Go Struct超详细讲解 | 程序员读书 Go语言中提供了对struct的支持,struct,中文翻译称为结构体，与数组一样，属于复合类型，并非引用类型。 Go语言的struct，与C语言中的struct或其他面向对象编程语言中的类(class)类似，可以定义字段(属性)和方法，但也有很不同的地方，需要深入学习，才能区分他们之间的区别。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go Struct超详细讲解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"访问字段","slug":"访问字段","link":"#访问字段","children":[]},{"level":3,"title":"指针结构体","slug":"指针结构体","link":"#指针结构体","children":[]}]},{"level":2,"title":"可见性","slug":"可见性","link":"#可见性","children":[]},{"level":2,"title":"Tags","slug":"tags","link":"#tags","children":[]},{"level":2,"title":"特性","slug":"特性","link":"#特性","children":[{"level":3,"title":"值传递","slug":"值传递","link":"#值传递","children":[]},{"level":3,"title":"没有继承","slug":"没有继承","link":"#没有继承","children":[]},{"level":3,"title":"结构体不能包含自己","slug":"结构体不能包含自己","link":"#结构体不能包含自己","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":"组合","slug":"组合","link":"#组合","children":[{"level":3,"title":"什么是组合","slug":"什么是组合","link":"#什么是组合","children":[]},{"level":3,"title":"匿名字段","slug":"匿名字段","link":"#匿名字段","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":9.09,"words":2726},"filePathRelative":"code/golang/go-struct.md","localizedDate":"2023年4月19日","excerpt":"<h1> Go Struct超详细讲解</h1>\\n<blockquote>\\n<p>转载自：<a href=\\"https://juejin.cn/post/6844903814168838151\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Struct超详细讲解 | 程序员读书</a></p>\\n</blockquote>\\n<p>Go语言中提供了对struct的支持,<code>struct</code>,中文翻译称为<code>结构体</code>，与数组一样，属于复合类型，并非引用类型。</p>\\n<p>Go语言的struct，与C语言中的struct或其他面向对象编程语言中的类(class)类似，可以定义字段(属性)和方法，但也有很不同的地方，需要深入学习，才能区分他们之间的区别。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{t as data};

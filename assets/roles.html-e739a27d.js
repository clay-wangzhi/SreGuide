const l=JSON.parse('{"key":"v-f7090128","path":"/devops/ansible/roles.html","title":"4.6 巧用Roles","lang":"zh-CN","frontmatter":{"date":"2020-03-20T00:00:00.000Z","category":"自动化工具","tag":["Ansible"],"description":"4.6 巧用Roles 1 如何重用Playbook 不能站在巨人肩膀上的编程语言不是好语言，支持重用机制会节省重复的调研工作上浪费大量的时间，当然也会提高可维护性。 Playbook支持两种重用机制，一种是重用静态Playbook脚本，另外一种是类似于编程语言中函数的机制。 include语句 - 重用静态的Playbook脚本，使用起来简单、直接。 role语言 - Playbook的“函数机制”，使用方法稍复杂、功能强大。是Playbook脚本的共享平台ansible galaxy主要的分享方式","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/devops/ansible/roles.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"4.6 巧用Roles"}],["meta",{"property":"og:description","content":"4.6 巧用Roles 1 如何重用Playbook 不能站在巨人肩膀上的编程语言不是好语言，支持重用机制会节省重复的调研工作上浪费大量的时间，当然也会提高可维护性。 Playbook支持两种重用机制，一种是重用静态Playbook脚本，另外一种是类似于编程语言中函数的机制。 include语句 - 重用静态的Playbook脚本，使用起来简单、直接。 role语言 - Playbook的“函数机制”，使用方法稍复杂、功能强大。是Playbook脚本的共享平台ansible galaxy主要的分享方式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:50:36.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Ansible"}],["meta",{"property":"article:published_time","content":"2020-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:50:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.6 巧用Roles\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-19T13:50:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1 如何重用Playbook","slug":"_1-如何重用playbook","link":"#_1-如何重用playbook","children":[]},{"level":2,"title":"2 roles目录结构","slug":"_2-roles目录结构","link":"#_2-roles目录结构","children":[]},{"level":2,"title":"3 组织 task","slug":"_3-组织-task","link":"#_3-组织-task","children":[]},{"level":2,"title":"4 组织handler","slug":"_4-组织handler","link":"#_4-组织handler","children":[]},{"level":2,"title":"5 组织变量","slug":"_5-组织变量","link":"#_5-组织变量","children":[{"level":3,"title":"5.1 vars_files","slug":"_5-1-vars-files","link":"#_5-1-vars-files","children":[]},{"level":3,"title":"5.2 include_vars","slug":"_5-2-include-vars","link":"#_5-2-include-vars","children":[]},{"level":3,"title":"5.3 --extra-vars选项","slug":"_5-3-extra-vars选项","link":"#_5-3-extra-vars选项","children":[]}]},{"level":2,"title":"6 组织playbook文件","slug":"_6-组织playbook文件","link":"#_6-组织playbook文件","children":[]},{"level":2,"title":"7 playbook 调用","slug":"_7-playbook-调用","link":"#_7-playbook-调用","children":[]},{"level":2,"title":"8 playbook解析、动态加载和静态加载","slug":"_8-playbook解析、动态加载和静态加载","link":"#_8-playbook解析、动态加载和静态加载","children":[]},{"level":2,"title":"9 Ansible Galaxy和Collection","slug":"_9-ansible-galaxy和collection","link":"#_9-ansible-galaxy和collection","children":[]}],"git":{"createdTime":1681912236000,"updatedTime":1681912236000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":19.19,"words":5758},"filePathRelative":"devops/ansible/roles.md","localizedDate":"2020年3月20日","excerpt":"<h1> 4.6 巧用Roles</h1>\\n<h2> 1 如何重用Playbook</h2>\\n<p>不能站在巨人肩膀上的编程语言不是好语言，支持重用机制会节省重复的调研工作上浪费大量的时间，当然也会提高可维护性。</p>\\n<p>Playbook支持两种重用机制，一种是重用静态Playbook脚本，另外一种是类似于编程语言中函数的机制。</p>\\n<ul>\\n<li>include语句 - 重用静态的Playbook脚本，使用起来简单、直接。</li>\\n<li>role语言 - Playbook的“函数机制”，使用方法稍复杂、功能强大。是Playbook脚本的共享平台ansible galaxy主要的分享方式</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}');export{l as data};

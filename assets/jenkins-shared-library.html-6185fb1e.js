const e=JSON.parse('{"key":"v-30d1e5c6","path":"/devops/jenkins/jenkins-shared-library.html","title":"4.4 Jenkins共享库应用","lang":"zh-CN","frontmatter":{"date":"2020-01-16T00:00:00.000Z","category":"自动化工具","tag":["Jenkins"],"description":"4.4 Jenkins共享库应用 由来与演进 在Jenkins 1.x中，对于job的配置大多是基于图形界面的，也就是说，要在GUI页面手动设置相关的job参数。 随着不同类型和用途的job越来越多，参数越来越复杂，难以有效地管理数量庞大的图形界面配置信息，也无法有效追踪和记录配置的更改。 在Jenkins 2.0中，基于Pipeline，用户可以在一个 JenkinsFile 中快速实现一个项目的从构建、测试以到发布的完整流程，灵活方便地实现持续交付。 并且通过“pipeline script from SCM”方式，可以保存这个流水线的定义，进行版本化管理。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/devops/jenkins/jenkins-shared-library.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"4.4 Jenkins共享库应用"}],["meta",{"property":"og:description","content":"4.4 Jenkins共享库应用 由来与演进 在Jenkins 1.x中，对于job的配置大多是基于图形界面的，也就是说，要在GUI页面手动设置相关的job参数。 随着不同类型和用途的job越来越多，参数越来越复杂，难以有效地管理数量庞大的图形界面配置信息，也无法有效追踪和记录配置的更改。 在Jenkins 2.0中，基于Pipeline，用户可以在一个 JenkinsFile 中快速实现一个项目的从构建、测试以到发布的完整流程，灵活方便地实现持续交付。 并且通过“pipeline script from SCM”方式，可以保存这个流水线的定义，进行版本化管理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:50:36.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Jenkins"}],["meta",{"property":"article:published_time","content":"2020-01-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:50:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.4 Jenkins共享库应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-19T13:50:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"由来与演进","slug":"由来与演进","link":"#由来与演进","children":[]},{"level":2,"title":"共享库是什么？","slug":"共享库是什么","link":"#共享库是什么","children":[]},{"level":2,"title":"共享库内容","slug":"共享库内容","link":"#共享库内容","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1681912236000,"updatedTime":1681912236000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":5.01,"words":1504},"filePathRelative":"devops/jenkins/jenkins-shared-library.md","localizedDate":"2020年1月16日","excerpt":"<h1> 4.4 Jenkins共享库应用</h1>\\n<h2> 由来与演进</h2>\\n<p>在Jenkins 1.x中，对于job的配置大多是基于图形界面的，也就是说，要在GUI页面手动设置相关的job参数。\\n随着不同类型和用途的job越来越多，参数越来越复杂，难以有效地管理数量庞大的图形界面配置信息，也无法有效追踪和记录配置的更改。</p>\\n<p>在Jenkins 2.0中，基于Pipeline，用户可以在一个 JenkinsFile 中快速实现一个项目的从构建、测试以到发布的完整流程，灵活方便地实现持续交付。\\n并且通过“pipeline script from SCM”方式，可以保存这个流水线的定义，进行版本化管理。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

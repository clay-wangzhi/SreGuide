const e=JSON.parse('{"key":"v-8734b8d2","path":"/cloudnative/best-practice/kube-on-kube.html","title":"kube on kube 实现思路分享","lang":"zh-CN","frontmatter":{"isOriginal":true,"category":"云原生","tag":["Kubernetes"],"description":"kube on kube 实现思路分享 这里的 kube on kube ， 是指建立 K8s 元集群，纳管其他业务 K8s 集群，通过声明式 API 管理集群的创建、增删节点等。 参考 https://github.com/kubean-io/kubean 源码进行编写，进行了裁剪。感谢 DaoCloud 开源！ 👍👍 背景 随着容器化覆盖率的逐步增加，越来越多的业务迁移到 K8s 集群中， 考虑到同城双活、不同业务的复杂性以及耦合度，需要部署维护多套 K8s 集群，如何高效、可靠的在数据中心管理多个 k8s 集群是我们面临的关键挑战。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/best-practice/kube-on-kube.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"kube on kube 实现思路分享"}],["meta",{"property":"og:description","content":"kube on kube 实现思路分享 这里的 kube on kube ， 是指建立 K8s 元集群，纳管其他业务 K8s 集群，通过声明式 API 管理集群的创建、增删节点等。 参考 https://github.com/kubean-io/kubean 源码进行编写，进行了裁剪。感谢 DaoCloud 开源！ 👍👍 背景 随着容器化覆盖率的逐步增加，越来越多的业务迁移到 K8s 集群中， 考虑到同城双活、不同业务的复杂性以及耦合度，需要部署维护多套 K8s 集群，如何高效、可靠的在数据中心管理多个 k8s 集群是我们面临的关键挑战。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-03T08:30:01.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2024-04-03T08:30:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kube on kube 实现思路分享\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T08:30:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"Kube on kube 整体架构","slug":"kube-on-kube-整体架构","link":"#kube-on-kube-整体架构","children":[]},{"level":2,"title":"kubeonkube-controller 执行流程","slug":"kubeonkube-controller-执行流程","link":"#kubeonkube-controller-执行流程","children":[]},{"level":2,"title":"源码编写过程","slug":"源码编写过程","link":"#源码编写过程","children":[]}],"git":{"createdTime":1712133001000,"updatedTime":1712133001000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":6.06,"words":1817},"filePathRelative":"cloudnative/best-practice/kube-on-kube.md","localizedDate":"2024年4月3日","excerpt":"<h1> kube on kube 实现思路分享</h1>\\n<p>这里的 kube on kube ， 是指建立 K8s 元集群，纳管其他业务 K8s 集群，<strong>通过声明式 API</strong> 管理集群的创建、增删节点等。</p>\\n<p>参考 https://github.com/kubean-io/kubean 源码进行编写，进行了裁剪。感谢 <strong>DaoCloud</strong>  开源！ 👍👍</p>\\n<h2> 背景</h2>\\n<p>随着容器化覆盖率的逐步增加，越来越多的业务迁移到 K8s 集群中， 考虑到同城双活、不同业务的复杂性以及耦合度，需要部署维护多套 K8s 集群，如何高效、可靠的在数据中心管理多个 k8s 集群是我们面临的关键挑战。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as n}from"./app-8c19d02d.js";const d={},s=n(`<h1 id="_8-ab复制" tabindex="-1"><a class="header-anchor" href="#_8-ab复制" aria-hidden="true">#</a> 8 AB复制</h1><h2 id="mysql-ab简介" tabindex="-1"><a class="header-anchor" href="#mysql-ab简介" aria-hidden="true">#</a> MySQL AB简介</h2><p>AB复制又称主从复制，实现的是数据同步。</p><p>如果要做MySQL AB复制，数据库版本尽量保持一致。如果版本不一致，从服务器版本高于主服务器，但是版本不一致不能做双向复制。</p><p>MySQL AB复制有什么好处呢？</p><ul><li>解决宕机带来的数据不一致，因为MySQL AB复制可以实时备份数据；</li><li>减轻数据库服务器压力，多台服务器的性能一般比单台要好。但是MySQL AB复制不适用于大数据量，如果是大数据环境，推荐使用集群。</li></ul><p>​ MySQL复制（replication）是一个异步的复制，从一个MySQL实例（Master）复制到另一个MySQL（Slave）。实现整个主从复制，需要由Master服务器上的IO进程，和Slave服务器上的Sql进程和IO进程共同完成。</p><h2 id="主从复制的过程" tabindex="-1"><a class="header-anchor" href="#主从复制的过程" aria-hidden="true">#</a> 主从复制的过程</h2><p>​ 要实现主从复制，首先必须打开Master端的binary log(bin-log)功能，因为整个MySQL复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所有记录的各种操作。 主从复制的基本过程： ​ 1）MySQL Slave端的IO进程连接上Master，向Master请求指定日志文件的指定位置（或者从最开始的日志）之后的日志内容；</p><p>​ 2）Master接收到来自Slave的IO进程的请求后，负责复制的IO进程根据Slave的请求信息，读取相应日志内容，返回给Slave的IO的进程。并将本次请求读到的bin-log文件名及位置一起返回给Slave端。</p><p>​ 3）Slave的IO进程接收到信息后，将接收到的日志内容依次添加Slave端的realy-log文件的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master-info文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我；”</p><p>​ 4）Slave的Sql进程监测到relay-log中新增了内容后，会马上解析relay-log的内容成为在Master端真实执行时候的那些可执行的内容，并在自身执行。</p><h3 id="主服务器操作" tabindex="-1"><a class="header-anchor" href="#主服务器操作" aria-hidden="true">#</a> 主服务器操作</h3><h4 id="全备-并在从机恢复数据" tabindex="-1"><a class="header-anchor" href="#全备-并在从机恢复数据" aria-hidden="true">#</a> 全备，并在从机恢复数据</h4><h4 id="开启binlog日志" tabindex="-1"><a class="header-anchor" href="#开启binlog日志" aria-hidden="true">#</a> 开启binlog日志</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim /etc/my.cnf
[mysqld]
log-bin = master
log-bin-index = master
server-id = 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service mysqld restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="授权从服务器" tabindex="-1"><a class="header-anchor" href="#授权从服务器" aria-hidden="true">#</a> 授权从服务器</h4><p>授权从服务器，可以传输binlog日志</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grant replication slave on *.* to slave@&#39;从服务器&#39; identified by &#39;123&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="从服务器操作" tabindex="-1"><a class="header-anchor" href="#从服务器操作" aria-hidden="true">#</a> 从服务器操作</h3><h4 id="导入主服务器的数据" tabindex="-1"><a class="header-anchor" href="#导入主服务器的数据" aria-hidden="true">#</a> 导入主服务器的数据</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mysql -u root &lt; all.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="改配置文件" tabindex="-1"><a class="header-anchor" href="#改配置文件" aria-hidden="true">#</a> 改配置文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim /etc/my.cnf
[mysqld]
server-id = 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置主服务器的信息" tabindex="-1"><a class="header-anchor" href="#配置主服务器的信息" aria-hidden="true">#</a> 配置主服务器的信息</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;stop slave;
&gt;change master to
-&gt; master_host = &#39;主服务器&#39;，
-&gt;master_user = &#39;slave&#39;,
-&gt;master_password = &#39;123&#39;,
-&gt;master_port = 3306,
-&gt;master_log_file = &#39;mysql-bin.000001&#39;,
-&gt; master_log_pos=120;
&gt;start slave;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="校验" tabindex="-1"><a class="header-anchor" href="#校验" aria-hidden="true">#</a> 校验</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; show slave status\\G
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表示成功</p><p>​</p>`,31),r=[s];function l(t,c){return a(),i("div",null,r)}const o=e(d,[["render",l],["__file","ab-copy.html.vue"]]);export{o as default};

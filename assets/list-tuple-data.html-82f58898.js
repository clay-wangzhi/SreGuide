const l=JSON.parse(`{"key":"v-bcee94b6","path":"/code/python/list-tuple-data.html","title":"2.3.4 列表 list & 元组 tuple","lang":"zh-CN","frontmatter":{"category":"Python","description":"2.3.4 列表 list &amp; 元组 tuple 列表 list 一个排列整齐的队伍，Python采用顺序表实现 列表内的个体称作元素，由若干元素组成列表 元素可以是任意对象（数字、字符串、对象、列表等） 列表内元素有顺序，可以使用索引 线性的数据结构 使用 [ ] 表示 列表是可变的 列表是非常重要的数据结构，对其内存结构和操作方法必须烂熟于心。 初始化 list() -&gt; new empty list list(iterable) -&gt; new list initialized from iterable's items [] 列表不能一开始就定义大小","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/python/list-tuple-data.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"2.3.4 列表 list & 元组 tuple"}],["meta",{"property":"og:description","content":"2.3.4 列表 list &amp; 元组 tuple 列表 list 一个排列整齐的队伍，Python采用顺序表实现 列表内的个体称作元素，由若干元素组成列表 元素可以是任意对象（数字、字符串、对象、列表等） 列表内元素有顺序，可以使用索引 线性的数据结构 使用 [ ] 表示 列表是可变的 列表是非常重要的数据结构，对其内存结构和操作方法必须烂熟于心。 初始化 list() -&gt; new empty list list(iterable) -&gt; new list initialized from iterable's items [] 列表不能一开始就定义大小"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.3.4 列表 list & 元组 tuple\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"列表 list","slug":"列表-list","link":"#列表-list","children":[{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":3,"title":"索引","slug":"索引","link":"#索引","children":[]},{"level":3,"title":"查询","slug":"查询","link":"#查询","children":[]},{"level":3,"title":"修改","slug":"修改","link":"#修改","children":[]},{"level":3,"title":"增加单个元素","slug":"增加单个元素","link":"#增加单个元素","children":[]},{"level":3,"title":"增加多个元素","slug":"增加多个元素","link":"#增加多个元素","children":[]},{"level":3,"title":"删除","slug":"删除","link":"#删除","children":[]},{"level":3,"title":"in 成员操作","slug":"in-成员操作","link":"#in-成员操作","children":[]},{"level":3,"title":"列表复制","slug":"列表复制","link":"#列表复制","children":[]},{"level":3,"title":"Python 内存管理","slug":"python-内存管理","link":"#python-内存管理","children":[]}]},{"level":2,"title":"元组 tuple","slug":"元组-tuple","link":"#元组-tuple","children":[{"level":3,"title":"初始化","slug":"初始化-1","link":"#初始化-1","children":[]},{"level":3,"title":"索引","slug":"索引-1","link":"#索引-1","children":[]},{"level":3,"title":"查询","slug":"查询-1","link":"#查询-1","children":[]},{"level":3,"title":"增删改","slug":"增删改","link":"#增删改","children":[]}]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":4.7,"words":1410},"filePathRelative":"code/python/list-tuple-data.md","localizedDate":"2023年4月19日","excerpt":"<h1> 2.3.4 列表 list &amp; 元组 tuple</h1>\\n<h2> 列表 list</h2>\\n<ul>\\n<li>一个排列整齐的队伍，Python采用顺序表实现</li>\\n<li>列表内的个体称作元素，由若干元素组成列表</li>\\n<li>元素可以是任意对象（数字、字符串、对象、列表等）</li>\\n<li>列表内元素有顺序，可以使用索引</li>\\n<li>线性的数据结构</li>\\n<li>使用 [ ] 表示</li>\\n<li>列表是可变的</li>\\n</ul>\\n<p>列表是非常重要的数据结构，对其内存结构和操作方法必须烂熟于心。</p>\\n<h3> 初始化</h3>\\n<ul>\\n<li>list() -&gt; new empty list</li>\\n<li>list(iterable) -&gt;  new list initialized from iterable's items</li>\\n<li>[]</li>\\n<li>列表不能一开始就定义大小</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}`);export{l as data};

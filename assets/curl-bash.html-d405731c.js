import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o,c as d,a as t,b as l,d as n,e as a}from"./app-b1cf59f4.js";const i={},u=a(`<h1 id="curl方式执行shell脚本时如何传参" tabindex="-1"><a class="header-anchor" href="#curl方式执行shell脚本时如何传参" aria-hidden="true">#</a> curl方式执行shell脚本时如何传参</h1><p>有时候shell脚本可以放在http页面上，不用download，可以直接执行。</p><p>通常我们可以用curl的方式执行http页面上的shell脚本。 一般方式是：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl ftp://192.168.166.21:/system_optimize.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样脚本就可以在本地机器上执行了。</p><p>但是需要传入参数的脚本。我们可以用下面的方式传入shell参数</p><ul><li>-s方式</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s ftp://192.168.166.21:/system_optimize.sh | bash -s arg1 arg2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>&lt; 方式</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash &lt;(curl -s ftp://192.168.166.21:/system_optimize.sh) arg1 arg2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意 &lt;( 之间不要有空格！！！</p></blockquote><ul><li>若参数中带有<code>-</code>，则可使用长选项<code>--</code>解决</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s ftp://192.168.166.21:/system_optimize.sh | bash -s -- arg1 arg2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>若参数为”-p arg -d arg”,则可使用以下命令执行</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s ftp://192.168.166.21:/system_optimize.sh | bash -s -- -p arg1 -d arg2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>不止是curl的输入，其他方式的输入也满足。可以通过以下例子深入理解下</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &#39;i=1; for a in $@; do echo &quot;$i = $a&quot;; i=$((i+1)); done&#39; | bash -s -- -a1 -a2 -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="bash选项" tabindex="-1"><a class="header-anchor" href="#bash选项" aria-hidden="true">#</a> Bash选项</h2><p>Bash选项</p>`,19),h=t("thead",null,[t("tr",null,[t("th",null,"缩写"),t("th",null,"名称"),t("th",null,"作用")])],-1),c=t("tr",null,[t("td",null,"-B"),t("td",null,"brace expansion"),t("td",null,[l("开启"),t("a",{href:""},"大括号展开"),l("(默认 setting = on)")])],-1),_=t("tr",null,[t("td",null,"+B"),t("td",null,"brace expansion"),t("td",null,"关闭大括号展开")],-1),p=t("tr",null,[t("td",null,"-C"),t("td",null,"noclobber"),t("td",null,"防止重定向时覆盖文件(可能会被>|覆盖)")],-1),b=t("tr",null,[t("td",null,"-D"),t("td",null,"(none)"),t("td",null,"列出用双引号引用起来的, 以$为前缀的字符串, 但是不执行脚本中的命令")],-1),g=t("tr",null,[t("td",null,"-a"),t("td",null,"all export"),t("td",null,"export(导出)所有定义过的变量")],-1),m=t("tr",null,[t("td",null,"-b"),t("td",null,"notify"),t("td",null,"当后台运行的作业终止时, 给出通知(脚本中并不常见)")],-1),f=t("tr",null,[t("td",null,"-c ..."),t("td",null,"(none)"),t("td",null,"从...中读取命令")],-1),v=t("td",null,"checkjobs",-1),x=t("td",null,"(none)",-1),k={href:"http://tldp.org/LDP/abs/html/x9644.html#JOBSREF",target:"_blank",rel:"noopener noreferrer"},L={href:"http://tldp.org/LDP/abs/html/bashver4.html#BASH4REF",target:"_blank",rel:"noopener noreferrer"},P=t("td",null,"-e",-1),B=t("td",null,"errexit",-1),E={href:"http://tldp.org/LDP/abs/html/loops1.html#UNTILLOOPREF",target:"_blank",rel:"noopener noreferrer"},S={href:"http://tldp.org/LDP/abs/html/loops1.html#WHILELOOPREF",target:"_blank",rel:"noopener noreferrer"},D={href:"http://tldp.org/LDP/abs/html/testconstructs.html#TESTCONSTRUCTS1",target:"_blank",rel:"noopener noreferrer"},O={href:"http://tldp.org/LDP/abs/html/list-cons.html#LCONS1",target:"_blank",rel:"noopener noreferrer"},R=t("tr",null,[t("td",null,"-f"),t("td",null,"noglob"),t("td",null,"禁用文件名扩展(就是禁用globbing)")],-1),T=t("td",null,"globstar",-1),F={href:"http://tldp.org/LDP/abs/html/bashver4.html#GLOBSTARREF",target:"_blank",rel:"noopener noreferrer"},N={href:"http://tldp.org/LDP/abs/html/globbingref.html",target:"_blank",rel:"noopener noreferrer"},I={href:"http://tldp.org/LDP/abs/html/bashver4.html#BASH4REF",target:"_blank",rel:"noopener noreferrer"},y=t("tr",null,[t("td",null,"-i"),t("td",null,"interactive"),t("td",null,"让脚本以交互模式运行")],-1),A=t("tr",null,[t("td",null,"-n"),t("td",null,"noexec"),t("td",null,"从脚本中读取命令, 但是不执行它们(做语法检查)")],-1),z=t("tr",null,[t("td",null,"-o Option-Name"),t("td",null,"(none)"),t("td",null,"调用Option-Name选项")],-1),C=t("td",null,"-o posix",-1),$=t("td",null,"POSIX",-1),q={href:"http://tldp.org/LDP/abs/html/sha-bang.html#POSIX2REF",target:"_blank",rel:"noopener noreferrer"},V=t("td",null,"-o pipefail",-1),X=t("td",null,"pipe failure",-1),H={href:"http://tldp.org/LDP/abs/html/exit-status.html#EXITSTATUSREF",target:"_blank",rel:"noopener noreferrer"},U=t("tr",null,[t("td",null,"-p"),t("td",null,"privileged"),t("td",null,'以"suid"身份来运行脚本(小心!)')],-1),j=t("td",null,"-r",-1),w=t("td",null,"restricted",-1),G={href:"http://tldp.org/LDP/abs/html/restricted-sh.html",target:"_blank",rel:"noopener noreferrer"},J=t("tr",null,[t("td",null,"-s"),t("td",null,"stdin"),t("td",null,"从stdin 中读取命令")],-1),M=t("tr",null,[t("td",null,"-t"),t("td",null,"(none)"),t("td",null,"执行完第一个命令之后, 就退出")],-1),W=t("tr",null,[t("td",null,"-u"),t("td",null,"nounset"),t("td",null,"如果尝试使用了未定义的变量, 就会输出一个错误消息, 然后强制退出")],-1),K=t("tr",null,[t("td",null,"-v"),t("td",null,"verbose"),t("td",null,"在执行每个命令之前, 把每个命令打印到stdout上")],-1),Q=t("tr",null,[t("td",null,"-x"),t("td",null,"xtrace"),t("td",null,"与-v选项类似, 但是会打印完整命令")],-1),Y=t("td",null,"-",-1),Z=t("td",null,"(none)",-1),tt={href:"http://tldp.org/LDP/abs/html/internalvariables.html#POSPARAMREF",target:"_blank",rel:"noopener noreferrer"},lt=t("tr",null,[t("td",null,"--"),t("td",null,"(none)"),t("td",null,"unset(释放)位置参数. 如果指定了参数列表(-- arg1 arg2), 那么位置 参数将会依次设置到参数列表中.")],-1),et=t("p",null,'重点是后面的"-"和"--"，理解一下',-1);function nt(st,rt){const e=r("ExternalLinkIcon");return o(),d("div",null,[u,t("table",null,[h,t("tbody",null,[c,_,p,b,g,m,f,t("tr",null,[v,x,t("td",null,[l("通知有活跃shell"),t("a",k,[l("任务"),n(e)]),l("的用户退出。"),t("a",L,[l("Bash 4"),n(e)]),l('版本中引入，仍然处于"实验"阶段. 用法:shopt -s checkjobs .(注意：可能会hang！')])]),t("tr",null,[P,B,t("td",null,[l("当脚本发生第一个错误时, 就退出脚本, 换种说法就是, 当一个命令返回非零值时, 就退出脚本(除了"),t("a",E,[l("until"),n(e)]),l("或"),t("a",S,[l("while loops"),n(e)]),l(", "),t("a",D,[l("if-tests"),n(e)]),l(", "),t("a",O,[l("list constructs"),n(e)]),l(")")])]),R,t("tr",null,[T,t("td",null,[t("a",F,[l("globbing star-match"),n(e)])]),t("td",null,[l("打开"),t("a",N,[l("globbling"),n(e)]),l("操作符(Bash "),t("a",I,[l("4+"),n(e)]),l("). 使用方法：shopt -s globstar")])]),y,A,z,t("tr",null,[C,$,t("td",null,[l("修改Bash或被调用脚本的行为, 使其符合"),t("a",q,[l("POSIX"),n(e)]),l("标准.")])]),t("tr",null,[V,X,t("td",null,[l("创建一个管道去返回最后一条命令的"),t("a",H,[l("退出状态码"),n(e)]),l("，这个返回值是一个非0的返回值")])]),U,t("tr",null,[j,w,t("td",null,[l("以受限模式来运行脚本(参考 "),t("a",G,[l("22"),n(e)]),l(").")])]),J,M,W,K,Q,t("tr",null,[Y,Z,t("td",null,[l("选项结束标志. 后面的参数为"),t("a",tt,[l("位置参数"),n(e)]),l(".")])]),lt])]),et])}const at=s(i,[["render",nt],["__file","curl-bash.html.vue"]]);export{at as default};

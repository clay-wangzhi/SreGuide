import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as r,a as n,b as e,d as o,e as l}from"./app-b4984da4.js";const h={},s=l('<h1 id="_1-1-初识python" tabindex="-1"><a class="header-anchor" href="#_1-1-初识python" aria-hidden="true">#</a> 1.1 初识Python</h1><blockquote><p>转载自：Python - 100天从新手到大师 | 骆昊</p></blockquote><h2 id="python简介" tabindex="-1"><a class="header-anchor" href="#python简介" aria-hidden="true">#</a> Python简介</h2><h3 id="python的历史" tabindex="-1"><a class="header-anchor" href="#python的历史" aria-hidden="true">#</a> Python的历史</h3>',4),c=n("li",null,"1989年圣诞节：Guido von Rossum开始写Python语言的编译器。",-1),u=n("li",null,"1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，还有对列表、字典等核心数据类型，同时支持以模块为基础来构造应用程序。",-1),p=n("li",null,"1994年1月：Python 1.0正式发布。",-1),y={href:"https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)",target:"_blank",rel:"noopener noreferrer"},v={href:"https://zh.wikipedia.org/wiki/Unicode",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,"2008年12月3日：Python 3.0发布，它并不完全兼容之前的Python代码，不过因为目前还有不少公司在项目和运维中使用Python 2.x版本，所以Python 3.x的很多新特性后来也被移植到Python 2.6/2.7版本中。",-1),b={href:"http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html",target:"_blank",rel:"noopener noreferrer"},P=l('<h3 id="python的优缺点" tabindex="-1"><a class="header-anchor" href="#python的优缺点" aria-hidden="true">#</a> Python的优缺点</h3><p>Python的优点很多，简单的可以总结为以下几点。</p><ol><li>简单明了，学习曲线低，比很多编程语言都容易上手。</li><li>开放源代码，拥有强大的社区和生态圈，尤其是在数据分析和机器学习领域。</li><li>解释型语言，天生具有平台可移植性，代码可以工作于不同的操作系统。</li><li>对两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。</li><li>代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。</li></ol><p>Python的缺点主要集中在以下几点。</p><ol><li>执行效率稍低，对执行效率要求高的部分可以由其他语言（如：C、C++）编写。</li><li>代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被弱化。</li><li>在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。</li></ol><h3 id="python的应用领域" tabindex="-1"><a class="header-anchor" href="#python的应用领域" aria-hidden="true">#</a> Python的应用领域</h3><p>目前Python在Web应用后端开发、云基础设施建设、DevOps、网络数据采集（爬虫）、自动化测试、数据分析、机器学习等领域都有着广泛的应用。</p><h2 id="python-解释器分类" tabindex="-1"><a class="header-anchor" href="#python-解释器分类" aria-hidden="true">#</a> Python 解释器分类</h2><table><thead><tr><th>解释器</th><th>说明</th></tr></thead><tbody><tr><td><code>CPython</code></td><td>官方，C 语言开发，最广泛的 Python 解释器</td></tr><tr><td><code>IPython</code></td><td>一个交互式、功能增强的<code>CPython</code></td></tr><tr><td><code>PyPy</code></td><td>Python 语言写的 Python 解释器，<code>JIT</code>技术，动态编译 Python 代码</td></tr><tr><td><code>Jython</code></td><td>Python 的源代码编译成 Java 的字节码，跑在<code>JVM</code>上</td></tr><tr><td><code>IronPython</code></td><td>与<code>Jytho</code>n类似，运行在<code>.Net</code>平台上的解释器，Python 代码被编译成<code>.Net</code>的字节码</td></tr><tr><td><code>stackless</code></td><td>Python的增强版本解释器，不使用<code>CPython</code>的 C 的栈，采用微线程概念编程，并发编程</td></tr></tbody></table><p>想要开始Python编程之旅，首先得在自己使用的计算机上安装Python解释器环境，下面将以安装官方的Python解释器为例，讲解如何在不同的操作系统上安装Python环境。官方的Python解释器是用C语言实现的，也是使用最为广泛的Python解释器，通常称之为CPython。</p><h2 id="安装python解释器" tabindex="-1"><a class="header-anchor" href="#安装python解释器" aria-hidden="true">#</a> 安装Python解释器</h2><h3 id="windows环境" tabindex="-1"><a class="header-anchor" href="#windows环境" aria-hidden="true">#</a> Windows环境</h3>',12),_={href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"},g={href:"https://zhuanlan.zhihu.com/p/32087135",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.microsoft.com/zh-cn/download/details.aspx?id=48145",target:"_blank",rel:"noopener noreferrer"},x={href:"https://dl.pconline.com.cn/download/360074-1.html",target:"_blank",rel:"noopener noreferrer"},w=n("h3",{id:"linux环境",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linux环境","aria-hidden":"true"},"#"),e(" Linux环境")],-1),S={href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"},k=l(`<ol><li>安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>yum -y install wget gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>下载Python源代码并解压缩到指定目录。</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz
xz -d Python-3.7.6.tar.xz
tar -xvf Python-3.7.6.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>切换至Python源代码目录并执行下面的命令进行配置和安装。</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>cd Python-3.7.6
./configure --prefix=/usr/local/python37 --enable-optimizations
make &amp;&amp; make install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>修改用户主目录下名为.bash_profile的文件，配置PATH环境变量并使其生效。</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>cd ~
vim .bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code># ... 此处省略上面的代码 ...

export PATH=$PATH:/usr/local/python37/bin

# ... 此处省略下面的代码 ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>激活环境变量。</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>source .bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="macos环境" tabindex="-1"><a class="header-anchor" href="#macos环境" aria-hidden="true">#</a> macOS环境</h3>`,12),C={href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"python",-1),A=n("code",null,"python3",-1),z=l(`<h2 id="运行python程序" tabindex="-1"><a class="header-anchor" href="#运行python程序" aria-hidden="true">#</a> 运行Python程序</h2><h3 id="确认python的版本" tabindex="-1"><a class="header-anchor" href="#确认python的版本" aria-hidden="true">#</a> 确认Python的版本</h3><p>可以Windows的命令行提示符中键入下面的命令。</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>python --version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在Linux或macOS系统的终端中键入下面的命令。</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>python3 --version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然也可以先输入<code>python</code>或<code>python3</code>进入交互式环境，再执行以下的代码检查Python的版本。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>import sys

print(sys.version_info)
print(sys.version)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写python源代码" tabindex="-1"><a class="header-anchor" href="#编写python源代码" aria-hidden="true">#</a> 编写Python源代码</h3>`,9),B={href:"https://www.sublimetext.com/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},T=l(`<div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>print(&#39;hello, world!&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="运行程序" tabindex="-1"><a class="header-anchor" href="#运行程序" aria-hidden="true">#</a> 运行程序</h3><p>切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了&quot;hello, world!&quot;。</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>python hello.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>python3 hello.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function W(N,O){const t=a("ExternalLinkIcon");return i(),r("div",null,[s,n("ol",null,[c,u,p,n("li",null,[e("2000年10月16日：Python 2.0发布，增加了完整的"),n("a",y,[e("垃圾回收"),o(t)]),e("，提供了对"),n("a",v,[e("Unicode"),o(t)]),e("的支持。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。")]),m]),n("p",null,[e("目前我们使用的Python 3.7.x的版本是在2018年发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（例如：修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以阅读名为"),n("a",b,[e("《Python简史》"),o(t)]),e("的网络文章。")]),P,n("p",null,[e("可以在"),n("a",_,[e("Python官方网站"),o(t)]),e("下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装Python 3.x，需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.x to PATH”（将Python 3.x添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议选择自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示。如果稍后运行Python程序时，出现因为缺失一些动态链接库文件而导致Python解释器无法工作的问题，可以按照下面的方法加以解决。")]),n("p",null,[e("如果系统显示api-ms-win-crt*.dll文件缺失，可以参照"),n("a",g,[e("《api-ms-win-crt*.dll缺失原因分析和解决方法》"),o(t)]),e("一文讲解的方法进行处理或者直接在"),n("a",f,[e("微软官网"),o(t)]),e("下载Visual C++ Redistributable for Visual Studio 2015文件进行修复；如果是因为更新Windows的DirectX之后导致某些动态链接库文件缺失问题，可以下载一个"),n("a",x,[e("DirectX修复工具"),o(t)]),e("进行修复。")]),w,n("p",null,[e("Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在"),n("a",S,[e("Python的官方网站"),o(t)]),e("下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示（以CentOS为例）。")]),k,n("p",null,[e("macOS也自带了Python 2.x版本，可以通过"),n("a",C,[e("Python的官方网站"),o(t)]),e("提供的安装文件（pkg文件）安装Python 3.x的版本。默认安装完成后，可以通过在终端执行"),E,e("命令来启动2.x版本的Python解释器，启动3.x版本的Python解释器需要执行"),A,e("命令。")]),z,n("p",null,[e("可以用文本编辑工具（推荐使用"),n("a",B,[e("Sublime"),o(t)]),e("、"),n("a",V,[e("Visual Studio Code"),o(t)]),e("等高级文本编辑工具）编写Python源代码并用py作为后缀名保存该文件，代码内容如下所示。")]),T])}const I=d(h,[["render",W],["__file","first.html.vue"]]);export{I as default};

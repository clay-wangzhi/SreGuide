const t=JSON.parse('{"key":"v-e3abd37e","path":"/code/golang/go-fmt.html","title":"golang fmt格式“占位符”","lang":"zh-CN","frontmatter":{"category":"Golang","description":"golang fmt格式“占位符” 转载自：golang fmt格式“占位符” golang 的fmt 包实现了格式化I/O函数，类似于C的 printf 和 scanf。 # 定义示例类型和变量 type Human struct { Name string } var people = Human{Name:\\"zhangsan\\"}","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/golang/go-fmt.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"golang fmt格式“占位符”"}],["meta",{"property":"og:description","content":"golang fmt格式“占位符” 转载自：golang fmt格式“占位符” golang 的fmt 包实现了格式化I/O函数，类似于C的 printf 和 scanf。 # 定义示例类型和变量 type Human struct { Name string } var people = Human{Name:\\"zhangsan\\"}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang fmt格式“占位符”\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1041},"filePathRelative":"code/golang/go-fmt.md","localizedDate":"2023年4月19日","excerpt":"<h1> golang fmt格式“占位符”</h1>\\n<blockquote>\\n<p>转载自：<a href=\\"https://studygolang.com/articles/2644\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">golang fmt格式“占位符”</a></p>\\n</blockquote>\\n<p>golang 的fmt 包实现了格式化I/O函数，类似于C的 printf 和 scanf。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code># 定义示例类型和变量\\ntype Human <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    Name string\\n<span class=\\"token punctuation\\">}</span>\\n\\nvar people <span class=\\"token operator\\">=</span> Human<span class=\\"token punctuation\\">{</span>Name<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"zhangsan\\"</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Clay"},"autoDesc":true}');export{t as data};

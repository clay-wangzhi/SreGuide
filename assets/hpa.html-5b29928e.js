import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t}from"./app-e91902ff.js";const e={},p=t(`<h1 id="弹性伸缩落地实践" tabindex="-1"><a class="header-anchor" href="#弹性伸缩落地实践" aria-hidden="true">#</a> 弹性伸缩落地实践</h1><h2 id="_1-什么是-hpa" tabindex="-1"><a class="header-anchor" href="#_1-什么是-hpa" aria-hidden="true">#</a> 1. 什么是 HPA ?</h2><p>HPA（Horizontal Pod Autoscaler）是 Kubernetes 中的一种资源自动伸缩机制，用于根据某些指标动态调整 Pod 的副本数量。</p><h2 id="_2-什么时候需要-hpa" tabindex="-1"><a class="header-anchor" href="#_2-什么时候需要-hpa" aria-hidden="true">#</a> 2. 什么时候需要 HPA ？</h2><ul><li>负载波动：当您的应用程序的负载经常发生波动时，HPA 可以自动调整 Pod 的副本数量，以适应负载的变化。例如，对于 Web 应用程序，在高峰期需要更多的副本以处理更多的请求，而在低谷期可以减少副本数量以节省资源。</li><li>活动推广：当您的应用程序需要扩展以满足推广活动、新产品发布或突发事件带来的流量增加时，HPA 可以自动增加 Pod 的副本数量，以提供更高的容量和性能。这有助于保持应用程序的可用性和用户体验。</li><li>定时弹性：大促期间，设置开始和结束时间，自动弹性扩缩容，不用人工干预，提高效率。</li><li>节约成本：通过使用 HPA，您可以根据应用程序的负载需求自动调整 Pod 的副本数量。这可以帮助您避免过度分配资源，节省资源和成本。当负载较低时，HPA 可以减少副本数量，释放不必要的资源。</li></ul><h2 id="_3-原生-hpa-的不足" tabindex="-1"><a class="header-anchor" href="#_3-原生-hpa-的不足" aria-hidden="true">#</a> 3. 原生 HPA 的不足</h2><ul><li>使用率计算基于 <code>resources.requests</code></li><li>不支持定时扩缩容</li></ul><h2 id="_4-keda" tabindex="-1"><a class="header-anchor" href="#_4-keda" aria-hidden="true">#</a> 4. KEDA</h2><p>采用 KEDA 作为弹性伸缩系统的基座，主要考虑到如下优势点：</p><ul><li>功能丰富：内嵌 CPU/Cron/Prom 多种伸缩策略，原生支持缩容至零。</li><li>扩展性好：解耦被伸缩对象（支持/scale 子资源即可）和伸缩指标，提供强大的插件机制和抽象接口（scaler + metrics adapter），增加伸缩指标非常便利。</li><li>社区强大：CNCF 官方毕业项目，微软和 RedHat 强力支持。</li></ul><h3 id="_4-1-工作原理" tabindex="-1"><a class="header-anchor" href="#_4-1-工作原理" aria-hidden="true">#</a> 4.1 工作原理</h3><p>KEDA 监控来自外部指标提供程序系统（例如 Azure Monitor）的指标，然后根据基于指标值的缩放规则进行缩放。它直接与度量提供者系统通信。它作为 Kubernetes Operator 运行，它只是一个 pod 并持续监控。</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640.png" alt="img"></p><p>KEDA 将 K8s Core Metrics Pipeline 和 Monitoring Pipeline 处理流程统一化，并内置多种 scaler ( link )，提供开箱即用的弹性策略支持，如常见的基于 CPU/Memory 的弹性策略、定时弹性等：</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640-20231116175808185.png" alt="img"></p><h2 id="_4-最佳实践" tabindex="-1"><a class="header-anchor" href="#_4-最佳实践" aria-hidden="true">#</a> 4. 最佳实践</h2><blockquote><p>说明：</p><p>原生Deployment对象不支持灰度发布策略，所以改用 Argo-Rollout 资源对象，下面示例均采用 Argo-Rollout 演示</p></blockquote><h3 id="_4-1-定时弹性" tabindex="-1"><a class="header-anchor" href="#_4-1-定时弹性" aria-hidden="true">#</a> 4.1 定时弹性</h3><h4 id="_4-1-1-后端模版" tabindex="-1"><a class="header-anchor" href="#_4-1-1-后端模版" aria-hidden="true">#</a> 4.1.1 后端模版</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> keda.sh/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ScaledObject
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>cron
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> &lt;env<span class="token punctuation">&gt;</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">minReplicaCount</span><span class="token punctuation">:</span> &lt;origin<span class="token punctuation">-</span>replicas<span class="token punctuation">&gt;</span>
  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>
    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> argoproj.io/v1alpha1
    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rollout
    <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default
  <span class="token key atrule">triggers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> cron
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">timezone</span><span class="token punctuation">:</span> Asia/Shanghai
      <span class="token key atrule">start</span><span class="token punctuation">:</span> 30 * * * *
      <span class="token key atrule">end</span><span class="token punctuation">:</span> 45 * * * *
      <span class="token key atrule">desiredReplicas</span><span class="token punctuation">:</span> <span class="token string">&quot;10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-前端设计" tabindex="-1"><a class="header-anchor" href="#_4-1-2-前端设计" aria-hidden="true">#</a> 4.1.2 前端设计</h4><p>支持三个周期</p><ul><li>按天</li><li>按星期</li><li>自定义 Cron 表达式</li></ul><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640-20231116175808305.png" alt="img"></p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640-20231116175808409.png" alt="img"></p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640-20231116175808578.png" alt="img"></p><h4 id="_4-1-3-消息通知模版" tabindex="-1"><a class="header-anchor" href="#_4-1-3-消息通知模版" aria-hidden="true">#</a> 4.1.3 消息通知模版</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>定时HPA动态扩缩容提醒：

AppID：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appid</span><span class="token punctuation">&gt;</span></span>
归属环境：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span><span class="token punctuation">&gt;</span></span>
容器集群：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cluster</span><span class="token punctuation">&gt;</span></span>
开始扩容时间：30 11 <span class="token italic"><span class="token punctuation">*</span><span class="token content"> </span><span class="token punctuation">*</span></span> 1
结束扩容时间：30 12 <span class="token italic"><span class="token punctuation">*</span><span class="token content"> </span><span class="token punctuation">*</span></span> 1
容器数量变化：1 --&gt; 2
触发时间：2023-11-13 12:35:16
如有疑问可参考：HPA使用文档，或咨询@SRE客服
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-基于资源的弹性" tabindex="-1"><a class="header-anchor" href="#_4-2-基于资源的弹性" aria-hidden="true">#</a> 4.2 基于资源的弹性</h3><p>根据 cpu、mem 等资源使用率，自动扩缩容，低负载缩容，减小不必要资源占用，高负载自动扩容，保证应用有足够的资源使用。</p><h4 id="_4-2-1-后端模版-数据降噪" tabindex="-1"><a class="header-anchor" href="#_4-2-1-后端模版-数据降噪" aria-hidden="true">#</a> 4.2.1 后端模版（数据降噪）</h4><blockquote><p>说明：</p><p>基于 Prometheus 拉取真实资源使用情况，并屏蔽刚启动的 Pod</p><p>-default 为基线应用，cluster、zone 是 Prometheus remote_write 到 VictoriaMetrics 新增便签，便于区分集群和区域</p><p>VictoriaMetrics 是统一汇总、查询层，方便不同集群使用一套数据源</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> keda.sh/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ScaledObject
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">scaledobject.keda.sh/name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span>
  namespace<span class="token punctuation">:</span>&lt;env<span class="token punctuation">&gt;</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">maxReplicaCount</span><span class="token punctuation">:</span> &lt;max<span class="token punctuation">-</span>replicas<span class="token punctuation">&gt;</span>
  <span class="token key atrule">minReplicaCount</span><span class="token punctuation">:</span> &lt;origin<span class="token punctuation">-</span>replicas<span class="token punctuation">&gt;</span>
  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>
    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> argoproj.io/v1alpha1
    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rollout
    <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default
  <span class="token key atrule">triggers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">metricName</span><span class="token punctuation">:</span> cpu_utilization
      <span class="token key atrule">query</span><span class="token punctuation">:</span> sum((sum (rate(container_cpu_usage_seconds_total<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;&quot;<span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span>))
        by(pod) and on(pod) time() <span class="token punctuation">-</span> kube_pod_start_time<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">}</span>
        <span class="token punctuation">&gt;</span> 150 )/( sum (container_spec_cpu_quota<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;&quot;<span class="token punctuation">}</span>)
        by(pod) /100000) * 100)
      <span class="token key atrule">serverAddress</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//&lt;victoria<span class="token punctuation">-</span>select<span class="token punctuation">&gt;</span>/select/1/prometheus
      <span class="token key atrule">threshold</span><span class="token punctuation">:</span> <span class="token string">&quot;80&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> prometheus
  <span class="token punctuation">-</span> <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">metricName</span><span class="token punctuation">:</span> mem_utilization
      <span class="token key atrule">query</span><span class="token punctuation">:</span> sum((sum by(pod) (container_memory_working_set_bytes<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;&quot;<span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;POD&quot;<span class="token punctuation">}</span>)
        and on(pod) time() <span class="token punctuation">-</span>kube_pod_start_time<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">}</span><span class="token punctuation">&gt;</span>
        150) / sum by(pod) (container_spec_memory_limit_bytes<span class="token punctuation">{</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>namespace=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>pod=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;&quot;<span class="token punctuation">,</span>container<span class="token tag">!=</span>&quot;POD&quot;<span class="token punctuation">}</span>)<span class="token important">*100)</span>
      <span class="token key atrule">serverAddress</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//&lt;victoria<span class="token punctuation">-</span>select<span class="token punctuation">&gt;</span>/select/1/prometheus
      <span class="token key atrule">threshold</span><span class="token punctuation">:</span> <span class="token string">&quot;80&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> prometheus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-前端设计" tabindex="-1"><a class="header-anchor" href="#_4-2-2-前端设计" aria-hidden="true">#</a> 4.2.2 前端设计</h4><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/640-20231116175808654.png" alt="img"></p><h4 id="_4-2-3-消息通知模版" tabindex="-1"><a class="header-anchor" href="#_4-2-3-消息通知模版" aria-hidden="true">#</a> 4.2.3 消息通知模版</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>指标HPA动态扩缩容提醒：
 
AppID：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appid</span><span class="token punctuation">&gt;</span></span>
归属环境：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span><span class="token punctuation">&gt;</span></span>
容器集群：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cluster</span><span class="token punctuation">&gt;</span></span>
触发指标：cpu使用率（设定阈值为: 40.0%)
触发指标当前值：77.0%
容器数量变化：1 --&gt; 2
触发时间：2023-11-16 10:38:40
如有疑问可参考：HPA使用文档，或咨询@SRE客服
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-基于业务指标的弹性" tabindex="-1"><a class="header-anchor" href="#_4-3-基于业务指标的弹性" aria-hidden="true">#</a> 4.3 基于业务指标的弹性</h3><p>上生产前，在 UT 环境压测，确定 最大 QPS、最高接受的 RT、最大接受 消息积压数等，监控平台提供接口，根据阀值，自动扩容，自动应对突然流量或压力，保障应用稳定性。</p><h4 id="_4-3-1-后端模版" tabindex="-1"><a class="header-anchor" href="#_4-3-1-后端模版" aria-hidden="true">#</a> 4.3.1 后端模版</h4><blockquote><p>说明：</p><p>QPS 取自 CAT 数据，SRE这边将 CAT 数据使用工具写入到 VictoriaMetrics 中</p><p>前端设计、消息通知 和 基于资源的弹性使用的一套模版，都属于基于指标触发的 HPA，这里不再赘述</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> keda.sh/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ScaledObject
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">scaledobject.keda.sh/name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span>
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> &lt;env<span class="token punctuation">&gt;</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">maxReplicaCount</span><span class="token punctuation">:</span> &lt;max<span class="token punctuation">-</span>replicas<span class="token punctuation">&gt;</span>
  <span class="token key atrule">minReplicaCount</span><span class="token punctuation">:</span> &lt;origin<span class="token punctuation">-</span>replicas<span class="token punctuation">&gt;</span>
  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>
    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> argoproj.io/v1alpha1
    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Rollout
    <span class="token key atrule">name</span><span class="token punctuation">:</span> &lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default
  <span class="token key atrule">triggers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">metricName</span><span class="token punctuation">:</span> http_requests_total
      <span class="token key atrule">query</span><span class="token punctuation">:</span> sum(cat_url_info<span class="token punctuation">{</span>appid=&quot;&lt;appid<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>type=&quot;count&quot;<span class="token punctuation">,</span>env=&quot;&lt;env<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>assettype=&quot;docker&quot;<span class="token punctuation">,</span>zone=&quot;&lt;zone<span class="token punctuation">&gt;</span>&quot;<span class="token punctuation">,</span>host=~&quot;&lt;appid<span class="token punctuation">&gt;</span><span class="token punctuation">-</span>default.<span class="token important">*&quot;</span><span class="token punctuation">}</span>)/60
      <span class="token key atrule">serverAddress</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//&lt;victoria<span class="token punctuation">-</span>select<span class="token punctuation">&gt;</span>/select/1/prometheus
      <span class="token key atrule">threshold</span><span class="token punctuation">:</span> <span class="token string">&quot;1000&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> prometheus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-补充说明" tabindex="-1"><a class="header-anchor" href="#_4-4-补充说明" aria-hidden="true">#</a> 4.4 补充说明</h3><h4 id="_4-4-1-计算公式" tabindex="-1"><a class="header-anchor" href="#_4-4-1-计算公式" aria-hidden="true">#</a> 4.4.1 计算公式</h4><table><thead><tr><th></th><th>计算公式</th><th>检查触发器间隔</th><th>指标最新数据间隔</th><th>备注</th></tr></thead><tbody><tr><td>CPU 使用率</td><td>所有容器CPU使用率之和/ 容器数量</td><td>30s</td><td>30s</td><td>排除了刚启动的 Pod</td></tr><tr><td>MEM 使用率</td><td>所有容器MEM使用率之和 / 容器数量</td><td>30s</td><td>30s</td><td>排除了刚启动的 Pod</td></tr><tr><td>QPS</td><td>所有容器每秒的请求量 / 容器数量</td><td>30s</td><td>60s</td><td>最新数据为 上一分钟 QPS 的平均值</td></tr></tbody></table><h4 id="_4-4-2-扩缩容默认触发时间" tabindex="-1"><a class="header-anchor" href="#_4-4-2-扩缩容默认触发时间" aria-hidden="true">#</a> 4.4.2 扩缩容默认触发时间</h4><p><strong>扩容时间</strong></p><p>当检测结果大于设置的阈值时，立刻触发扩容，没有稳定窗口。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>期望副本数 = ceil[当前副本数 * (当前指标 / 期望指标)]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>⚠️ HPA 在计算目标副本数时会有一个10%的波动因子。如果在波动范围内，HPA 并不会调整副本数目。</p></blockquote><p><strong>缩容时间</strong></p><p>稳定窗口的时间为 300 秒，满足缩容条件后，连续5分钟持续满足缩容条件，触发缩容</p><h3 id="_4-5-建立可观测性大盘" tabindex="-1"><a class="header-anchor" href="#_4-5-建立可观测性大盘" aria-hidden="true">#</a> 4.5 建立可观测性大盘</h3><p>后续补充</p><h3 id="_4-6-注意事项-优雅上下线" tabindex="-1"><a class="header-anchor" href="#_4-6-注意事项-优雅上下线" aria-hidden="true">#</a> 4.6 注意事项（优雅上下线）</h3><p>自动扩容大多数是在高并发大流量情况触发，此时如果没有对应的解决方案，就会产生短时间流量有损问题。</p><p>这里先说下问题，下篇文章会详细介绍具体场景及解决方案</p><table><thead><tr><th>过程</th><th>问题</th></tr></thead><tbody><tr><td>无损下线</td><td>消费者无法及时感知生产者已下线</td></tr><tr><td>无损上线</td><td>注册太早</td></tr><tr><td>无损上线</td><td>发布态与运行态未对⻬</td></tr><tr><td>无损上线</td><td>初始化慢</td></tr></tbody></table>`,58),l=[p];function i(o,c){return a(),s("div",null,l)}const r=n(e,[["render",i],["__file","hpa.html.vue"]]);export{r as default};

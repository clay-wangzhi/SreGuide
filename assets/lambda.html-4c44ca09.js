const n=JSON.parse('{"key":"v-ef1495f0","path":"/code/python/lambda.html","title":"5.3 匿名函数","lang":"zh-CN","frontmatter":{"category":"Python","description":"5.3 匿名函数 Python 中，匿名函数也叫 lambda 表达式。 匿名：隐藏名字，即没有名称 匿名函数：没有名字的函数。 函数没有名字该如何定义？函数没有名字如何调用？ Lambda 表达式 Python中，使用 Lambda 表达式构建匿名函数。 def foo(x): return x ** 2 lambda x: x ** 2 # 定义 a = (lambda x: x ** 2)(4) # 调用 print(a) foo = lambda x,y: (x+y) ** 2 # 定义函数 print(foo(1, 2)) # 等价于 def foo(x,y): return (x+y) ** 2","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/python/lambda.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"5.3 匿名函数"}],["meta",{"property":"og:description","content":"5.3 匿名函数 Python 中，匿名函数也叫 lambda 表达式。 匿名：隐藏名字，即没有名称 匿名函数：没有名字的函数。 函数没有名字该如何定义？函数没有名字如何调用？ Lambda 表达式 Python中，使用 Lambda 表达式构建匿名函数。 def foo(x): return x ** 2 lambda x: x ** 2 # 定义 a = (lambda x: x ** 2)(4) # 调用 print(a) foo = lambda x,y: (x+y) ** 2 # 定义函数 print(foo(1, 2)) # 等价于 def foo(x,y): return (x+y) ** 2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5.3 匿名函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.44,"words":432},"filePathRelative":"code/python/lambda.md","localizedDate":"2023年4月19日","excerpt":"<h1> 5.3 匿名函数</h1>\\n<p>Python 中，匿名函数也叫 lambda 表达式。</p>\\n<p>匿名：隐藏名字，即没有名称</p>\\n<p>匿名函数：没有名字的函数。</p>\\n<p>函数没有名字该如何定义？函数没有名字如何调用？</p>\\n<p><strong>Lambda 表达式</strong></p>\\n<p>Python中，使用 Lambda 表达式构建匿名函数。</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">**</span> <span class=\\"token number\\">2</span>\\n<span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span> x <span class=\\"token operator\\">**</span> <span class=\\"token number\\">2</span> <span class=\\"token comment\\"># 定义</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span> x <span class=\\"token operator\\">**</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># 调用</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\nfoo <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">,</span>y<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">(</span>x<span class=\\"token operator\\">+</span>y<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">**</span> <span class=\\"token number\\">2</span> <span class=\\"token comment\\"># 定义函数</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>foo<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\"># 等价于</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>x<span class=\\"token operator\\">+</span>y<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">**</span> <span class=\\"token number\\">2</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Clay"},"autoDesc":true}');export{n as data};

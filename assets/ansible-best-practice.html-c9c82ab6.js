import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-a3d23ff5.js";const t={},p=e(`<h1 id="ansible-使用中的一些实践" tabindex="-1"><a class="header-anchor" href="#ansible-使用中的一些实践" aria-hidden="true">#</a> Ansible 使用中的一些实践</h1><h2 id="本地执行-记录-输出结果" tabindex="-1"><a class="header-anchor" href="#本地执行-记录-输出结果" aria-hidden="true">#</a> 本地执行 记录 输出结果</h2><p>样例一</p><p><code>cat check_app.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> all
  <span class="token key atrule">gather_facts</span><span class="token punctuation">:</span> no
  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">script</span><span class="token punctuation">:</span> port_check.sh
      <span class="token key atrule">register</span><span class="token punctuation">:</span> netstat

    <span class="token punctuation">-</span> <span class="token key atrule">shell</span><span class="token punctuation">:</span> source /etc/profile <span class="token important">&amp;&amp;</span> jps <span class="token punctuation">|</span> grep <span class="token punctuation">-</span>v Jps <span class="token punctuation">|</span> awk &#39;<span class="token punctuation">{</span>print $2<span class="token punctuation">}</span>&#39;
      <span class="token key atrule">register</span><span class="token punctuation">:</span> java

    <span class="token punctuation">-</span> <span class="token key atrule">shell</span><span class="token punctuation">:</span> echo <span class="token punctuation">{</span><span class="token punctuation">{</span>ansible_ssh_host<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>netstat.stdout_lines<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>java.stdout_lines<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span> /home/clay/result.txt
      <span class="token key atrule">connection</span><span class="token punctuation">:</span> local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cat files/port_check.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token function">netstat</span> <span class="token parameter variable">-npltu</span> <span class="token operator">|</span> <span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;sshd|zabbix_agentd|ntpd|chronyd&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> -F/ <span class="token string">&#39;NR&gt;2{ print $2 }&#39;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">uniq</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>样例二</p><p>执行结果返回较多（含换行符），分割成多个文件</p><p><code>cat sec_log4j.yml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> all
  <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root
  <span class="token key atrule">gather_facts</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token comment">#serial: 1</span>
  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> bash sec script
    <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token string">&quot;log4j_scan.sh&quot;</span>
    <span class="token key atrule">register</span><span class="token punctuation">:</span> sec_q
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> copy output to local file
    <span class="token key atrule">copy</span><span class="token punctuation">:</span>
      <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ sec_q.stdout}}&quot;</span>
      <span class="token key atrule">dest</span><span class="token punctuation">:</span> <span class="token string">&quot;/tmp/sec_log4j2/{{ inventory_hostname }}.log&quot;</span>
    <span class="token key atrule">delegate_to</span><span class="token punctuation">:</span> localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),c=[p];function l(o,i){return s(),a("div",null,c)}const k=n(t,[["render",l],["__file","ansible-best-practice.html.vue"]]);export{k as default};

const e=JSON.parse('{"key":"v-049ef682","path":"/code/python/python-thread-sync.html","title":"10.2 线程同步","lang":"zh-CN","frontmatter":{"category":"Python","description":"10.2 线程同步 线程同步概念 线程同步，线程间协同，通过某种技术，让一个线程访问某些数据时，其他线程不能访问这些数据，直到该线程完成对数据的操作。 Event Event 事件，是线程间通信机制中最简单的实现，使用一个内部的标记 flag，通过 flag 的 True 或 False 的变化来进行操作。 名称 含义 set() 标记设置为True clear() 标记设置为False is_set() 标记是否为True wait(timeout=None) 设置等待标记为True的时长，None为无限等待。等到返回True，未等到超时了返回False","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/python/python-thread-sync.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"10.2 线程同步"}],["meta",{"property":"og:description","content":"10.2 线程同步 线程同步概念 线程同步，线程间协同，通过某种技术，让一个线程访问某些数据时，其他线程不能访问这些数据，直到该线程完成对数据的操作。 Event Event 事件，是线程间通信机制中最简单的实现，使用一个内部的标记 flag，通过 flag 的 True 或 False 的变化来进行操作。 名称 含义 set() 标记设置为True clear() 标记设置为False is_set() 标记是否为True wait(timeout=None) 设置等待标记为True的时长，None为无限等待。等到返回True，未等到超时了返回False"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10.2 线程同步\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"线程同步概念","slug":"线程同步概念","link":"#线程同步概念","children":[]},{"level":2,"title":"Event","slug":"event","link":"#event","children":[]},{"level":2,"title":"Lock","slug":"lock","link":"#lock","children":[{"level":3,"title":"锁分析","slug":"锁分析","link":"#锁分析","children":[]},{"level":3,"title":"上下文支持","slug":"上下文支持","link":"#上下文支持","children":[]},{"level":3,"title":"锁的应用场景","slug":"锁的应用场景","link":"#锁的应用场景","children":[]},{"level":3,"title":"非阻塞锁使用","slug":"非阻塞锁使用","link":"#非阻塞锁使用","children":[]}]},{"level":2,"title":"Queue的线程安全","slug":"queue的线程安全","link":"#queue的线程安全","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":7.58,"words":2273},"filePathRelative":"code/python/python-thread-sync.md","localizedDate":"2023年4月19日","excerpt":"<h1> 10.2 线程同步</h1>\\n<h2> 线程同步概念</h2>\\n<p>线程同步，线程间协同，通过某种技术，让一个线程访问某些数据时，其他线程不能访问这些数据，直到该线程完成对数据的操作。</p>\\n<h2> Event</h2>\\n<p>Event 事件，是线程间通信机制中最简单的实现，使用一个内部的标记 flag，通过 flag 的 True 或 False 的变化来进行操作。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>名称</th>\\n<th>含义</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>set()</td>\\n<td>标记设置为True</td>\\n</tr>\\n<tr>\\n<td>clear()</td>\\n<td>标记设置为False</td>\\n</tr>\\n<tr>\\n<td>is_set()</td>\\n<td>标记是否为True</td>\\n</tr>\\n<tr>\\n<td>wait(timeout=None)</td>\\n<td>设置等待标记为True的时长，None为无限等待。等到返回True，未等到超时了返回False</td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

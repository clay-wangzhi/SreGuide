import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as s,b as n,d as c,e as l}from"./app-5aac8996.js";const u={},i=s("h1",{id:"k8s-集群巡检",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#k8s-集群巡检","aria-hidden":"true"},"#"),n(" K8s 集群巡检")],-1),r={href:"https://clay-wangzhi.com/cloudnative/stability/dr-br/etcd-and-velero.html",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>今天发现有小伙伴还在群里讨论，有没有类似的工具/平台，虽然没有开源，我把其关键的 <strong>巡检指标</strong> 和 <strong>后端核心伪代码</strong> 分享出来，供各位同行参考。</p><h2 id="什么是平台巡检" tabindex="-1"><a class="header-anchor" href="#什么是平台巡检" aria-hidden="true">#</a> 什么是平台巡检</h2><p>平台巡检是一种监测和评估底层系统运行状况的工具，可帮助您快速发现系统中存在的潜在风险并给出相应修复建议。</p><p>该工具可用于扫描集群中的各个方面，包括系统性能瓶颈、业务组件运行状态、资源使用情况和配置问题等，以提高系统的性能、稳定性和可用性。</p><h2 id="巡检的意义" tabindex="-1"><a class="header-anchor" href="#巡检的意义" aria-hidden="true">#</a> 巡检的意义</h2><p>我反复思考，有了 metrics/logs/traces + grafana + alert ，还需要巡检做什么？以下是我总结巡检的意义：</p><ul><li>是监控的补充，比如证书过期、Pod CIDR 使用情况、Etcd 备份情况、Velero 备份情况，通过脚本更方便查看状态，编写 exporter 周期较长</li><li>可以监控 Prometheus、VictorMetric 等组件的状态，拉取最新数据情况，监控是否收集了各个组件的 metrics</li><li>是主动式的发现问题，能迅速了解整个集群的核心指标的状态，集中式检查，不用一个个 Grafana 图标检查</li></ul><h2 id="k8s-巡检关键指标" tabindex="-1"><a class="header-anchor" href="#k8s-巡检关键指标" aria-hidden="true">#</a> K8s 巡检关键指标</h2><p>分三类</p><ul><li>集群总览</li><li>核心组件状态</li><li>节点状态</li></ul><blockquote><p>里面的 Promql 和 Bash 脚本内容，需要根据实际情况进行配置！</p></blockquote><h3 id="集群总览" tabindex="-1"><a class="header-anchor" href="#集群总览" aria-hidden="true">#</a> 集群总览</h3><p><strong>巡检项名称：Node 使用情况</strong></p><p>描述：旨在查看集群 是否有备用资源</p><p>动作来源：bash</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Node 数量巡检脚本</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> errexit
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset

<span class="token assign-left variable">node_sum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get nodes <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR&gt;1&#39;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> master <span class="token parameter variable">-c</span><span class="token variable">)</span></span>
<span class="token assign-left variable">node_ready</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get nodes <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR&gt;1&#39;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> master <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> SchedulingDisabled <span class="token parameter variable">-c</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;| &quot;</span> <span class="token string">&quot;<span class="token variable">\${node_ready}</span>/<span class="token variable">\${node_sum}</span>&quot;</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$node_sum</span> <span class="token parameter variable">-gt</span> <span class="token variable">$node_ready</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;success&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;warning&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>巡检项名称：Pod 剩余情况</strong></p><p>描述：旨在查看 有无 Pod 资源可供分配</p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sum<span class="token punctuation">(</span>kube_node_status_capacity<span class="token punctuation">{</span>resource<span class="token operator">=</span><span class="token string">&#39;pods&#39;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>label_env<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>label_env<span class="token operator">=~</span><span class="token string">&quot;prod&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> unless on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> kube_node_role<span class="token punctuation">)</span> -
sum<span class="token punctuation">(</span>kube_pod_info *on <span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>label_env<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>label_env<span class="token operator">=~</span><span class="token string">&quot;prod&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> unless on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> kube_node_role<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&lt;&quot;, 90]</code></p><p><strong>巡检项名称：Pod CIDR 使用情况</strong></p><p>描述：Pod 剩余可分配 IP 数量</p><p>动作来源：bash</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Pod IP 剩余数量 巡检脚本</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> errexit
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset

<span class="token assign-left variable">pod_ip_free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>calicoctl ipam show <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&#39;%&#39;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $12}&#39;</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;| IP 剩余数量：&#39;</span> <span class="token variable">\${pod_ip_free}</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$pod_ip_free</span> <span class="token parameter variable">-gt</span> <span class="token number">500</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;success&quot;</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$pod_ip_free</span> <span class="token parameter variable">-gt</span> <span class="token number">100</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;warning&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;error&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>巡检项名称：集群 CPU 使用率</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span><span class="token number">1</span> - avg<span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>node_cpu_seconds_total<span class="token punctuation">{</span>mode<span class="token operator">=</span><span class="token string">&quot;idle&quot;</span>, <span class="token assign-left variable">cluster</span><span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>60s<span class="token punctuation">]</span><span class="token punctuation">)</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">))</span> * <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&gt;&quot;, 50]</code></p><p><strong>巡检项名称：集群 MEM 使用率</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span><span class="token number">1</span> - sum<span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span>node_memory_MemAvailable_bytes<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">)</span> / sum<span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span>node_memory_MemTotal_bytes<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">))</span> * <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&gt;&quot;, 85]</code></p><p><strong>巡检项名称：证书过期时间</strong></p><p>动作来源：bash</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># 证书过期时间 巡检脚本</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> errexit
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset

<span class="token assign-left variable">ct</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>openssl x509 <span class="token parameter variable">-in</span> /etc/kubernetes/pki/apiserver.crt <span class="token parameter variable">-noout</span> <span class="token parameter variable">-dates</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">&#39;=&#39;</span> <span class="token string">&#39;/notAfter/{print $2}&#39;</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1,$2,$3,$4}&#39;</span><span class="token variable">)</span></span>&quot;</span> +%s<span class="token variable">)</span></span>
<span class="token assign-left variable">dt</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>
<span class="token assign-left variable">expired</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token variable">$((</span>$ct<span class="token operator">-</span>$dt<span class="token variable">))</span></span>/<span class="token punctuation">(</span><span class="token number">60</span>*60*24<span class="token punctuation">))</span><span class="token punctuation">)</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;| &quot;</span> <span class="token variable">$expired</span> <span class="token string">&quot;天后过期&quot;</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$expired</span> <span class="token parameter variable">-gt</span> <span class="token number">60</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;success&quot;</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$expired</span> <span class="token parameter variable">-gt</span> <span class="token number">15</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;warning&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;error&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>巡检项名称：ectd 备份情况</strong></p><p>描述：是否有最新备份</p><p>动作来源：bash</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Etcd 备件检查脚本</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset

<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> /var/lib/docker/etcd_backup/ <span class="token parameter variable">-mmin</span> <span class="token parameter variable">-120</span><span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token variable">\${result}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;正常&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;success&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;异常&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;error&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>巡检项名称：velero备份情况</strong></p><p>描述：是否有最新备份</p><p>动作来源：bash</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Velero 备件检查脚本</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset
<span class="token assign-left variable">current_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>
<span class="token assign-left variable">backup_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>velero backup get <span class="token operator">|</span> <span class="token function">grep</span> core-shanghai <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $5}&#39;</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">backup_date_2d</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable">$backup_date</span> +2 days&quot;</span> +%F<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$backup_date_2d</span> <span class="token operator">&gt;</span> <span class="token variable">$current_date</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$backup_date</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;正常&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;success&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;异常&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;error&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="核心组件状态" tabindex="-1"><a class="header-anchor" href="#核心组件状态" aria-hidden="true">#</a> 核心组件状态</h3><h4 id="etcd" tabindex="-1"><a class="header-anchor" href="#etcd" aria-hidden="true">#</a> etcd</h4><p><strong>巡检项名称：etcd 集群节点是否不足</strong></p><p>动作来源：prometheusOr</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by<span class="token punctuation">(</span>job<span class="token punctuation">)</span> <span class="token punctuation">(</span>up<span class="token punctuation">{</span>job<span class="token operator">=~</span><span class="token string">&quot;.*etcd.*&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> <span class="token operator">==</span> bool <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">((</span>count by<span class="token punctuation">(</span>job<span class="token punctuation">)</span> <span class="token punctuation">(</span>up<span class="token punctuation">{</span>job<span class="token operator">=~</span><span class="token string">&quot;.*etcd.*&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> + <span class="token number">1</span><span class="token punctuation">)</span> / <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：是</p><p><strong>巡检项名称：etcd 集群是否有主节点</strong></p><p>动作来源：prometheusOr</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>etcd_server_has_leader<span class="token punctuation">{</span>job<span class="token operator">=~</span><span class="token string">&quot;.*etcd.*&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> <span class="token operator">==</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：否</p><p><strong>巡检项名称：etcd 主从是否切换频繁</strong></p><p>动作来源：prometheusOr</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rate<span class="token punctuation">(</span>etcd_server_leader_changes_seen_total<span class="token punctuation">{</span>job<span class="token operator">=~</span><span class="token string">&quot;.*etcd.*&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>15m<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">&gt;</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：是</p><p><strong>巡检项名称：etcd 请求成功率</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">100</span> - max<span class="token punctuation">(</span>sum<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>grpc_server_handled_total<span class="token punctuation">{</span>grpc_type<span class="token operator">=</span><span class="token string">&quot;unary&quot;</span>,grpc_code<span class="token operator">!=</span><span class="token string">&quot;OK&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span> by <span class="token punctuation">(</span>grpc_service<span class="token punctuation">)</span> / sum<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>grpc_server_started_total<span class="token punctuation">{</span>grpc_type<span class="token operator">=</span><span class="token string">&quot;unary&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span> by <span class="token punctuation">(</span>grpc_service<span class="token punctuation">)</span> * <span class="token number">100.0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&lt;&quot;, 99]</code></p><p><strong>巡检项名称：etcd 磁盘操作延迟情况</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>max<span class="token punctuation">(</span>histogram_quantile<span class="token punctuation">(</span><span class="token number">0.99</span>, sum<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>etcd_disk_wal_fsync_duration_seconds_bucket<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span> by <span class="token punctuation">(</span>instance,le<span class="token punctuation">))</span><span class="token punctuation">)</span> * <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&gt;&quot;, 10]</code></p><h4 id="kube-apiserver" tabindex="-1"><a class="header-anchor" href="#kube-apiserver" aria-hidden="true">#</a> kube-apiserver</h4><p><strong>巡检项名称：apiserver 健康状态</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sum<span class="token punctuation">(</span>up<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;apiserver&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> / count<span class="token punctuation">(</span>up<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;apiserver&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  *100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&lt;&quot;, 90]</code></p><p><strong>巡检项名称：apiserver QPS</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sum<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>apiserver_request_total<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&gt;&quot;, 3000]</code></p><p><strong>巡检项名称：apiserver 请求成功率</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>apiserver_request:availability30d<span class="token punctuation">{</span>verb<span class="token operator">=</span><span class="token string">&quot;all&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&lt;&quot;, 99]</code></p><p><strong>巡检项名称：apiserver 请求延迟</strong></p><p>动作来源：prometheus</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>max<span class="token punctuation">(</span>cluster_quantile:apiserver_request_duration_seconds:histogram_quantile<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>阈值：<code>[&quot;&gt;&quot;, 1]</code></p><p><strong>kube-controller-manager/kube-scheduler 巡检项同 apiserver</strong> 略</p><p><strong>coredns/ingress 只巡检了健康状态</strong> 略</p><h3 id="节点状态" tabindex="-1"><a class="header-anchor" href="#节点状态" aria-hidden="true">#</a> 节点状态</h3><h4 id="kubelet" tabindex="-1"><a class="header-anchor" href="#kubelet" aria-hidden="true">#</a> kubelet</h4><p><strong>巡检项名称：kubelet 节点不可用列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by<span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">(</span>kube_node_status_condition<span class="token punctuation">{</span>condition<span class="token operator">=</span><span class="token string">&quot;Ready&quot;</span>,job<span class="token operator">=</span><span class="token string">&quot;kube-state-metrics&quot;</span>,status<span class="token operator">=</span><span class="token string">&quot;true&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token operator">==</span>  <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：PLEG relist 耗时过高列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>histogram_quantile<span class="token punctuation">(</span><span class="token number">0.99</span>, sum<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>kubelet_pleg_relist_duration_seconds_bucket<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;kubelet&quot;</span>, <span class="token assign-left variable">metrics_path</span><span class="token operator">=</span><span class="token string">&quot;/metrics&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span> by <span class="token punctuation">(</span>node,le<span class="token punctuation">))</span> * <span class="token number">1000</span> <span class="token operator">&gt;</span> <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="资源使用情况" tabindex="-1"><a class="header-anchor" href="#资源使用情况" aria-hidden="true">#</a> 资源使用情况</h4><p>**巡检项名称：CPU 使用率大于50%的列表 **</p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span><span class="token number">1</span> - avg by<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> <span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span>rate<span class="token punctuation">(</span>node_cpu_seconds_total<span class="token punctuation">{</span>mode<span class="token operator">=</span><span class="token string">&quot;idle&quot;</span>, <span class="token assign-left variable">cluster</span><span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>60s<span class="token punctuation">]</span><span class="token punctuation">)</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">))</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span>,label_env<span class="token operator">=~</span><span class="token string">&quot;prod&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">)</span> * <span class="token number">100</span> <span class="token operator">&gt;</span> <span class="token number">50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：MEM 使用率大于80%的列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by <span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> <span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span><span class="token number">1</span> - <span class="token punctuation">(</span>node_memory_MemAvailable_bytes<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> / node_memory_MemTotal_bytes<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span>,label_env<span class="token operator">=~</span><span class="token string">&quot;prod&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">)</span> * <span class="token number">100</span> <span class="token operator">&gt;</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：磁盘 / 使用率大于80%的列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by <span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> <span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span><span class="token number">100</span> - <span class="token punctuation">((</span>node_filesystem_avail_bytes<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;node-exporter&quot;</span>,mountpoint<span class="token operator">=</span><span class="token string">&quot;/&quot;</span>,fstype<span class="token operator">!=</span><span class="token string">&quot;rootfs&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * <span class="token number">100</span><span class="token punctuation">)</span> / node_filesystem_size_bytes<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;node-exporter&quot;</span>,mountpoint<span class="token operator">=</span><span class="token string">&quot;/&quot;</span>,fstype<span class="token operator">!=</span><span class="token string">&quot;rootfs&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> and on<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_labels<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=~</span><span class="token string">&quot;shanghai&quot;</span>,label_env<span class="token operator">=~</span><span class="token string">&quot;prod&quot;</span><span class="token punctuation">}</span> * on<span class="token punctuation">(</span>node<span class="token punctuation">)</span> group_left<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> kube_node_info<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：PID 使用率大于80%的列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>label_replace<span class="token punctuation">(</span>node_processes_threads<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> / on<span class="token punctuation">(</span>instance<span class="token punctuation">)</span> min by<span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">(</span>node_processes_max_processes or node_processes_max_threads<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>,<span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">)</span> * <span class="token number">100</span> <span class="token operator">&gt;</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：FD 使用率大于70%的列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by<span class="token punctuation">(</span>internal_ip<span class="token punctuation">)</span> <span class="token punctuation">(</span>label_replace<span class="token punctuation">(</span>node_filefd_allocated<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;node-exporter&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> * <span class="token number">100</span> / node_filefd_maximum<span class="token punctuation">{</span>job<span class="token operator">=</span><span class="token string">&quot;node-exporter&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span>, <span class="token string">&quot;internal_ip&quot;</span>, <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>, <span class="token string">&quot;instance&quot;</span>, <span class="token string">&quot;(.+):(<span class="token entity" title="\\\\">\\\\</span>d+)&quot;</span><span class="token punctuation">))</span> <span class="token operator">&gt;</span> <span class="token number">70</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：时间不同步列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>min_over_time<span class="token punctuation">(</span>node_timex_sync_status<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>5m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> and node_timex_maxerror_seconds<span class="token punctuation">{</span>cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span> <span class="token operator">&gt;=</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>巡检项名称：dockerHung 列表</strong></p><p>动作来源：prometheusList</p><p>具体动作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sum</span> by<span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">(</span>rate<span class="token punctuation">(</span>problem_counter<span class="token punctuation">{</span>reason<span class="token operator">=</span><span class="token string">&quot;DockerHung&quot;</span>,cluster<span class="token operator">=</span><span class="token string">&quot;core&quot;</span>,zone<span class="token operator">=</span><span class="token string">&quot;shanghai&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>1m<span class="token punctuation">]</span><span class="token punctuation">))</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>kube-proxy/calico只巡检了健康状态</strong> 略</p><p><strong>内核发生错误列表 同 dockerHung 列表 通过 NPD 收集的指标进行暴露判断</strong> 略</p><h2 id="巡检平台-自动化" tabindex="-1"><a class="header-anchor" href="#巡检平台-自动化" aria-hidden="true">#</a> 巡检平台（自动化）</h2><p>细心的小伙伴可能已经发现，上文巡检项中的 &quot;动作来源&quot; 分为 bash、prometheus、prometheusOr、prometheusList 四种</p><ul><li><p>bash 对应放置在 K8s Master 节点上指定目录下的 bash 脚本，脚本中有两行返回值，一行是具体结果，一行是正常 Or 异常</p></li><li><p>prometheus 对应通过 Promql 查询出来的结果再与 具体的阈值 做比较判断，最后得出是否正常</p></li><li><p>prometheusOr 逻辑类似，只不过阈值是 是 或 否</p></li><li><p>prometheusList 一样，只不过列表不为空就代表有异常</p></li></ul><p>所有的执行语句、执行脚本名称，都放到了 mysql 表里进行了固定，想要新增 巡检项，只需在 mysql 表中插入一条规则即可</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240822222647945.png" alt=""></p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240822222724655.png" alt=""></p><blockquote><p>注意： 要将 promql 进行 URL 编码</p></blockquote><p>核心伪代码如下</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> mu sync<span class="token punctuation">.</span>Mutex

<span class="token keyword">type</span> ScannerRequest <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	CheckKeys       <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token string">\`json:&quot;check_keys&quot;\`</span>
	SelectedCluster <span class="token builtin">int</span>   <span class="token string">\`json:&quot;selected_cluster&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token comment">// ScannerStart 执行巡检</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>ScannerController<span class="token punctuation">)</span> <span class="token function">ScannerStart</span><span class="token punctuation">(</span>g <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// 先更新数据库状态 status： running 巡检中 |  finish 巡检完成</span>
	s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateAllStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// 解析数据</span>
	<span class="token keyword">var</span> r ScannerRequest
	<span class="token keyword">if</span> err <span class="token operator">:=</span> g<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		v2api<span class="token punctuation">.</span><span class="token function">AbnormalJsonResponse</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;body parse error: &quot;</span><span class="token operator">+</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> scannerItems <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>

	<span class="token comment">// 定义 Cluster 结构体</span>
	<span class="token keyword">type</span> Cluster <span class="token keyword">struct</span> <span class="token punctuation">{</span>
		ID          <span class="token builtin">int</span>    <span class="token string">\`json:&quot;id&quot;\`</span>
		ClusterName <span class="token builtin">string</span> <span class="token string">\`json:&quot;cluster_name&quot;\`</span>
		Zone        <span class="token builtin">string</span> <span class="token string">\`json:&quot;zone&quot;\`</span>
		Hosts       <span class="token builtin">string</span> <span class="token string">\`json:&quot;hosts&quot;\`</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// 初始化数据</span>
	clusterData <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
		<span class="token string">\`{&quot;id&quot;: 11, &quot;cluster_name&quot;: &quot;core&quot;, &quot;zone&quot;: &quot;shanghai&quot;, &quot;hosts&quot;: &quot;10.10.10.10&quot;}\`</span><span class="token punctuation">,</span>
		<span class="token string">\`{&quot;id&quot;: 12, &quot;cluster_name&quot;: &quot;other&quot;, &quot;zone&quot;: &quot;beijing&quot;, &quot;hosts&quot;: &quot;10.10.10.20&quot;}\`</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 创建映射</span>
	clusterMap <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span>Cluster<span class="token punctuation">)</span>

	<span class="token comment">// 解析JSON数据并填充映射</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> d <span class="token operator">:=</span> <span class="token keyword">range</span> clusterData <span class="token punctuation">{</span>
		<span class="token keyword">var</span> cluster Cluster
		err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>cluster<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Error decoding JSON:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		clusterMap<span class="token punctuation">[</span>cluster<span class="token punctuation">.</span>ID<span class="token punctuation">]</span> <span class="token operator">=</span> cluster
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> r<span class="token punctuation">.</span>CheckKeys <span class="token punctuation">{</span>
		<span class="token keyword">if</span> item <span class="token operator">&gt;</span> <span class="token number">300</span> <span class="token punctuation">{</span>
			scannerItems <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>scannerItems<span class="token punctuation">,</span> item<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>scannerItems<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> scannerItem <span class="token operator">:=</span> <span class="token keyword">range</span> scannerItems <span class="token punctuation">{</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>scannerItem <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 在 Goroutine 完成时减少 WaitGroup 的计数</span>
			query<span class="token punctuation">,</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">GetItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> <span class="token string">&quot;action_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;action_detail&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;threshold&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;查询数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			promql <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">ReplaceAll</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>ActionDetail<span class="token punctuation">,</span> <span class="token string">&quot;%22core%22&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%22&quot;</span><span class="token operator">+</span>clusterMap<span class="token punctuation">[</span>r<span class="token punctuation">.</span>SelectedCluster<span class="token punctuation">]</span><span class="token punctuation">.</span>ClusterName<span class="token operator">+</span><span class="token string">&quot;%22&quot;</span><span class="token punctuation">)</span>
			promql <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">ReplaceAll</span><span class="token punctuation">(</span>promql<span class="token punctuation">,</span> <span class="token string">&quot;%22shanghai%22&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%22&quot;</span><span class="token operator">+</span>clusterMap<span class="token punctuation">[</span>r<span class="token punctuation">.</span>SelectedCluster<span class="token punctuation">]</span><span class="token punctuation">.</span>Zone<span class="token operator">+</span><span class="token string">&quot;%22&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">switch</span> query<span class="token punctuation">.</span>ActionType <span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token string">&quot;prometheus&quot;</span><span class="token punctuation">:</span>
				value<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">prometheusQuery</span><span class="token punctuation">(</span>promql<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;查询 Prometheus 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>

				<span class="token keyword">var</span> thresholdArr <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
				err <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>Threshold<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>thresholdArr<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>

				<span class="token keyword">var</span> status <span class="token builtin">string</span>
				intValue<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseFloat</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					<span class="token comment">// 处理转换错误</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Error converting string to int:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>

				<span class="token keyword">switch</span> v <span class="token operator">:=</span> thresholdArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">case</span> <span class="token builtin">float64</span><span class="token punctuation">:</span>
					<span class="token keyword">if</span> thresholdArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;&lt;&quot;</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> intValue <span class="token operator">&gt;</span> v <span class="token punctuation">{</span>
							status <span class="token operator">=</span> <span class="token string">&quot;success&quot;</span>
						<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
							status <span class="token operator">=</span> <span class="token string">&quot;warning&quot;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">if</span> thresholdArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;&gt;&quot;</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> intValue <span class="token operator">&lt;</span> v <span class="token punctuation">{</span>
							status <span class="token operator">=</span> <span class="token string">&quot;success&quot;</span>
						<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
							status <span class="token operator">=</span> <span class="token string">&quot;warning&quot;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token keyword">default</span><span class="token punctuation">:</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Type of thresholad&quot;</span><span class="token punctuation">,</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>thresholdArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>

				err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> status<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token keyword">case</span> <span class="token string">&quot;prometheusOr&quot;</span><span class="token punctuation">:</span>
				value<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">prometheusQueryOr</span><span class="token punctuation">(</span>promql<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;查询 Prometheus 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">if</span> value <span class="token operator">==</span> query<span class="token punctuation">.</span>Threshold <span class="token punctuation">{</span>
					err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span>
					<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
						fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
					<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
						fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token keyword">case</span> <span class="token string">&quot;prometheusList&quot;</span><span class="token punctuation">:</span>
				value<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">prometheusQueryList</span><span class="token punctuation">(</span>promql<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;查询 Prometheus 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">if</span> value <span class="token operator">==</span> <span class="token string">&quot;空&quot;</span> <span class="token punctuation">{</span>
					err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
					<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
						fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token string">&quot;warning&quot;</span><span class="token punctuation">)</span>
					<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
						fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>

			<span class="token keyword">case</span> <span class="token string">&quot;bash&quot;</span><span class="token punctuation">:</span>
				res<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">executeSSHCommand</span><span class="token punctuation">(</span>clusterMap<span class="token punctuation">[</span>r<span class="token punctuation">.</span>SelectedCluster<span class="token punctuation">]</span><span class="token punctuation">.</span>Hosts<span class="token operator">+</span><span class="token string">&quot;:22&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/root/.ssh/id_rsa&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span>ActionDetail<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				resArray <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
				value <span class="token operator">:=</span> resArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
				status <span class="token operator">:=</span> resArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
				err <span class="token operator">=</span> s<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">,</span> value<span class="token punctuation">,</span> status<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span><span class="token punctuation">(</span>scannerItem<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	v2api<span class="token punctuation">.</span><span class="token function">NormalJsonResponse</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token string">&quot;开始巡检&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ResultType <span class="token builtin">string</span> <span class="token string">\`json:&quot;resultType&quot;\`</span>
	ResultData <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		Metric <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token string">\`json:&quot;metric&quot;\`</span>
		Value  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>          <span class="token string">\`json:&quot;value&quot;\`</span>
	<span class="token punctuation">}</span> <span class="token string">\`json:&quot;result&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Response <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Status    <span class="token builtin">string</span> <span class="token string">\`json:&quot;status&quot;\`</span>
	IsPartial <span class="token builtin">bool</span>   <span class="token string">\`json:&quot;isPartial&quot;\`</span>
	Data      Result <span class="token string">\`json:&quot;data&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> promURL <span class="token operator">=</span> <span class="token string">&quot;http://victoria-select.xxx.xxx/select/1/prometheus/api/v1/query?query=&quot;</span>

<span class="token keyword">func</span> <span class="token function">prometheusQuery</span><span class="token punctuation">(</span>promql <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">var</span> res Response
	currentTimestamp <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	reqURL <span class="token operator">:=</span> promURL <span class="token operator">+</span> promql <span class="token operator">+</span> <span class="token string">&quot;&amp;start=&quot;</span> <span class="token operator">+</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>currentTimestamp<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// 发起 GET 请求</span>
	response<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>reqURL<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> response<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// 读取响应内容解析</span>
	body<span class="token punctuation">,</span> err <span class="token operator">:=</span> io<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>reqURL<span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData<span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	value<span class="token punctuation">,</span> ok <span class="token operator">:=</span> res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;conversion failed&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> value<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">prometheusQueryOr</span><span class="token punctuation">(</span>promql <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res Response
	currentTimestamp <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	reqURL <span class="token operator">:=</span> promURL <span class="token operator">+</span> promql <span class="token operator">+</span> <span class="token string">&quot;&amp;start=&quot;</span> <span class="token operator">+</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>currentTimestamp<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// 发起 GET 请求</span>
	response<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>reqURL<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> response<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// 读取响应内容解析</span>
	body<span class="token punctuation">,</span> err <span class="token operator">:=</span> io<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;否&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token string">&quot;是&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">prometheusQueryList</span><span class="token punctuation">(</span>promql <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res Response
	currentTimestamp <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	reqURL <span class="token operator">:=</span> promURL <span class="token operator">+</span> promql <span class="token operator">+</span> <span class="token string">&quot;&amp;start=&quot;</span> <span class="token operator">+</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>currentTimestamp<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// 发起 GET 请求</span>
	response<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>reqURL<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> response<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// 读取响应内容解析</span>
	body<span class="token punctuation">,</span> err <span class="token operator">:=</span> io<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;空&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">var</span> value <span class="token builtin">string</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> s <span class="token operator">:=</span> v<span class="token punctuation">.</span>Metric<span class="token punctuation">[</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
			value <span class="token operator">=</span> value <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> s
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> res<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>ResultData <span class="token punctuation">{</span>
			<span class="token keyword">switch</span> s <span class="token operator">:=</span> v<span class="token punctuation">.</span>Metric<span class="token punctuation">[</span><span class="token string">&quot;internal_ip&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
				value <span class="token operator">=</span> value <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> s
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> value<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">executeSSHCommand</span><span class="token punctuation">(</span>serverAddr<span class="token punctuation">,</span> username<span class="token punctuation">,</span> privateKeyPath<span class="token punctuation">,</span> command <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	key<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>privateKeyPath<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	signer<span class="token punctuation">,</span> err <span class="token operator">:=</span> ssh<span class="token punctuation">.</span><span class="token function">ParsePrivateKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	config <span class="token operator">:=</span> <span class="token operator">&amp;</span>ssh<span class="token punctuation">.</span>ClientConfig<span class="token punctuation">{</span>
		User<span class="token punctuation">:</span> username<span class="token punctuation">,</span>
		Auth<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ssh<span class="token punctuation">.</span>AuthMethod<span class="token punctuation">{</span>
			ssh<span class="token punctuation">.</span><span class="token function">PublicKeys</span><span class="token punctuation">(</span>signer<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		HostKeyCallback<span class="token punctuation">:</span> ssh<span class="token punctuation">.</span><span class="token function">InsecureIgnoreHostKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	client<span class="token punctuation">,</span> err <span class="token operator">:=</span> ssh<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> serverAddr<span class="token punctuation">,</span> config<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> client<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	session<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">NewSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> session<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	output<span class="token punctuation">,</span> err <span class="token operator">:=</span> session<span class="token punctuation">.</span><span class="token function">CombinedOutput</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面展示</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240822222900970.png" alt=""></p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240822222958360.png" alt=""></p><p>巡检有没有必要？大家关心哪些巡检指标，欢迎在留言区 讨论</p><p>我是 Clay，下期见 👋</p><hr><blockquote><ul><li><p>欢迎订阅我的公众号「SRE运维进阶之路」或关注我的 Github https://github.com/clay-wangzhi/SreGuide 查看最新文章</p></li><li><p>欢迎加我微信<code>sre-k8s-ai</code>，与我讨论云原生、稳定性相关内容</p></li></ul></blockquote><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/weixin-20240615194414355.png" alt="weixin" style="zoom:50%;">`,160);function d(v,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[i,s("p",null,[n("上次发文 "),s("a",r,[n("K8s 无备份，不运维"),c(a)]),n("，文章开篇，插入了一张 K8s 集群巡检的图片，好多小伙伴私信留言，问我要开源地址。由于其通用性不高，大多数公司需要结合自身的架构情况进行不同的巡检，所以我没有开源。")]),k])}const q=t(u,[["render",d],["__file","k8s-scanner.html.vue"]]);export{q as default};

import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as i,c as p,a as e,b as a,d as l,w as c,e as s}from"./app-d870e103.js";const d={},v=e("h1",{id:"velero-备份恢复",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#velero-备份恢复","aria-hidden":"true"},"#"),a(" Velero 备份恢复")],-1),u=e("h2",{id:"方案制定",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方案制定","aria-hidden":"true"},"#"),a(" 方案制定")],-1),m=e("ol",null,[e("li",null,"物理备份：etcd 备份，保存某一个时刻的快照，快捷方便。"),e("li",null,"逻辑备份：velero 备份 ，允许用户自己选择备份的内容，比如单个 namespace、指定资源类型等")],-1),b=e("p",null,"物理备份的优点是速度快，无论是备份还是回恢复，但缺点是元数据不可读，只能全部恢复。而逻辑备份正好相反，因此两者可以结合使用，既能快，又能有细粒度控制的能力。",-1),k=s(`<h2 id="备份信息" tabindex="-1"><a class="header-anchor" href="#备份信息" aria-hidden="true">#</a> 备份信息</h2><p>volumes 建议有 csi 进行备份，耗时较长，容易失败</p><p>备份策略如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 备份</span>
velero backup create offline-k8s-work --include-namespaces<span class="token operator">=</span>work --snapshot-volumes<span class="token operator">=</span>false --default-volumes-to-restic<span class="token operator">=</span>false
<span class="token comment">## 周期备份</span>
velero create schedule offline-k8s-work <span class="token parameter variable">--schedule</span><span class="token operator">=</span><span class="token string">&quot;30 23 * * *&quot;</span> --include-namespaces<span class="token operator">=</span>work --snapshot-volumes<span class="token operator">=</span>false --default-volumes-to-restic<span class="token operator">=</span>false <span class="token parameter variable">--ttl</span><span class="token operator">=</span>168h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="velero-备份恢复操作步骤" tabindex="-1"><a class="header-anchor" href="#velero-备份恢复操作步骤" aria-hidden="true">#</a> velero 备份恢复操作步骤</h2><h3 id="velero-备份" tabindex="-1"><a class="header-anchor" href="#velero-备份" aria-hidden="true">#</a> velero 备份</h3>`,6),h={href:"https://cloud.tencent.com/document/product/457/50122",target:"_blank",rel:"noopener noreferrer"},g=s(`<li><p>安装 velero</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载版本：https://github.com/vmware-tanzu/velero/releases 最新稳定版，注意k8s版本兼容性，1.8.1版本要求k8s版本至少1.16</span>
<span class="token function">wget</span> https://github.com/vmware-tanzu/velero/releases/download/v1.8.1/velero-v1.8.1-linux-amd64.tar.gz
<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> velero-v1.8.1-linux-amd64.tar.gz
<span class="token comment"># 加入环境变量</span>
<span class="token function">cp</span> velero-v1.8.1-linux-amd64/velero /usr/bin/
<span class="token comment"># 设置补全命令</span>
velero completion <span class="token function">bash</span> <span class="token operator">&gt;</span> /etc/bash_completion.d/velero.sh
<span class="token builtin class-name">source</span> /etc/bash_completion.d/velero.sh
<span class="token comment"># 安装</span>
velero <span class="token function">install</span>  <span class="token parameter variable">--provider</span> aws <span class="token parameter variable">--plugins</span> velero/velero-plugin-for-aws:v1.1.0 <span class="token parameter variable">--bucket</span>  velero-xxx --secret-file ./credentials-velero --use-volume-snapshots<span class="token operator">=</span>false --use-restic --default-volumes-to-restic --backup-location-config <span class="token assign-left variable">region</span><span class="token operator">=</span>ap-shanghai,s3ForcePathStyle<span class="token operator">=</span><span class="token string">&quot;true&quot;</span>,s3Url<span class="token operator">=</span>https://cos.ap-shanghai.myqcloud.com --restic-pod-cpu-request<span class="token operator">=</span>1000m --restic-pod-cpu-limit<span class="token operator">=</span>2000m --restic-pod-mem-request<span class="token operator">=</span>1024Mi --restic-pod-mem-limit<span class="token operator">=</span>4096Mi  --velero-pod-cpu-request<span class="token operator">=</span>1000m --velero-pod-cpu-limit<span class="token operator">=</span>2000m --velero-pod-mem-request<span class="token operator">=</span>1024Mi --velero-pod-mem-limit<span class="token operator">=</span>4096Mi
<span class="token comment"># 查看配置的存储位置是否可用</span>
velero backup-location get
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>备份 根据实际情况备份指定 namespace 或 指定资源类型</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>velero backup create test-backup 一次性备份
velero create schedule NAME <span class="token parameter variable">--schedule</span><span class="token operator">=</span><span class="token string">&quot;0 */6 * * *”
velero create schedule NAME --schedule=&quot;</span>@every 6h<span class="token string">&quot; 定时备份
velero create schedule NAME --schedule=&quot;</span>@every 6h<span class="token string">&quot; --exclude-resources persistentvolumeclaims,persistentvolumes
velero create schedule NAME --schedule=&quot;</span>@every 24h<span class="token string">&quot; --include-namespaces web
velero create schedule NAME --schedule=&quot;</span>@every 168h&quot; <span class="token parameter variable">--ttl</span> 2160h0m0s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>示例 根据 namespace 进行备份，排除持久化数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>velero backup create k8s-prod --include-namespaces<span class="token operator">=</span>prod --snapshot-volumes<span class="token operator">=</span>false --default-volumes-to-restic<span class="token operator">=</span>false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),f=s(`<h3 id="velero-恢复" tabindex="-1"><a class="header-anchor" href="#velero-恢复" aria-hidden="true">#</a> velero 恢复</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>velero restore create restore-1 --from-backup backup-1
velero restore create --from-backup backup-1
velero restore create --from-schedule NAME 或通过namespace和type指定恢复的内容
velero restore create --from-schedule schedule-1 --allow-partially-failed
velero restore create --from-backup backup-2 --include-resources persistentvolumeclaims,persistentvolumes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><ul><li><p>velero 备份删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>velero backup delete test-backup
velero schedule delete test-schedule
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>velero 卸载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl delete namespace/velero clusterrolebinding/velero
kubectl delete crds <span class="token parameter variable">-l</span> <span class="token assign-left variable">component</span><span class="token operator">=</span>velero
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="实战-使用-velero-进行集群间数据迁移" tabindex="-1"><a class="header-anchor" href="#实战-使用-velero-进行集群间数据迁移" aria-hidden="true">#</a> 实战：使用 velero 进行集群间数据迁移</h2><blockquote><p>部分应用从集群 A 迁移到集群 B</p><p>说明：部署烈性为 deployment.apps 和 rollouts.argoproj.io 两种类型，默认一个应用对应一个AppID, deployment.apps 命令规范为 \${AppID}-default</p></blockquote><p>整理应用列表<code>deploy.txt</code></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>xxxx
xxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="备份-a-集群-deployment-资源对象" tabindex="-1"><a class="header-anchor" href="#备份-a-集群-deployment-资源对象" aria-hidden="true">#</a> 备份 A 集群 deployment 资源对象</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 给要迁移的 appid 列表打标签</span>
kubectl <span class="token parameter variable">-n</span> ut label deployments.apps <span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token string">&#39;s/$/-default/&#39;</span> deploy.txt<span class="token variable">)</span></span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut label rollouts.argoproj.io <span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token string">&#39;s/$/-default/&#39;</span> deploy.txt<span class="token variable">)</span></span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut label <span class="token function">service</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token string">&#39;s/$/-default/&#39;</span> deploy.txt<span class="token variable">)</span></span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut label ingress <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> ut get ingress <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR&gt;1{print $1}&#39;</span><span class="token variable">)</span></span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
 
<span class="token comment"># 校验打标是否成功</span>
kubectl <span class="token parameter variable">-n</span> ut get deployments.apps <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut get rollouts.argoproj.io <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut get <span class="token function">service</span> <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut get ingress <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
 
<span class="token comment"># 在 sh1 集群进行备份</span>
velero backup create ut-deploy-01 --include-namespaces<span class="token operator">=</span>ut --include-resources<span class="token operator">=</span>deployment.apps,rollouts.argoproj.io,service,ingress <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
 
<span class="token comment"># 校验是否备份成功</span>
velero backup describe ut-deploy-01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-b-集群进行恢复" tabindex="-1"><a class="header-anchor" href="#在-b-集群进行恢复" aria-hidden="true">#</a> 在 B 集群进行恢复</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在 B 集群 进行恢复</span>
velero restore create --from-backup ut-deploy-01
 
<span class="token comment"># 校验是否恢复成功</span>
velero restore describe ut-deploy-01
 
<span class="token comment"># 查看资源对象是否创建成功</span>
kubectl <span class="token parameter variable">-n</span> ut get rollouts.argoproj.io <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
kubectl <span class="token parameter variable">-n</span> ut get <span class="token function">service</span> <span class="token parameter variable">--selector</span> <span class="token assign-left variable">migrate</span><span class="token operator">=</span>k8s1
 
<span class="token comment"># 抽选服务查看是否正常</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="a-集群删除已迁移数据" tabindex="-1"><a class="header-anchor" href="#a-集群删除已迁移数据" aria-hidden="true">#</a> A 集群删除已迁移数据</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl <span class="token parameter variable">-n</span> ut delete rollouts.argoproj.io <span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token string">&#39;s/$/-default/&#39;</span> deploy.txt<span class="token variable">)</span></span>
kubectl <span class="token parameter variable">-n</span> ut delete svc <span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token string">&#39;s/$/-default/&#39;</span> deploy.txt<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function x(_,y){const r=n("RouterLink"),t=n("ExternalLinkIcon");return i(),p("div",null,[v,u,m,b,e("blockquote",null,[e("p",null,[a("etcd 备份恢复见"),l(r,{to:"/cloudnative/stability/dr-br/etcd-backup-restore.html"},{default:c(()=>[a("上文")]),_:1})])]),k,e("ol",null,[e("li",null,[e("p",null,[a("配置 COS 对象存储 参考："),e("a",h,[a("使用对象存储 COS 作为 Velero 存储实现集群资源备份和还原"),l(t)])])]),g]),f])}const $=o(d,[["render",x],["__file","velero.html.vue"]]);export{$ as default};

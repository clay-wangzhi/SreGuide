import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as h,c as n,a as e,d as t,w as a,e as i,b as o}from"./app-d870e103.js";const c={},_=i('<h1 id="第一部分-初见shell" tabindex="-1"><a class="header-anchor" href="#第一部分-初见shell" aria-hidden="true">#</a> 第一部分 初见Shell</h1><blockquote><p><em>脚本：文章；书面文档</em></p><p><em>——韦伯斯特字典1913年版</em></p></blockquote><p>Shell是一种命令解释器，它不仅分离了用户层与操作系统内核，更是一门强大的编程语言。我们称为shell编写的程序为脚本（script）。脚本是一种易于使用的工具，它能够将系统调用、工具软件、实用程序（utility）和已编译的二进制文件联系在一起构建程序。实际上，shell脚本可以调用所有的UNIX命令、实用程序以及工具软件。如果你觉得这还不够，使用像<code>test</code>命令和循环结构这样的shell内建命令能够让脚本更加灵活强大。Shell脚本特别适合完成系统管理任务和那些不需要复杂结构性语言实现的重复工作。</p><h3 id="内容目录" tabindex="-1"><a class="header-anchor" href="#内容目录" aria-hidden="true">#</a> 内容目录</h3>',4),d=e("p",null,"原著链接：http://tldp.org/LDP/abs/html/",-1);function u(p,m){const l=r("RouterLink");return h(),n("div",null,[_,e("ul",null,[e("li",null,[t(l,{to:"/code/shell/part1/01_shell_programming.html"},{default:a(()=>[o("1. 为什么使用shell编程")]),_:1})]),e("li",null,[t(l,{to:"/code/shell/part1/02_starting_off_with_a_sha_bang.html"},{default:a(()=>[o("2. 和Sha-Bang（#!）一起出发")]),_:1}),e("ul",null,[e("li",null,[t(l,{to:"/code/shell/part1/02_1_invoking_the_script.html"},{default:a(()=>[o("2.1 调用一个脚本")]),_:1})]),e("li",null,[t(l,{to:"/code/shell/part1/02_2_preliminary_exercises.html"},{default:a(()=>[o("2.2 牛刀小试")]),_:1})])])])]),d])}const b=s(c,[["render",u],["__file","index.html.vue"]]);export{b as default};

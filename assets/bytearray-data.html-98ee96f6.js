import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as n,e as a}from"./app-587e3400.js";const s={},r=a(`<h1 id="_2-3-3-字节序列" tabindex="-1"><a class="header-anchor" href="#_2-3-3-字节序列" aria-hidden="true">#</a> 2.3.3 字节序列</h1><p>Python3 引入两个新的类型 bytes、bytearray。</p><p>bytes 不可变字节序列；bytearray 是可变字节数组。</p><h2 id="编码与解码" tabindex="-1"><a class="header-anchor" href="#编码与解码" aria-hidden="true">#</a> 编码与解码</h2><ul><li>编码：str =&gt; bytes，将字符串这个字符序列使用指定字符集encode编码为一个个字节组成的序列bytes</li><li>解码：bytes 或 bytearray =&gt; str，将一个个字节按照某种指定的字符集解码为一个个字符串组成的字符串</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 缺省为utf-8编码</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;啊&quot;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;啊&quot;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;啊&quot;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b&#39;abc&#39;</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b&#39;\\xb0\\xa1&#39;</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b&#39;\\xe5\\x95\\x8a&#39;</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ascii" tabindex="-1"><a class="header-anchor" href="#ascii" aria-hidden="true">#</a> ASCII</h2><p>ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁 字母的一套单字节编码系统</p><p><em><strong>ASCII控制字符</strong></em></p><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>缩写</th><th>可以显示的表示法</th><th>名称/意义</th></tr></thead><tbody><tr><td>0000 0000</td><td>0</td><td>00</td><td>NUL</td><td>␀</td><td>空字符（Null）</td></tr><tr><td>0000 0001</td><td>1</td><td>01</td><td>SOH</td><td>␁</td><td>标题开始</td></tr><tr><td>0000 0010</td><td>2</td><td>02</td><td>STX</td><td>␂</td><td>本文开始</td></tr><tr><td>0000 0011</td><td>3</td><td>03</td><td>ETX</td><td>␃</td><td>本文结束</td></tr><tr><td>0000 0100</td><td>4</td><td>04</td><td>EOT</td><td>␄</td><td>传输结束</td></tr><tr><td>0000 0101</td><td>5</td><td>05</td><td>ENQ</td><td>␅</td><td>请求</td></tr><tr><td>0000 0110</td><td>6</td><td>06</td><td>ACK</td><td>␆</td><td>确认回应</td></tr><tr><td>0000 0111</td><td>7</td><td>07</td><td>BEL</td><td>␇</td><td>响铃</td></tr><tr><td>0000 1000</td><td>8</td><td>08</td><td>BS</td><td>␈</td><td>退格</td></tr><tr><td>0000 1001</td><td>9</td><td>09</td><td>HT</td><td>␉</td><td>水平定位符号</td></tr><tr><td>0000 1010</td><td>10</td><td>0A</td><td>LF</td><td>␊</td><td>换行键</td></tr><tr><td>0000 1011</td><td>11</td><td>0B</td><td>VT</td><td>␋</td><td>垂直定位符号</td></tr><tr><td>0000 1100</td><td>12</td><td>0C</td><td>FF</td><td>␌</td><td>换页键</td></tr><tr><td>0000 1101</td><td>13</td><td>0D</td><td>CR</td><td>␍</td><td>归位键</td></tr><tr><td>0000 1110</td><td>14</td><td>0E</td><td>SO</td><td>␎</td><td>取消变换（Shift out）</td></tr><tr><td>0000 1111</td><td>15</td><td>0F</td><td>SI</td><td>␏</td><td>启用变换（Shift in）</td></tr><tr><td>0001 0000</td><td>16</td><td>10</td><td>DLE</td><td>␐</td><td>跳出数据通讯</td></tr><tr><td>0001 0001</td><td>17</td><td>11</td><td>DC1</td><td>␑</td><td>设备控制一（XON 启用软件速度控制）</td></tr><tr><td>0001 0010</td><td>18</td><td>12</td><td>DC2</td><td>␒</td><td>设备控制二</td></tr><tr><td>0001 0011</td><td>19</td><td>13</td><td>DC3</td><td>␓</td><td>设备控制三（XOFF 停用软件速度控制）</td></tr><tr><td>0001 0100</td><td>20</td><td>14</td><td>DC4</td><td>␔</td><td>设备控制四</td></tr><tr><td>0001 0101</td><td>21</td><td>15</td><td>NAK</td><td>␕</td><td>确认失败回应</td></tr><tr><td>0001 0110</td><td>22</td><td>16</td><td>SYN</td><td>␖</td><td>同步用暂停</td></tr><tr><td>0001 0111</td><td>23</td><td>17</td><td>ETB</td><td>␗</td><td>区块传输结束</td></tr><tr><td>0001 1000</td><td>24</td><td>18</td><td>CAN</td><td>␘</td><td>取消</td></tr><tr><td>0001 1001</td><td>25</td><td>19</td><td>EM</td><td>␙</td><td>连接介质中断</td></tr><tr><td>0001 1010</td><td>26</td><td>1A</td><td>SUB</td><td>␚</td><td>替换</td></tr><tr><td>0001 1011</td><td>27</td><td>1B</td><td>ESC</td><td>␛</td><td>跳出</td></tr><tr><td>0001 1100</td><td>28</td><td>1C</td><td>FS</td><td>␜</td><td>文件分割符</td></tr><tr><td>0001 1101</td><td>29</td><td>1D</td><td>GS</td><td>␝</td><td>组群分隔符</td></tr><tr><td>0001 1110</td><td>30</td><td>1E</td><td>RS</td><td>␞</td><td>记录分隔符</td></tr><tr><td>0001 1111</td><td>31</td><td>1F</td><td>US</td><td>␟</td><td>单元分隔符</td></tr><tr><td>0111 1111</td><td>127</td><td>7F</td><td>DEL</td><td>␡</td><td>删除</td></tr></tbody></table><p><em><strong>ASCII可显示字符</strong></em></p><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0010 0000</td><td>32</td><td>20</td><td>（空格）(␠)</td></tr><tr><td>0010 0001</td><td>33</td><td>21</td><td>!</td></tr><tr><td>0010 0010</td><td>34</td><td>22</td><td>&quot;</td></tr><tr><td>0010 0011</td><td>35</td><td>23</td><td>#</td></tr><tr><td>0010 0100</td><td>36</td><td>24</td><td>$</td></tr><tr><td>0010 0101</td><td>37</td><td>25</td><td>%</td></tr><tr><td>0010 0110</td><td>38</td><td>26</td><td>&amp;</td></tr><tr><td>0010 0111</td><td>39</td><td>27</td><td>&#39;</td></tr><tr><td>0010 1000</td><td>40</td><td>28</td><td>(</td></tr><tr><td>0010 1001</td><td>41</td><td>29</td><td>)</td></tr><tr><td>0010 1010</td><td>42</td><td>2A</td><td>*</td></tr><tr><td>0010 1011</td><td>43</td><td>2B</td><td>+</td></tr><tr><td>0010 1100</td><td>44</td><td>2C</td><td>,</td></tr><tr><td>0010 1101</td><td>45</td><td>2D</td><td>-</td></tr><tr><td>0010 1110</td><td>46</td><td>2E</td><td>.</td></tr><tr><td>0010 1111</td><td>47</td><td>2F</td><td>/</td></tr><tr><td>0011 0000</td><td>48</td><td>30</td><td>0</td></tr><tr><td>0011 0001</td><td>49</td><td>31</td><td>1</td></tr><tr><td>0011 0010</td><td>50</td><td>32</td><td>2</td></tr><tr><td>0011 0011</td><td>51</td><td>33</td><td>3</td></tr><tr><td>0011 0100</td><td>52</td><td>34</td><td>4</td></tr><tr><td>0011 0101</td><td>53</td><td>35</td><td>5</td></tr><tr><td>0011 0110</td><td>54</td><td>36</td><td>6</td></tr><tr><td>0011 0111</td><td>55</td><td>37</td><td>7</td></tr><tr><td>0011 1000</td><td>56</td><td>38</td><td>8</td></tr><tr><td>0011 1001</td><td>57</td><td>39</td><td>9</td></tr><tr><td>0011 1010</td><td>58</td><td>3A</td><td>:</td></tr><tr><td>0011 1011</td><td>59</td><td>3B</td><td>;</td></tr><tr><td>0011 1100</td><td>60</td><td>3C</td><td>&lt;</td></tr><tr><td>0011 1101</td><td>61</td><td>3D</td><td>=</td></tr><tr><td>0011 1110</td><td>62</td><td>3E</td><td>&gt;</td></tr><tr><td>0011 1111</td><td>63</td><td>3F</td><td>?</td></tr></tbody></table><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0100 0000</td><td>64</td><td>40</td><td>@</td></tr><tr><td>0100 0001</td><td>65</td><td>41</td><td>A</td></tr><tr><td>0100 0010</td><td>66</td><td>42</td><td>B</td></tr><tr><td>0100 0011</td><td>67</td><td>43</td><td>C</td></tr><tr><td>0100 0100</td><td>68</td><td>44</td><td>D</td></tr><tr><td>0100 0101</td><td>69</td><td>45</td><td>E</td></tr><tr><td>0100 0110</td><td>70</td><td>46</td><td>F</td></tr><tr><td>0100 0111</td><td>71</td><td>47</td><td>G</td></tr><tr><td>0100 1000</td><td>72</td><td>48</td><td>H</td></tr><tr><td>0100 1001</td><td>73</td><td>49</td><td>I</td></tr><tr><td>0100 1010</td><td>74</td><td>4A</td><td>J</td></tr><tr><td>0100 1011</td><td>75</td><td>4B</td><td>K</td></tr><tr><td>0100 1100</td><td>76</td><td>4C</td><td>L</td></tr><tr><td>0100 1101</td><td>77</td><td>4D</td><td>M</td></tr><tr><td>0100 1110</td><td>78</td><td>4E</td><td>N</td></tr><tr><td>0100 1111</td><td>79</td><td>4F</td><td>O</td></tr><tr><td>0101 0000</td><td>80</td><td>50</td><td>P</td></tr><tr><td>0101 0001</td><td>81</td><td>51</td><td>Q</td></tr><tr><td>0101 0010</td><td>82</td><td>52</td><td>R</td></tr><tr><td>0101 0011</td><td>83</td><td>53</td><td>S</td></tr><tr><td>0101 0100</td><td>84</td><td>54</td><td>T</td></tr><tr><td>0101 0101</td><td>85</td><td>55</td><td>U</td></tr><tr><td>0101 0110</td><td>86</td><td>56</td><td>V</td></tr><tr><td>0101 0111</td><td>87</td><td>57</td><td>W</td></tr><tr><td>0101 1000</td><td>88</td><td>58</td><td>X</td></tr><tr><td>0101 1001</td><td>89</td><td>59</td><td>Y</td></tr><tr><td>0101 1010</td><td>90</td><td>5A</td><td>Z</td></tr><tr><td>0101 1011</td><td>91</td><td>5B</td><td>[</td></tr><tr><td>0101 1100</td><td>92</td><td>5C</td><td>\\</td></tr><tr><td>0101 1101</td><td>93</td><td>5D</td><td>]</td></tr><tr><td>0101 1110</td><td>94</td><td>5E</td><td>^</td></tr><tr><td>0101 1111</td><td>95</td><td>5F</td><td>_</td></tr></tbody></table><table><thead><tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>图形</th></tr></thead><tbody><tr><td>0110 0000</td><td>96</td><td>60</td><td>\`</td></tr><tr><td>0110 0001</td><td>97</td><td>61</td><td>a</td></tr><tr><td>0110 0010</td><td>98</td><td>62</td><td>b</td></tr><tr><td>0110 0011</td><td>99</td><td>63</td><td>c</td></tr><tr><td>0110 0100</td><td>100</td><td>64</td><td>d</td></tr><tr><td>0110 0101</td><td>101</td><td>65</td><td>e</td></tr><tr><td>0110 0110</td><td>102</td><td>66</td><td>f</td></tr><tr><td>0110 0111</td><td>103</td><td>67</td><td>g</td></tr><tr><td>0110 1000</td><td>104</td><td>68</td><td>h</td></tr><tr><td>0110 1001</td><td>105</td><td>69</td><td>i</td></tr><tr><td>0110 1010</td><td>106</td><td>6A</td><td>j</td></tr><tr><td>0110 1011</td><td>107</td><td>6B</td><td>k</td></tr><tr><td>0110 1100</td><td>108</td><td>6C</td><td>l</td></tr><tr><td>0110 1101</td><td>109</td><td>6D</td><td>m</td></tr><tr><td>0110 1110</td><td>110</td><td>6E</td><td>n</td></tr><tr><td>0110 1111</td><td>111</td><td>6F</td><td>o</td></tr><tr><td>0111 0000</td><td>112</td><td>70</td><td>p</td></tr><tr><td>0111 0001</td><td>113</td><td>71</td><td>q</td></tr><tr><td>0111 0010</td><td>114</td><td>72</td><td>r</td></tr><tr><td>0111 0011</td><td>115</td><td>73</td><td>s</td></tr><tr><td>0111 0100</td><td>116</td><td>74</td><td>t</td></tr><tr><td>0111 0101</td><td>117</td><td>75</td><td>u</td></tr><tr><td>0111 0110</td><td>118</td><td>76</td><td>v</td></tr><tr><td>0111 0111</td><td>119</td><td>77</td><td>w</td></tr><tr><td>0111 1000</td><td>120</td><td>78</td><td>x</td></tr><tr><td>0111 1001</td><td>121</td><td>79</td><td>y</td></tr><tr><td>0111 1010</td><td>122</td><td>7A</td><td>z</td></tr><tr><td>0111 1011</td><td>123</td><td>7B</td><td>{</td></tr><tr><td>0111 1100</td><td>124</td><td>7C</td><td>|</td></tr><tr><td>0111 1101</td><td>125</td><td>7D</td><td>}</td></tr><tr><td>0111 1110</td><td>126</td><td>7E</td><td>~</td></tr></tbody></table><p>熟记：</p><ol><li><p>\\x00 表中第一项，C语言中的字符串结束符</p></li><li><p>\\t \\x09 tab字符</p></li><li><p>\\r\\n \\x0d\\x0a</p></li><li><p>\\x30~\\x39 字符0~9，\\x31 字符1</p></li><li><p>\\x41 65 A</p></li><li><p>\\x61 97 a</p></li></ol><p>注意：这里的1指定是字符1，不是数字1 UTF-8、GBK都兼容了ASCII</p><h2 id="bytes-初始化" tabindex="-1"><a class="header-anchor" href="#bytes-初始化" aria-hidden="true">#</a> bytes 初始化</h2><ul><li>bytes() 空bytes</li><li>bytes(int) 指定字节的bytes，被0填充</li><li>bytes(iterable_of_ints) -&gt; bytes [0,255]的int组成的可迭代对象</li><li>bytes(string, encoding[, errors]) -&gt; bytes 等价于string.encode()</li><li>bytes(bytes_or_buffer) -&gt; immutable copy of bytes_or_buffer 从一个字节序列或者buffer复制出一个新的不可变的bytes对象</li><li>使用b前缀定义 <ul><li>只允许基本ASCII使用字符形式 b&#39;abc9&#39;</li><li>使用16进制表示 b&quot;\\x41\\x61&quot;</li></ul></li></ul><p>bytes类型和str类型类似，都是不可变类型，操作方法类似。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b&#39;abcd&#39;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 返回int，指定是本字节对应的十进制数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="bytearrary-初始化" tabindex="-1"><a class="header-anchor" href="#bytearrary-初始化" aria-hidden="true">#</a> bytearrary 初始化</h2><ul><li>bytearray() 空bytearray</li><li>bytearray(int) 指定字节的bytearray，被0填充</li><li>bytearray(iterable_of_ints) -&gt; bytearray [0,255]的int组成的可迭代对象</li><li>bytearray(string, encoding[, errors]) -&gt; bytearray 近似string.encode()，不过返回可变对象</li><li>bytearray(bytes_or_buffer) 从一个字节序列或者buffer复制出一个新的可变的bytearray对象</li></ul><p>b前缀表示的是bytes，不是bytearray类型</p><p>由于bytearray类型是可变数组，所以，类似列表。</p><ul><li>append(int) 尾部追加一个元素</li><li>insert(index, int) 在指定索引位置插入元素</li><li>extend(iterable_of_ints) 将一个可迭代的整数集合追加到当前bytearray</li><li>pop(index=-1) 从指定索引上移除元素，默认从尾部移除</li><li>remove(value) 找到第一个value移除，找不到抛ValueError异常</li><li>注意：上述方法若需要使用int类型，值在[0, 255]</li><li>clear() 清空bytearray</li><li>reverse() 翻转bytearray，就地修改</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>b <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 输出什么  bytearray(b&#39;Acba&#39;)</span>
b<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),e=[r];function p(i,o){return d(),n("div",null,e)}const u=t(s,[["render",p],["__file","bytearray-data.html.vue"]]);export{u as default};

const e=JSON.parse('{"key":"v-399e5546","path":"/cloudnative/kubernetes/deploy-ceph-cluster-with-rook.html","title":"使用 Rook 快速搭建 Ceph 集群","lang":"zh-CN","frontmatter":{"category":"云原生","tag":["Kubernetes"],"description":"使用 Rook 快速搭建 Ceph 集群 在容器世界中，无状态是一个核心原则，然而我们始终需要保存数据，并提供给他人进行访问。所以就需要一个方案用于保持数据，以备重启之需。 在 Kubernetes 中，PVC 是管理有状态应用的一个推荐方案。有了 PVC 的帮助，Pod 可以申请并连接到存储卷，这些存储卷在 Pod 生命周期结束之后，还能独立存在。 PVC 在存储方面让开发和运维的职责得以分离。运维人员负责供应存储，而开发人员则可以在不知后端细节的情况下，申请使用这些存储卷。 PVC 由一系列组件构成： PVC：是 Pod 对存储的请求。PVC 会被 Pod 动态加载成为一个存储卷。 PV，可以由运维手工分配，也可以使用 StorageClass 动态分配。PV 受 Kubernetes 管理，但并不与特定的 Pod 直接绑定。 StorageClass：由管理员创建，可以用来动态的创建存储卷和 PV。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/kubernetes/deploy-ceph-cluster-with-rook.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"使用 Rook 快速搭建 Ceph 集群"}],["meta",{"property":"og:description","content":"使用 Rook 快速搭建 Ceph 集群 在容器世界中，无状态是一个核心原则，然而我们始终需要保存数据，并提供给他人进行访问。所以就需要一个方案用于保持数据，以备重启之需。 在 Kubernetes 中，PVC 是管理有状态应用的一个推荐方案。有了 PVC 的帮助，Pod 可以申请并连接到存储卷，这些存储卷在 Pod 生命周期结束之后，还能独立存在。 PVC 在存储方面让开发和运维的职责得以分离。运维人员负责供应存储，而开发人员则可以在不知后端细节的情况下，申请使用这些存储卷。 PVC 由一系列组件构成： PVC：是 Pod 对存储的请求。PVC 会被 Pod 动态加载成为一个存储卷。 PV，可以由运维手工分配，也可以使用 StorageClass 动态分配。PV 受 Kubernetes 管理，但并不与特定的 Pod 直接绑定。 StorageClass：由管理员创建，可以用来动态的创建存储卷和 PV。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Rook 快速搭建 Ceph 集群\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"Ceph & Rook 简介","slug":"ceph-rook-简介","link":"#ceph-rook-简介","children":[{"level":3,"title":"Ceph 是什么","slug":"ceph-是什么","link":"#ceph-是什么","children":[]},{"level":3,"title":"Rook 是什么","slug":"rook-是什么","link":"#rook-是什么","children":[]}]},{"level":2,"title":"在 Kubernetes 上部署 Rook","slug":"在-kubernetes-上部署-rook","link":"#在-kubernetes-上部署-rook","children":[{"level":3,"title":"前提条件","slug":"前提条件","link":"#前提条件","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"Rook 工具箱 & dashboard","slug":"rook-工具箱-dashboard","link":"#rook-工具箱-dashboard","children":[]}]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":8.12,"words":2435},"filePathRelative":"cloudnative/kubernetes/deploy-ceph-cluster-with-rook.md","localizedDate":"2023年4月19日","excerpt":"<h1> 使用 Rook 快速搭建 Ceph 集群</h1>\\n<p>在容器世界中，无状态是一个核心原则，然而我们始终需要保存数据，并提供给他人进行访问。所以就需要一个方案用于保持数据，以备重启之需。</p>\\n<p>在 Kubernetes 中，PVC 是管理有状态应用的一个推荐方案。有了 PVC 的帮助，Pod 可以申请并连接到存储卷，这些存储卷在 Pod 生命周期结束之后，还能独立存在。</p>\\n<p>PVC 在存储方面让开发和运维的职责得以分离。运维人员负责供应存储，而开发人员则可以在不知后端细节的情况下，申请使用这些存储卷。</p>\\n<p>PVC 由一系列组件构成：</p>\\n<ul>\\n<li>\\n<p><a href=\\"https://kubernetes.io/docs/concepts/storage/volumes/#persistentvolumeclaim\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PVC</a>：是 Pod 对存储的请求。PVC 会被 Pod 动态加载成为一个存储卷。</p>\\n</li>\\n<li>\\n<p><a href=\\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PV</a>，可以由运维手工分配，也可以使用 <code>StorageClass</code> 动态分配。PV 受 Kubernetes 管理，但并不与特定的 Pod 直接绑定。</p>\\n</li>\\n<li>\\n<p><a href=\\"https://kubernetes.io/docs/concepts/storage/storage-classes/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">StorageClass</a>：由管理员创建，可以用来动态的创建存储卷和 PV。</p>\\n</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

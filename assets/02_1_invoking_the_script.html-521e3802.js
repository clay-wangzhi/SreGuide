import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as c,c as o,e as t}from"./app-bdb4dd27.js";const d={},r=t('<h1 id="_2-1-调用一个脚本" tabindex="-1"><a class="header-anchor" href="#_2-1-调用一个脚本" aria-hidden="true">#</a> 2.1 调用一个脚本</h1><p>写完一个脚本以后，你可以通过<code>sh scriptname</code>或<code>bash scriptname</code>来调用它（不推荐使用<code>sh &lt;scriptname</code>调用脚本，因为这会禁用脚本从标准输入（stdin）读入数据）。更方便的方式是使用<code>chmod</code>命令使脚本可以被直接执行。</p><p>执行命令：</p><p><code>chmod 555 scriptname</code>（给予所有用户读取/执行的权限）</p><p>或</p><p><code>chmod +rx scriptname</code>（给予所有用户读取/执行的权限）</p><p><code>chmod u+rx scriptname</code>（仅给予脚本所有者读取/执行的权限）</p><p>当脚本的权限被设置好后，你就可以直接使用<code>./scriptname</code>[^3]进行调用测试了。如果脚本文件以sha-bang开头，那么它将自动调用指定的命令解释器运行脚本。</p><p>完成调试与测试后，你可能会将脚本文件移至<code>/usr/local/bin</code>（使用root权限）中，使脚本可以被所有用户调用。这时你可以直接在命令行中输入<code>scriptname [ENTER]</code>执行脚本。</p>',9),s=[r];function a(n,p){return c(),o("div",null,s)}const h=e(d,[["render",a],["__file","02_1_invoking_the_script.html.vue"]]);export{h as default};

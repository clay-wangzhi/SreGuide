const e=JSON.parse('{"key":"v-283840fa","path":"/cloudnative/concepts/kubernetes/kubernetes-overview.html","title":"Kubernetes 概述","lang":"zh-CN","frontmatter":{"order":1,"category":"云原生","description":"Kubernetes 概述 什么是 kubernetes 容器编排、调度平台，是一个完备的分布式系统支撑平台。 kubernetes 架构 etcd 兼具一致性和高可用性的键值数据库，只有API Server能与其通信； apiserver 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API 注册和发现等机制； controller manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等； scheduler 负责资源的调度，按照预定的调度策略将 Pod 调度到相应的机器上； kubelet 负责维护容器的生命周期，同时也负责 Volume（CSI）和网络（CNI）的管理； container runtime 负责镜像管理以及 Pod 和容器的真正运行（CRI）；","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/concepts/kubernetes/kubernetes-overview.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"Kubernetes 概述"}],["meta",{"property":"og:description","content":"Kubernetes 概述 什么是 kubernetes 容器编排、调度平台，是一个完备的分布式系统支撑平台。 kubernetes 架构 etcd 兼具一致性和高可用性的键值数据库，只有API Server能与其通信； apiserver 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API 注册和发现等机制； controller manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等； scheduler 负责资源的调度，按照预定的调度策略将 Pod 调度到相应的机器上； kubelet 负责维护容器的生命周期，同时也负责 Volume（CSI）和网络（CNI）的管理； container runtime 负责镜像管理以及 Pod 和容器的真正运行（CRI）；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-04T10:28:48.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-08-04T10:28:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes 概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-04T10:28:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"kubernetes 架构","slug":"kubernetes-架构","link":"#kubernetes-架构","children":[]},{"level":2,"title":"K8s vs KVM","slug":"k8s-vs-kvm","link":"#k8s-vs-kvm","children":[]}],"git":{"createdTime":1691144928000,"updatedTime":1691144928000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":1.19,"words":357},"filePathRelative":"cloudnative/concepts/kubernetes/kubernetes-overview.md","localizedDate":"2023年8月4日","excerpt":"<h1> Kubernetes 概述</h1>\\n<h1> 什么是 kubernetes</h1>\\n<p>容器编排、调度平台，是一个完备的分布式系统支撑平台。</p>\\n<h2> kubernetes 架构</h2>\\n<p><img src=\\"https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/k8s-archeitecture.png\\" alt=\\"\\"></p>\\n<ul>\\n<li>etcd 兼具一致性和高可用性的键值数据库，只有API Server能与其通信；</li>\\n<li>apiserver 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API 注册和发现等机制；</li>\\n<li>controller manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；</li>\\n<li>scheduler 负责资源的调度，按照预定的调度策略将 Pod 调度到相应的机器上；</li>\\n<li>kubelet 负责维护容器的生命周期，同时也负责 Volume（CSI）和网络（CNI）的管理；</li>\\n<li>container runtime 负责镜像管理以及 Pod 和容器的真正运行（CRI）；</li>\\n</ul>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

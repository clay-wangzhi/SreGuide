const e=JSON.parse('{"key":"v-95fb4b80","path":"/code/shell/part5/36_4_recursion_a_script_calling_itself.html","title":"36.4 递归：可以调用自己的脚本","lang":"zh-CN","frontmatter":{"author":"LinuxStory","category":"Linux","tag":["Bash"],"description":"36.4 递归：可以调用自己的脚本 脚本可以递归的调用自己吗？答案是肯定的。 Example 36-10. 可以调用自己的脚本（但没什么实际用途） #!/bin/bash # recurse.sh # 脚本可以调用自己吗？ # 其实是可以的。但这样有什么实际用途吗？ # （请往下看） RANGE=10 MAXVAL=9 i=$RANDOM let \\"i %= $RANGE\\" # 在0到$RANGE - 1的范围内产生一个随机数 if [ \\"$i\\" -lt \\"$MAXVAL\\" ] then echo \\"i = $i\\" ./$0 # 脚本进行递归调用（调用自己） fi # 每次被调用的脚本做同样的事情，直到$i和$MAXVAL相等。 # 如果使用“while”循环代替“if/then”语句会出问题。请试着解释为什么。 exit 0 # 笔记: # ---- # 这个脚本文件必须有可执行权限。 # 即使使用“sh”命令调用，这脚本也可以执行。 # 请解释原因。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/shell/part5/36_4_recursion_a_script_calling_itself.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"36.4 递归：可以调用自己的脚本"}],["meta",{"property":"og:description","content":"36.4 递归：可以调用自己的脚本 脚本可以递归的调用自己吗？答案是肯定的。 Example 36-10. 可以调用自己的脚本（但没什么实际用途） #!/bin/bash # recurse.sh # 脚本可以调用自己吗？ # 其实是可以的。但这样有什么实际用途吗？ # （请往下看） RANGE=10 MAXVAL=9 i=$RANDOM let \\"i %= $RANGE\\" # 在0到$RANGE - 1的范围内产生一个随机数 if [ \\"$i\\" -lt \\"$MAXVAL\\" ] then echo \\"i = $i\\" ./$0 # 脚本进行递归调用（调用自己） fi # 每次被调用的脚本做同样的事情，直到$i和$MAXVAL相等。 # 如果使用“while”循环代替“if/then”语句会出问题。请试着解释为什么。 exit 0 # 笔记: # ---- # 这个脚本文件必须有可执行权限。 # 即使使用“sh”命令调用，这脚本也可以执行。 # 请解释原因。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"LinuxStory"}],["meta",{"property":"article:tag","content":"Bash"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"36.4 递归：可以调用自己的脚本\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LinuxStory\\"}]}"]]},"headers":[{"level":2,"title":"Example 36-10. 可以调用自己的脚本（但没什么实际用途）","slug":"example-36-10-可以调用自己的脚本-但没什么实际用途","link":"#example-36-10-可以调用自己的脚本-但没什么实际用途","children":[]},{"level":2,"title":"Example 36-11. 一个有点用的调用自己的脚本","slug":"example-36-11-一个有点用的调用自己的脚本","link":"#example-36-11-一个有点用的调用自己的脚本","children":[]},{"level":2,"title":"Example 36-12. 另一个调用自己的脚本","slug":"example-36-12-另一个调用自己的脚本","link":"#example-36-12-另一个调用自己的脚本","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":909},"filePathRelative":"code/shell/part5/36_4_recursion_a_script_calling_itself.md","localizedDate":"2023年4月19日","excerpt":"<h1> 36.4 递归：可以调用自己的脚本</h1>\\n<p>脚本可以递归的调用自己吗？答案是肯定的。</p>\\n<h2> Example 36-10. 可以调用自己的脚本（但没什么实际用途）</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>#!/bin/bash\\n# recurse.sh\\n\\n# 脚本可以调用自己吗？\\n# 其实是可以的。但这样有什么实际用途吗？\\n# （请往下看）\\n\\nRANGE=10\\nMAXVAL=9\\n\\ni=$RANDOM\\nlet \\"i %= $RANGE\\"  # 在0到$RANGE - 1的范围内产生一个随机数\\n\\nif [ \\"$i\\" -lt \\"$MAXVAL\\" ]\\nthen\\n    echo \\"i = $i\\"\\n    ./$0           # 脚本进行递归调用（调用自己）\\nfi                 # 每次被调用的脚本做同样的事情，直到$i和$MAXVAL相等。 \\n\\n# 如果使用“while”循环代替“if/then”语句会出问题。请试着解释为什么。\\n\\nexit 0\\n\\n# 笔记:\\n# ----\\n# 这个脚本文件必须有可执行权限。\\n# 即使使用“sh”命令调用，这脚本也可以执行。\\n# 请解释原因。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"LinuxStory"},"autoDesc":true}');export{e as data};

import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as d,c as o,b as a,d as e,e as t,a as s}from"./app-08ceb845.js";const c={},r=s(`<h1 id="gitlab备份迁移升级-集成openldap" tabindex="-1"><a class="header-anchor" href="#gitlab备份迁移升级-集成openldap" aria-hidden="true">#</a> gitlab备份迁移升级&amp;集成openldap</h1><h2 id="gitlab安装" tabindex="-1"><a class="header-anchor" href="#gitlab安装" aria-hidden="true">#</a> gitlab安装</h2><h3 id="安装相关依赖" tabindex="-1"><a class="header-anchor" href="#安装相关依赖" aria-hidden="true">#</a> 安装相关依赖</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">curl</span> policycoreutils-python openssh-server
yum <span class="token function">install</span> postfix
systemctl <span class="token builtin class-name">enable</span> postfix
systemctl start postfix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="镜像切换" tabindex="-1"><a class="header-anchor" href="#镜像切换" aria-hidden="true">#</a> 镜像切换</h3><p>切换为国内的清华源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># cat gitlab_gitlab-ce.repo </span>
<span class="token punctuation">[</span>gitlab_gitlab-ce<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>gitlab_gitlab-ce
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于不同版本号的备份文件不能相互使用，下载旧gitlab中的对应的版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gitlab-ce-11.5.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置使用" tabindex="-1"><a class="header-anchor" href="#配置使用" aria-hidden="true">#</a> 配置使用</h3><p>安装完成之后，可以在<code>/etc/gitblab/gitlab.rb</code>中按照需求修改配置， 主要需要修改<code>external_url</code>，改成自己使用的 url 地址。 执行命令配置生效：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>gitlab-ctl reconfigure
gitlab-ctl restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gitlab备份-恢复" tabindex="-1"><a class="header-anchor" href="#gitlab备份-恢复" aria-hidden="true">#</a> gitlab备份&amp;恢复</h2><p>Gitlab 成功运行起来之后，最终的事情就是定期的备份，遇到问题后的还原。</p><h3 id="备份配置" tabindex="-1"><a class="header-anchor" href="#备份配置" aria-hidden="true">#</a> 备份配置</h3><p>默认 Gitlab 的备份文件会创建在<code>/var/opt/gitlab/backups</code>文件夹中，格式为<code>时间戳_日期_版本号_gitlab_backup.tar</code>，例如：<code>1515031353_2018_01_04_10.3.2_gitlab_backup.tar</code>。 修改备份文件夹，需要修改配置文件<code>/etc/gitlab/gitlab.rb</code>中的：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;backup_path&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/your_wish/backups&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后<code>gitlabctl-reconfigure</code>生效。</p><h3 id="手动备份" tabindex="-1"><a class="header-anchor" href="#手动备份" aria-hidden="true">#</a> 手动备份</h3><p>命令：<code>gitlab-backup create</code></p><p>For GitLab 12.1 and earlier, use <code>gitlab-rake gitlab:backup:create</code>. 会在命令执行的时间点，在你配置的文件夹或者默认文件夹创建一个备份文件。</p><h3 id="自动备份" tabindex="-1"><a class="header-anchor" href="#自动备份" aria-hidden="true">#</a> 自动备份</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">2</span> * * * /opt/gitlab/bin/gitlab-backup create <span class="token assign-left variable">CRON</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>Note</strong> For GitLab 12.1 and earlier, use <code>gitlab-rake gitlab:backup:create</code>.</p></blockquote><h3 id="备份恢复" tabindex="-1"><a class="header-anchor" href="#备份恢复" aria-hidden="true">#</a> 备份恢复</h3><p>First make sure your backup tar file is in the backup directory described in the <code>gitlab.rb</code> configuration <code>gitlab_rails[&#39;backup_path&#39;]</code>. The default is <code>/var/opt/gitlab/backups</code>. It needs to be owned by the <code>git</code> user.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cp 11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar /var/opt/gitlab/backups/
chown git.git /var/opt/gitlab/backups/11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Stop the processes that are connected to the database. Leave the rest of GitLab running:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-ctl stop unicorn
gitlab-ctl stop sidekiq
<span class="token comment"># Verify</span>
gitlab-ctl status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, restore the backup, specifying the timestamp of the backup you wish to restore:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># This command will overwrite the contents of your GitLab database!</span>
gitlab-backup restore <span class="token assign-left variable">BACKUP</span><span class="token operator">=</span>1493107454_2018_04_25_10.6.4-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>Note</strong> For GitLab 12.1 and earlier, use <code>gitlab-rake gitlab:backup:restore</code>.</p></blockquote>`,32),p=a("strong",null,"Warning:",-1),b=a("code",null,"gitlab-rake gitlab:backup:restore",-1),u={href:"https://gitlab.com/gitlab-org/gitlab-foss/issues/62759",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"gitlab-backup restore",-1),h=s(`<p>Next, restore <code>/etc/gitlab/gitlab-secrets.json</code> if necessary as mentioned above.</p><p>Reconfigure, restart and check GitLab:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-ctl reconfigure
gitlab-ctl restart
gitlab-rake gitlab:check <span class="token assign-left variable">SANITIZE</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),v={href:"https://packages.gitlab.com/gitlab/",target:"_blank",rel:"noopener noreferrer"},m=s(`<h2 id="gitlab升级" tabindex="-1"><a class="header-anchor" href="#gitlab升级" aria-hidden="true">#</a> gitlab升级</h2><p>It is considered safe to jump between patch versions and minor versions within one major version. For example, it is safe to:</p><ul><li>Upgrade the patch version: <ul><li><code>8.9.0</code> -&gt; <code>8.9.7</code></li><li><code>8.9.0</code> -&gt; <code>8.9.1</code></li><li><code>8.9.2</code> -&gt; <code>8.9.6</code></li><li><code>9.5.5</code> -&gt; <code>9.5.9</code></li><li><code>10.6.3</code> -&gt; <code>10.6.6</code></li><li><code>11.11.1</code> -&gt; <code>11.11.8</code></li><li><code>12.0.4</code> -&gt; <code>12.0.9</code></li></ul></li><li>Upgrade the minor version: <ul><li><code>8.9.4</code> -&gt; <code>8.12.3</code></li><li><code>9.2.3</code> -&gt; <code>9.5.5</code></li><li><code>10.6.6</code> -&gt; <code>10.8.7</code></li><li><code>11.3.4</code> -&gt; <code>11.11.8</code></li></ul></li></ul><p>Upgrading the major version requires more attention. We cannot guarantee that upgrading between major versions will be seamless. As previously mentioned, major versions are reserved for backwards incompatible changes. We recommend that you first upgrade to the latest available minor version within your major version. By doing this, you can address any deprecation messages that could change behavior in the next major release. To ensure background migrations are successful, increment by one minor version during the version jump before installing newer releases.</p><p>For example: <code>11.11.x</code> -&gt; <code>12.0.x</code> Please see the table below for some examples:</p><table><thead><tr><th style="text-align:left;">Latest stable version</th><th style="text-align:left;">Your version</th><th style="text-align:left;">Recommended upgrade path</th><th style="text-align:left;">Note</th></tr></thead><tbody><tr><td style="text-align:left;">9.4.5</td><td style="text-align:left;">8.13.4</td><td style="text-align:left;"><code>8.13.4</code> -&gt; <code>8.17.7</code> -&gt; <code>9.4.5</code></td><td style="text-align:left;"><code>8.17.7</code> is the last version in version <code>8</code></td></tr><tr><td style="text-align:left;">10.1.4</td><td style="text-align:left;">8.13.4</td><td style="text-align:left;"><code>8.13.4 -&gt; 8.17.7 -&gt; 9.5.10 -&gt; 10.1.4</code></td><td style="text-align:left;"><code>8.17.7</code> is the last version in version <code>8</code>, <code>9.5.10</code> is the last version in version <code>9</code></td></tr><tr><td style="text-align:left;">11.3.4</td><td style="text-align:left;">8.13.4</td><td style="text-align:left;"><code>8.13.4</code> -&gt; <code>8.17.7</code> -&gt; <code>9.5.10</code> -&gt; <code>10.8.7</code> -&gt; <code>11.3.4</code></td><td style="text-align:left;"><code>8.17.7</code> is the last version in version <code>8</code>, <code>9.5.10</code> is the last version in version <code>9</code>, <code>10.8.7</code> is the last version in version <code>10</code></td></tr><tr><td style="text-align:left;">12.5.8</td><td style="text-align:left;">11.3.4</td><td style="text-align:left;"><code>11.3.4</code> -&gt; <code>11.11.8</code> -&gt; <code>12.0.9</code> -&gt; <code>12.5.8</code></td><td style="text-align:left;"><code>11.11.8</code> is the last version in version <code>11</code></td></tr></tbody></table><p>我的升级路线为：表格中最后一个</p><p>每次升级直接<code>yum -y install gitlab-ce-版本号</code>就可以了</p><p>例如</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gitlab-ce-11.11.8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>每升级一次，重载一下配置，重启一下gitlab</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-ctl reconfigure
gitlab-ctl restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gitlab集成openldap" tabindex="-1"><a class="header-anchor" href="#gitlab集成openldap" aria-hidden="true">#</a> gitlab集成openldap</h2><h3 id="setting-up-ldap-sign-in" tabindex="-1"><a class="header-anchor" href="#setting-up-ldap-sign-in" aria-hidden="true">#</a> Setting up LDAP sign-in</h3><p>If you have an LDAP directory service such as Active Directory, you can configure GitLab so that your users can sign in with their LDAP credentials. Add the following to <code>/etc/gitlab/gitlab.rb</code>, edited for your server.</p><p>For GitLab Community Edition:</p><p>以下是我ldap的配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">### LDAP Settings</span>
<span class="token comment">###! Docs: https://docs.gitlab.com/omnibus/settings/ldap.html</span>
<span class="token comment">###! **Be careful not to break the indentation in the ldap_servers block. It is</span>
<span class="token comment">###!   in yaml format and the spaces must be retained. Using tabs will not work.**</span>

gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;ldap_enabled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;prevent_ldap_sign_in&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;ldap_servers&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> YAML.load <span class="token operator">&lt;&lt;-</span><span class="token string">EOS
main:
  label: &#39;LDAP&#39;
  host: &#39;192.168.x.x&#39;
  port: 389
  uid: &#39;cn&#39;
  encryption: &#39;plain&#39;
  bind_dn: &#39;cn=admin,dc=xxx,dc=com&#39;
  password: &#39;xxx&#39;
  smartcard_auth: false
  active_directory: true
  allow_username_or_email_login: true
  lowercase_usernames: false
  base: &#39;ou=People,dc=xxx,dc=com&#39;
  user_filter: &#39;&#39;
EOS</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-ctl reconfigure
gitlab-ctl restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考文章：</p><p>https://www.jianshu.com/p/d29c332bcf53</p><p>https://docs.gitlab.com/ee/raketasks/backup_restore.html#restore-for-omnibus-gitlab-installations</p><p>https://www.jianshu.com/p/6361cba123a8</p><p>https://docs.gitlab.com/ee/policy/maintenance.html#upgrade-recommendations</p><p>https://docs.gitlab.com/omnibus/settings/ldap.html</p><p>https://www.jianshu.com/p/083cf462fed4</p></blockquote>`,20);function k(f,_){const n=l("ExternalLinkIcon");return d(),o("div",null,[r,a("blockquote",null,[a("p",null,[p,e(),b,e(" does not set the right file system permissions on your Registry directory. This is a "),a("a",u,[e("known issue"),t(n)]),e(". On GitLab 12.2 or newer, you can use "),g,e(" to avoid this issue.")])]),h,a("p",null,[e("If there is a GitLab version mismatch between your backup tar file and the installed version of GitLab, the restore command will abort with an error. Install the "),a("a",v,[e("correct GitLab version"),t(n)]),e(" and try again.")]),m])}const w=i(c,[["render",k],["__file","index.html.vue"]]);export{w as default};

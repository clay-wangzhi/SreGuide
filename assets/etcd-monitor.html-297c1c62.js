import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as c,c as d,b as t,d as a,e as s,a as l}from"./app-6e2a3b53.js";const i={},o=l(`<h1 id="etcd-监控" tabindex="-1"><a class="header-anchor" href="#etcd-监控" aria-hidden="true">#</a> Etcd 监控</h1><h2 id="重点监控指标" tabindex="-1"><a class="header-anchor" href="#重点监控指标" aria-hidden="true">#</a> 重点监控指标</h2><p>指标分类</p><ul><li>健康状态</li><li>USE 方法（系统） <ul><li>使用率</li><li>饱和度</li><li>错误</li></ul></li><li>RED 方法（应用） <ul><li>请求速率</li><li>错误率</li><li>延迟</li></ul></li></ul><table><thead><tr><th>指标分类</th><th>指标</th><th>释义</th></tr></thead><tbody><tr><td>健康状态</td><td>实例健康状态</td><td>etcd是一个分布式系统，由多个成员节点组成。监控etcd成员节点的状态可以帮助你了解集群中节点的健康状况，发现掉线或者异常节点。</td></tr><tr><td>健康状态</td><td>主从状态</td><td></td></tr><tr><td>健康状态</td><td>etcd leader切换统计</td><td>频繁的领导者变更会严重影响 etcd 的性能。这也意味着领导者不稳定，可能是由于网络连接问题或对 etcd 集群施加的过载负荷导致的。</td></tr><tr><td>健康状态</td><td>心跳</td><td>etcd集群中的节点通过发送心跳来保持彼此之间的连接。监控丢失的心跳可以帮助你发现etcd节点之间的通信问题或者网络延迟。</td></tr><tr><td>RED 方法</td><td>QPS</td><td></td></tr><tr><td>RED 方法</td><td>请求错误率</td><td>监控etcd的错误率可以帮助你发现etcd操作中的潜在问题。高错误率可能表明集群遇到了故障或其他异常情况。</td></tr><tr><td>RED 方法</td><td>请求延迟</td><td>监控etcd的请求延迟可以帮助你了解API请求的处理时间。较高的延迟可能表明etcd正面临负载压力或性能问题。</td></tr><tr><td>RED 方法</td><td>磁盘同步（WAL/DB fsync）耗时</td><td>高磁盘操作延迟（wal_fsync_duration_seconds或backend_commit_duration_seconds）通常表示磁盘问题。它可能会导致高请求延迟或使群集不稳定。</td></tr><tr><td>RED 方法</td><td>同步延迟</td><td>如果集群正常运行，已提交的提案应该随着时间的推移而增加。重要的是要在集群的所有成员中监控这个指标；如果单个成员与其领导节点之间存在持续较大的滞后，这表明该成员运行缓慢或存在异常。</td></tr><tr><td>RED 方法</td><td>提案失败次数</td><td>失败的提案通常与两个问题相关：与领导选举相关的暂时性故障或由于集群丧失法定人数而导致的较长时间的停机。</td></tr><tr><td>RED 方法</td><td>快照处理时间</td><td>etcd定期创建快照以备份数据。监控快照处理时间可以帮助你了解etcd备份的性能，确保备份任务能够及时完成。</td></tr><tr><td>RED 方法</td><td>watcher 数量</td><td>监控etcd集群当前连接到etcd的客户端数量。如果连接数过高，可能需要调整etcd的配置或者增加集群的容量。</td></tr><tr><td>USE 方法</td><td>CPU 使用率</td><td></td></tr><tr><td>USE 方法</td><td>内存使用量</td><td></td></tr><tr><td>USE 方法</td><td>打开文件数</td><td></td></tr><tr><td>USE 方法</td><td>存储空间使用率</td><td>监控etcd存储空间的使用率可以帮助你确保etcd有足够的空间存储配置数据。如果使用率接近或达到上限，可能需要考虑扩展存储容量或者清理无用的数据。</td></tr></tbody></table><h2 id="使用-kube-prometheus-收集-etcd-指标" tabindex="-1"><a class="header-anchor" href="#使用-kube-prometheus-收集-etcd-指标" aria-hidden="true">#</a> 使用 kube-prometheus 收集 etcd 指标</h2><h3 id="http-模式-推荐" tabindex="-1"><a class="header-anchor" href="#http-模式-推荐" aria-hidden="true">#</a> http 模式（推荐）</h3><p>修改<code>--listen-metrics-urls</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>    <span class="token comment">#- --listen-metrics-urls=http://127.0.0.1:2381</span>
    <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>listen<span class="token punctuation">-</span>metrics<span class="token punctuation">-</span>urls=http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">2381</span><span class="token punctuation">,</span>http<span class="token punctuation">:</span>//ip<span class="token punctuation">:</span><span class="token number">2381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>部署</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> monitoring <span class="token parameter variable">-n</span> cattle-prometheus <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.service.port</span><span class="token operator">=</span><span class="token number">2381</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.service.targetPort</span><span class="token operator">=</span><span class="token number">2381</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">prometheusOperator.admissionWebhooks.patch.image.sha</span><span class="token operator">=</span>null ./
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="https-模式" tabindex="-1"><a class="header-anchor" href="#https-模式" aria-hidden="true">#</a> https 模式</h3><p>新增 etcd secret</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create secret generic etcd-certs <span class="token parameter variable">-n</span> cattle-prometheus --from-file<span class="token operator">=</span>/etc/kubernetes/pki/etcd/ca.crt --from-file<span class="token operator">=</span>/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file<span class="token operator">=</span>/etc/kubernetes/pki/etcd/healthcheck-client.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>部署</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> monitoring <span class="token parameter variable">-n</span> cattle-prometheus  <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.serviceMonitor.scheme</span><span class="token operator">=</span>https <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.serviceMonitor.caFile</span><span class="token operator">=</span>/etc/prometheus/secrets/etcd-certs/ca.crt <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.serviceMonitor.certFile</span><span class="token operator">=</span>/etc/prometheus/secrets/etcd-certs/healthcheck-client.crt <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeEtcd.serviceMonitor.keyFile</span><span class="token operator">=</span>/etc/prometheus/secrets/etcd-certs/healthcheck-client.key <span class="token parameter variable">--set</span> <span class="token assign-left variable">prometheus.prometheusSpec.secrets</span><span class="token operator">=</span><span class="token punctuation">{</span>etcd-certs<span class="token punctuation">}</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">prometheusOperator.admissionWebhooks.patch.image.sha</span><span class="token operator">=</span>null ./
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="大盘展示" tabindex="-1"><a class="header-anchor" href="#大盘展示" aria-hidden="true">#</a> 大盘展示</h2><p>Grafana 大盘： https://github.com/clay-wangzhi/grafana-dashboard/blob/master/etcd/etcd-dash.json 导入即可</p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20230616180204033.png" alt="image-20230616180204033" style="zoom:67%;"><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20230616180334752.png" alt="image-20230616180334752"><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20230616180508983.png" alt="image-20230616180508983"></p><h2 id="巡检" tabindex="-1"><a class="header-anchor" href="#巡检" aria-hidden="true">#</a> 巡检</h2><p>完成集群部署、了解成员管理、构建好监控及告警体系并添加好定时备份策略后，这时终于可以放心给业务使用了。然而在后续业务使用过程中，你可能会遇到各类问题，而这些问题很可能是metrics监控无法发现的，比如如下：</p><ul><li>etcd集群因重启进程、节点等出现数据不一致；</li><li>业务写入大 key-value 导致 etcd 性能骤降；</li><li>业务异常写入大量key数，稳定性存在隐患；</li></ul><p>这时就需要巡检。</p><p>参考ServiceMonitor和EtcdBackup机制，同样可以通过CRD的方式描述此巡检任务，然后通过相应的Operator实现此巡检任务。</p><p>参考链接：</p>`,27),p={href:"https://docs.datadoghq.com/integrations/etcd/?tab=host",target:"_blank",rel:"noopener noreferrer"},h={href:"https://time.geekbang.org/column/intro/100069901",target:"_blank",rel:"noopener noreferrer"};function u(m,k){const e=r("ExternalLinkIcon");return c(),d("div",null,[o,t("p",null,[t("a",p,[a("datadog etcd 指标"),s(e)])]),t("p",null,[t("a",h,[a("etcd 实战课 | 极客时间 唐聪"),s(e)])])])}const v=n(i,[["render",u],["__file","etcd-monitor.html.vue"]]);export{v as default};

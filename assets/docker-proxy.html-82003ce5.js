const e=JSON.parse('{"key":"v-1497ef65","path":"/cloudnative/docker/docker-proxy.html","title":"Docker 设置代理","lang":"zh-CN","frontmatter":{"category":"云原生","tag":["Docker"],"description":"Docker 设置代理 起因：由于有些国外的镜像拉取不下来，所以设置翻墙代理，下载成功后，再导出docker save xx:tar -o xx.tar，传输到需要的节点导入docker load -i xx.tar ## 先停止Docker systemctl stop docker ## 修改Docker配置文件 vim /lib/systemd/system/docker.service ## 在 [Service] 节点下面新增代理信息 [Service] ...... Environment=\\"HTTP_PROXY=socks5://ip:20080/\\" \\"HTTPS_PROXY=socks5://ip:20080/\\" ## 重新加载Docker并启动 systemctl daemon-reload systemctl restart docker","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/docker/docker-proxy.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"Docker 设置代理"}],["meta",{"property":"og:description","content":"Docker 设置代理 起因：由于有些国外的镜像拉取不下来，所以设置翻墙代理，下载成功后，再导出docker save xx:tar -o xx.tar，传输到需要的节点导入docker load -i xx.tar ## 先停止Docker systemctl stop docker ## 修改Docker配置文件 vim /lib/systemd/system/docker.service ## 在 [Service] 节点下面新增代理信息 [Service] ...... Environment=\\"HTTP_PROXY=socks5://ip:20080/\\" \\"HTTPS_PROXY=socks5://ip:20080/\\" ## 重新加载Docker并启动 systemctl daemon-reload systemctl restart docker"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-18T15:14:52.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2023-06-18T15:14:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 设置代理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-18T15:14:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[],"git":{"createdTime":1681909711000,"updatedTime":1687101292000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":2}]},"readingTime":{"minutes":0.49,"words":148},"filePathRelative":"cloudnative/docker/docker-proxy.md","localizedDate":"2023年4月19日","excerpt":"<h1> Docker 设置代理</h1>\\n<blockquote>\\n<p>起因：由于有些国外的镜像拉取不下来，所以设置翻墙代理，下载成功后，再导出<code>docker save xx:tar -o xx.tar</code>，传输到需要的节点导入<code>docker load -i xx.tar</code></p>\\n</blockquote>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\">## 先停止Docker</span>\\nsystemctl stop <span class=\\"token function\\">docker</span>\\n\\n<span class=\\"token comment\\">## 修改Docker配置文件</span>\\n<span class=\\"token function\\">vim</span> /lib/systemd/system/docker.service\\n<span class=\\"token comment\\">## 在 [Service] 节点下面新增代理信息</span>\\n<span class=\\"token punctuation\\">[</span>Service<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">..</span><span class=\\"token punctuation\\">..</span><span class=\\"token punctuation\\">..</span>\\n<span class=\\"token assign-left variable\\">Environment</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"HTTP_PROXY=socks5://ip:20080/\\"</span> <span class=\\"token string\\">\\"HTTPS_PROXY=socks5://ip:20080/\\"</span>\\n\\n<span class=\\"token comment\\">## 重新加载Docker并启动 </span>\\nsystemctl daemon-reload\\nsystemctl restart <span class=\\"token function\\">docker</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as p,c as l,b as a,d as n,e,a as o}from"./app-3484c079.js";const i={},c=o('<h1 id="etcd-基准测试" tabindex="-1"><a class="header-anchor" href="#etcd-基准测试" aria-hidden="true">#</a> Etcd 基准测试</h1><h2 id="sli-slo" tabindex="-1"><a class="header-anchor" href="#sli-slo" aria-hidden="true">#</a> SLI &amp; SLO</h2><p>SLI（Service Level Indicator）：服务等级指标，其实就是我们选择哪些指标来衡量我们的稳定性。</p><p>SLO（Service Level Objective）：服务等级目标，指的就是我们设定的稳定性目标，比如“几个 9”这样的目标。</p><p><strong>SLO 是 SLI 要达成的目标，我们需要选择合适的 SLI，设定对应的 SLO。</strong></p><table><thead><tr><th>SLI</th><th>SLO</th><th>测试方式</th></tr></thead><tbody><tr><td>吞吐量：衡量etcd每秒可以处理的请求数量</td><td>每秒处理40,000个读取请求和20,000个写入请求</td><td>官方 benchmark</td></tr><tr><td>响应时间：衡量etcd对于读取和写入请求的响应时间</td><td>99%的读写请求在100毫秒以内完成</td><td>官方 benchmark</td></tr></tbody></table><p>目前已有 SLI 指标的收集、监控、展示及告警</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><h3 id="使用-benchmark-测试延迟和吞吐量" tabindex="-1"><a class="header-anchor" href="#使用-benchmark-测试延迟和吞吐量" aria-hidden="true">#</a> 使用 benchmark 测试延迟和吞吐量</h3><h4 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h4><p><strong>在 Linux 主机安装 Go 环境</strong></p><p><strong>下载解压</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://golang.google.cn/dl/go1.19.10.linux-amd64.tar.gz\n<span class="token function">tar</span> <span class="token parameter variable">-C</span> /usr/local <span class="token parameter variable">-xzf</span>  go1.19.10.linux-amd64.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置到PATH环境变量</strong></p><p>在 <code>/etc/profile</code> 文件追加如下内容</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>export PATH=$PATH:/usr/local/go/bin\nexport GOPROXY=https://goproxy.cn\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>最后 source 生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>安装 benchmark 工具</strong></p><p>clone 代码，安装 benchmark</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/etcd-io/etcd.git <span class="token parameter variable">--depth</span> <span class="token number">1</span>\n<span class="token builtin class-name">cd</span> etcd/\ngo <span class="token function">install</span> <span class="token parameter variable">-v</span> ./tools/benchmark\n<span class="token comment"># 找到二进制文件位置</span>\ngo list <span class="token parameter variable">-f</span> <span class="token string">&quot;{{.Target}}&quot;</span> ./tools/benchmark\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="基准测试" tabindex="-1"><a class="header-anchor" href="#基准测试" aria-hidden="true">#</a> 基准测试</h4><p>查看帮助</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /root/go/bin/\n./benchmark <span class="token parameter variable">-h</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ETCD_CA_CERT</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/ca.crt&quot;</span>\n<span class="token assign-left variable">ETCD_CERT</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/server.crt&quot;</span>\n<span class="token assign-left variable">ETCD_KEY</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/server.key&quot;</span>\n<span class="token assign-left variable">HOST_1</span><span class="token operator">=</span>https://xxx.xxx.xxx.xxx:2379\n<span class="token assign-left variable">HOST_2</span><span class="token operator">=</span>https://xxx.xxx.xxx.xxx:2379\n<span class="token assign-left variable">HOST_3</span><span class="token operator">=</span>https://xxx.xxx.xxx.xxx:2379\n\n<span class="token comment"># 提前写个测试 key</span>\n<span class="token assign-left variable">YOUR_KEY</span><span class="token operator">=</span>foo\n<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> put <span class="token variable">$YOUR_KEY</span> bar\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>写测试</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># write to leader</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_2}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> --target-leader <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>\n     put --key-size<span class="token operator">=</span><span class="token number">8</span> --sequential-keys <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">10000</span> --val-size<span class="token operator">=</span><span class="token number">256</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_2}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> --target-leader  <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">100</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token punctuation">\\</span>\n     put --key-size<span class="token operator">=</span><span class="token number">8</span> --sequential-keys <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">100000</span> --val-size<span class="token operator">=</span><span class="token number">256</span>\n     \n<span class="token comment"># write to all members</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">100</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token punctuation">\\</span>\n    put --key-size<span class="token operator">=</span><span class="token number">8</span> --sequential-keys <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">100000</span> --val-size<span class="token operator">=</span><span class="token number">256</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:right;">Number of keys</th><th style="text-align:right;">Key size in bytes</th><th style="text-align:right;">Value size in bytes</th><th style="text-align:right;">Number of connections</th><th style="text-align:right;">Number of clients</th><th>Target etcd server</th><th style="text-align:right;">Average write QPS</th><th style="text-align:right;">99% latency per request</th></tr></thead><tbody><tr><td style="text-align:right;">10,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td>leader only</td><td style="text-align:right;">154</td><td style="text-align:right;">14.8ms</td></tr><tr><td style="text-align:right;">100,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">100</td><td style="text-align:right;">1000</td><td>leader only</td><td style="text-align:right;">14,567</td><td style="text-align:right;">134.4ms</td></tr><tr><td style="text-align:right;">100,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">100</td><td style="text-align:right;">1000</td><td>all members</td><td style="text-align:right;">17,018</td><td style="text-align:right;">117ms</td></tr></tbody></table><p><strong>读测试</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Single connection read requests</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>\n    range <span class="token variable">$YOUR_KEY</span> <span class="token parameter variable">--consistency</span><span class="token operator">=</span>l <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">10000</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>\n    range <span class="token variable">$YOUR_KEY</span> <span class="token parameter variable">--consistency</span><span class="token operator">=</span>s <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">10000</span>\n\n<span class="token comment"># Many concurrent read requests</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">100</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token punctuation">\\</span>\n    range <span class="token variable">$YOUR_KEY</span> <span class="token parameter variable">--consistency</span><span class="token operator">=</span>l <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">100000</span>\n./benchmark <span class="token parameter variable">--endpoints</span><span class="token operator">=</span><span class="token variable">${HOST_1}</span>,<span class="token variable">${HOST_2}</span>,<span class="token variable">${HOST_3}</span> <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">${ETCD_KEY}</span>&quot;</span> <span class="token parameter variable">--conns</span><span class="token operator">=</span><span class="token number">100</span> <span class="token parameter variable">--clients</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token punctuation">\\</span>\n    range <span class="token variable">$YOUR_KEY</span> <span class="token parameter variable">--consistency</span><span class="token operator">=</span>s <span class="token parameter variable">--total</span><span class="token operator">=</span><span class="token number">100000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:right;">Number of requests</th><th style="text-align:right;">Key size in bytes</th><th style="text-align:right;">Value size in bytes</th><th style="text-align:right;">Number of connections</th><th style="text-align:right;">Number of clients</th><th>Consistency</th><th style="text-align:right;">Average read QPS</th><th style="text-align:right;">99% latency per request</th></tr></thead><tbody><tr><td style="text-align:right;">10,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td>Linearizable</td><td style="text-align:right;">509</td><td style="text-align:right;">7.3ms</td></tr><tr><td style="text-align:right;">10,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td>Serializable</td><td style="text-align:right;">1,709</td><td style="text-align:right;">1.7ms</td></tr><tr><td style="text-align:right;">100,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">100</td><td style="text-align:right;">1000</td><td>Linearizable</td><td style="text-align:right;">29,326</td><td style="text-align:right;">104.8ms</td></tr><tr><td style="text-align:right;">100,000</td><td style="text-align:right;">8</td><td style="text-align:right;">256</td><td style="text-align:right;">100</td><td style="text-align:right;">1000</td><td>Serializable</td><td style="text-align:right;">43,469</td><td style="text-align:right;">98.9ms</td></tr></tbody></table><h3 id="使用-fio-测试磁盘性能" tabindex="-1"><a class="header-anchor" href="#使用-fio-测试磁盘性能" aria-hidden="true">#</a> 使用 FIO 测试磁盘性能</h3><p>Etcd 对内存和 CPU 消耗并不高，足够就行。</p><p>一次 Etcd 请求的最小时间 = 成员节点之间的网络往返时延 + 收到数据之后进行持久化的时延。因此，Etcd 的性能主要受两方面的约束：</p><ul><li>网络</li><li>磁盘</li></ul><p>多节点的 Etcd 集群成员节点应该尽量部署在同一个数据中心，减少网络时延。同一数据中心内，不同节点的网络情况通常是非常好的，如果需要测试可以使用 <code>ping</code> 或 <code>tcpdump</code> 命令进行分析。</p><p>下面主要讨论硬盘 IO 测试方法。</p><p>存储性能能够满足 etcd 的性能要求，有两种方法测试：</p><p>存储性能能够满足 etcd 的性能要求，有两种方法测试：</p><ol><li><p>已运行的 etcd 集群，通过指标<code>etcd_disk_wal_fysnc_duration_seconds</code>来评估存储 I/O 性能， 该指标记录了 WAL 文件系统调用 fsync 的延迟分布，当 99% 样本的同步时间小于 10 毫秒就可以认为存储性能能够满足 etcd 的性能要求。</p></li><li><p>是用 fio 命令，还原 etcd 使用场景，看99线</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> test-data \nfio <span class="token parameter variable">--rw</span><span class="token operator">=</span>write <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>sync <span class="token parameter variable">--fdatasync</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--directory</span><span class="token operator">=</span>test-data <span class="token parameter variable">--size</span><span class="token operator">=</span>22m <span class="token parameter variable">--bs</span><span class="token operator">=</span><span class="token number">2300</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>mytest\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="优化方案" tabindex="-1"><a class="header-anchor" href="#优化方案" aria-hidden="true">#</a> 优化方案</h2><p>换 SSD 盘</p><p>给定较高的磁盘优先级</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># best effort, highest priority</span>\n$ <span class="token function">sudo</span> ionice <span class="token parameter variable">-c2</span> <span class="token parameter variable">-n0</span> <span class="token parameter variable">-p</span> <span class="token variable"><span class="token variable">`</span>pgrep etcd<span class="token variable">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参考链接：</p>',46),d={href:"https://etcd.io/docs/v3.5/tuning/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://etcd.io/docs/v3.5/op-guide/hardware/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://etcd.io/docs/v3.5/benchmarks/etcd-3-demo-benchmarks/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.ibm.com/cloud/blog/using-fio-to-tell-whether-your-storage-is-fast-enough-for-etcd",target:"_blank",rel:"noopener noreferrer"};function u(g,m){const s=r("ExternalLinkIcon");return p(),l("div",null,[c,a("p",null,[a("a",d,[n("etcd 官方文档-tunning"),e(s)])]),a("p",null,[a("a",k,[n("etcd 官方文档-硬件要求"),e(s)])]),a("p",null,[a("a",b,[n("etcd 官方文档-benchmark"),e(s)])]),a("p",null,[a("a",v,[n("使用fio测试etcd是否满足要求"),e(s)])])])}const y=t(i,[["render",u],["__file","etcd-benchmark.html.vue"]]);export{y as default};

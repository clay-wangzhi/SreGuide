const l=JSON.parse('{"key":"v-7b0edca8","path":"/devops/ansible/playbook.html","title":"4 Ansible Playbook","lang":"zh-CN","frontmatter":{"date":"2020-03-20T00:00:00.000Z","category":"自动化工具","tag":["Ansible"],"description":"4 Ansible Playbook 1 Ansible Playbook简介 Ansible 靠ansible命令是撑不起自动化管理这把大伞的，Ansible真正强大的是playbook，它才是Ansible撬动自动化管理的结实杠杆。 ansbile-playbook是一系列ansible命令的集合，利用yaml 语言编写。playbook命令根据自上而下的顺序依次执行。同时，playbook开创了很多特性,它可以允许你传输某个命令的状态到后面的指令,如你可以从一台机器的文件中抓取内容并附为变量,然后在另一台机器中使用,这使得你可以实现一些复杂的部署机制,这是ansible命令无法实现的。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/devops/ansible/playbook.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"4 Ansible Playbook"}],["meta",{"property":"og:description","content":"4 Ansible Playbook 1 Ansible Playbook简介 Ansible 靠ansible命令是撑不起自动化管理这把大伞的，Ansible真正强大的是playbook，它才是Ansible撬动自动化管理的结实杠杆。 ansbile-playbook是一系列ansible命令的集合，利用yaml 语言编写。playbook命令根据自上而下的顺序依次执行。同时，playbook开创了很多特性,它可以允许你传输某个命令的状态到后面的指令,如你可以从一台机器的文件中抓取内容并附为变量,然后在另一台机器中使用,这使得你可以实现一些复杂的部署机制,这是ansible命令无法实现的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-20T12:57:10.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Ansible"}],["meta",{"property":"article:published_time","content":"2020-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-20T12:57:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4 Ansible Playbook\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-20T12:57:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"1 Ansible Playbook简介","slug":"_1-ansible-playbook简介","link":"#_1-ansible-playbook简介","children":[{"level":3,"title":"playbook、play和task的关系","slug":"playbook、play和task的关系","link":"#playbook、play和task的关系","children":[]}]},{"level":2,"title":"2 Playbook基本语法","slug":"_2-playbook基本语法","link":"#_2-playbook基本语法","children":[]},{"level":2,"title":"3 Playbook简单示例","slug":"_3-playbook简单示例","link":"#_3-playbook简单示例","children":[]},{"level":2,"title":"4 ansible-playbook常用选项","slug":"_4-ansible-playbook常用选项","link":"#_4-ansible-playbook常用选项","children":[{"level":3,"title":"4.1 打印详细信息","slug":"_4-1-打印详细信息","link":"#_4-1-打印详细信息","children":[]},{"level":3,"title":"4.2  校验playbook语法","slug":"_4-2-校验playbook语法","link":"#_4-2-校验playbook语法","children":[]},{"level":3,"title":"4.3 测试运行playbook","slug":"_4-3-测试运行playbook","link":"#_4-3-测试运行playbook","children":[]},{"level":3,"title":"4.4 playbook模块参数的传递方式","slug":"_4-4-playbook模块参数的传递方式","link":"#_4-4-playbook模块参数的传递方式","children":[]}]},{"level":2,"title":"5 Multiple Plays","slug":"_5-multiple-plays","link":"#_5-multiple-plays","children":[]}],"git":{"createdTime":1681912236000,"updatedTime":1681995430000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":2}]},"readingTime":{"minutes":4.4,"words":1321},"filePathRelative":"devops/ansible/playbook.md","localizedDate":"2020年3月20日","excerpt":"<h1> 4 Ansible Playbook</h1>\\n<h2> 1 Ansible Playbook简介</h2>\\n<p>Ansible 靠ansible命令是撑不起自动化管理这把大伞的，Ansible真正强大的是playbook，它才是Ansible撬动自动化管理的结实杠杆。</p>\\n<p>ansbile-playbook是一系列ansible命令的集合，利用yaml 语言编写。playbook命令根据自上而下的顺序依次执行。同时，playbook开创了很多特性,它可以允许你传输某个命令的状态到后面的指令,如你可以从一台机器的文件中抓取内容并附为变量,然后在另一台机器中使用,这使得你可以实现一些复杂的部署机制,这是ansible命令无法实现的。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{l as data};

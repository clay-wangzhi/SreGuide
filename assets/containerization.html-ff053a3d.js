const e=JSON.parse('{"key":"v-10dd1b0f","path":"/cloudnative/best-practice/containerization.html","title":"容器化推广","lang":"zh-CN","frontmatter":{"order":1,"category":"云原生","tag":["Kubernetes"],"description":"容器化推广 方法论 一立二扩三优化四架构后五治理 完整落地整体规划 从虚拟机到Kubernetes转变的收益 主要收益如下： 更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。 保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。 加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。 强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。 支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/best-practice/containerization.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"容器化推广"}],["meta",{"property":"og:description","content":"容器化推广 方法论 一立二扩三优化四架构后五治理 完整落地整体规划 从虚拟机到Kubernetes转变的收益 主要收益如下： 更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。 保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。 加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。 强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。 支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-04T10:28:48.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-08-04T10:28:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"容器化推广\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-04T10:28:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"方法论","slug":"方法论","link":"#方法论","children":[]},{"level":2,"title":"完整落地整体规划","slug":"完整落地整体规划","link":"#完整落地整体规划","children":[{"level":3,"title":"从虚拟机到Kubernetes转变的收益","slug":"从虚拟机到kubernetes转变的收益","link":"#从虚拟机到kubernetes转变的收益","children":[]},{"level":3,"title":"风险控制和可靠性保障","slug":"风险控制和可靠性保障","link":"#风险控制和可靠性保障","children":[]},{"level":3,"title":"可观测建设","slug":"可观测建设","link":"#可观测建设","children":[]},{"level":3,"title":"自动化建设","slug":"自动化建设","link":"#自动化建设","children":[]},{"level":3,"title":"阶段性能力矩阵规划","slug":"阶段性能力矩阵规划","link":"#阶段性能力矩阵规划","children":[]}]},{"level":2,"title":"对比 KVM 的 FAQ","slug":"对比-kvm-的-faq","link":"#对比-kvm-的-faq","children":[{"level":3,"title":"1）应用从 KVM 迁移到 容器 后，资源利用率为何发生变化？","slug":"_1-应用从-kvm-迁移到-容器-后-资源利用率为何发生变化","link":"#_1-应用从-kvm-迁移到-容器-后-资源利用率为何发生变化","children":[]},{"level":3,"title":"2) 流量洪峰时，容器比虚拟RT长","slug":"_2-流量洪峰时-容器比虚拟rt长","link":"#_2-流量洪峰时-容器比虚拟rt长","children":[]}]}],"git":{"createdTime":1691144928000,"updatedTime":1691144928000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":7.2,"words":2159},"filePathRelative":"cloudnative/best-practice/containerization.md","localizedDate":"2023年8月4日","excerpt":"<h1> 容器化推广</h1>\\n<h2> 方法论</h2>\\n<p><strong>一立二扩三优化四架构后五治理</strong></p>\\n<h2> 完整落地整体规划</h2>\\n<h3> 从虚拟机到Kubernetes转变的收益</h3>\\n<p>主要收益如下：</p>\\n<ol>\\n<li>更高效的利用系统资源：虚拟化本身大概占用10%的宿主机资源消耗，在集群规模足够大的时候，这是一块非常大的资源浪费。</li>\\n<li>保证环境的一致性：环境不一致问题是容器镜像出现之前业界的通用问题，不利于业务的快速上线和稳定性。</li>\\n<li>加快资源交付和扩缩容：虚拟机创建流程冗长，各种初始化和配置资源准备耗时长且容易出错，而容器秒级启动，声明式的配置，降低出错概率，并内置智能负载均衡器。</li>\\n<li>强大的故障发现和自我修复能力：支持端口检查、url检查、脚本检查等多种健康检测方式，支持使用启动探针、就绪探针、存活探针，在应用出现问题时自动下线并重启。</li>\\n<li>支持弹性伸缩：可根据容器的内存、CPU使用率，调用QPS等，进行自动的扩缩容。</li>\\n</ol>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

import{_ as s,e as n}from"./app.53755e41.js";const a={},e=n(`<h1 id="\u7B2C\u516D\u90E8\u5206-google-shell-\u98CE\u683C\u6307\u5357" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u516D\u90E8\u5206-google-shell-\u98CE\u683C\u6307\u5357" aria-hidden="true">#</a> \u7B2C\u516D\u90E8\u5206 Google Shell \u98CE\u683C\u6307\u5357</h1><h2 id="_1-\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#_1-\u80CC\u666F" aria-hidden="true">#</a> 1 \u80CC\u666F</h2><h3 id="_1-1-\u4F7F\u7528\u54EA\u4E00\u79CDshell" tabindex="-1"><a class="header-anchor" href="#_1-1-\u4F7F\u7528\u54EA\u4E00\u79CDshell" aria-hidden="true">#</a> 1.1 \u4F7F\u7528\u54EA\u4E00\u79CDShell</h3><blockquote><p>Bash\u662F\u552F\u4E00\u88AB\u5141\u8BB8\u6267\u884C\u7684shell\u811A\u672C\u8BED\u8A00\u3002</p></blockquote><p>\u53EF\u6267\u884C\u6587\u4EF6\u5FC5\u987B\u4EE5<code>#!/bin/bash</code>\u548C\u6700\u5C0F\u6570\u91CF\u7684\u6807\u5FD7\u5F00\u59CB\u3002\u8BF7\u4F7F<code>set</code>\u6765\u8BBE\u7F6Eshell\u7684\u9009\u9879\uFF0C\u4F7F\u5F97\u7528<code>bash &lt;script_name&gt;</code>\u8C03\u7528\u4F60\u7684\u811A\u672C\u65F6\u4E0D\u4F1A\u7834\u574F\u5176\u529F\u80FD\u3002</p><p>\u9650\u5236\u6240\u6709\u7684\u53EF\u6267\u884Cshell\u811A\u672C\u4E3Abash\u4F7F\u5F97\u6211\u4EEC\u5B89\u88C5\u5728\u6240\u6709\u8BA1\u7B97\u673A\u4E2D\u7684shell\u8BED\u8A00\u4FDD\u6301\u4E00\u81F4\u6027\u3002</p><h3 id="_1-2-\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528shell" tabindex="-1"><a class="header-anchor" href="#_1-2-\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528shell" aria-hidden="true">#</a> 1.2 \u4EC0\u4E48\u65F6\u5019\u4F7F\u7528Shell</h3><blockquote><p>Shell\u5E94\u8BE5\u4EC5\u4EC5\u88AB\u7528\u4E8E\u5C0F\u529F\u80FD\u6216\u8005\u7B80\u5355\u7684\u5305\u88C5\u811A\u672C\u3002</p></blockquote><p>\u5C3D\u7BA1Shell\u811A\u672C\u4E0D\u662F\u4E00\u79CD\u5F00\u53D1\u8BED\u8A00\uFF0C\u4F46\u5728\u6574\u4E2A\u8C37\u6B4C\u5B83\u88AB\u7528\u4E8E\u7F16\u5199\u591A\u79CD\u5B9E\u7528\u5DE5\u5177\u7684\u811A\u672C\u3002\u8FD9\u4E2A\u98CE\u683C\u6307\u5357\u66F4\u591A\u7684\u662F\u8BA4\u540C\u5B83\u7684\u4F7F\u7528\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u5EFA\u8BAE\uFF0C\u5373\u5B83\u53EF\u88AB\u7528\u4E8E\u5E7F\u6CDB\u90E8\u7F72\u3002</p><p>\u4EE5\u4E0B\u662F\u4E00\u4E9B\u51C6\u5219\uFF1A</p><ul><li>\u5982\u679C\u4F60\u4E3B\u8981\u662F\u5728\u8C03\u7528\u5176\u4ED6\u7684\u5DE5\u5177\u5E76\u4E14\u505A\u4E00\u4E9B\u76F8\u5BF9\u5F88\u5C0F\u6570\u636E\u91CF\u7684\u64CD\u4F5C\uFF0C\u90A3\u4E48\u4F7F\u7528shell\u6765\u5B8C\u6210\u4EFB\u52A1\u662F\u4E00\u79CD\u53EF\u63A5\u53D7\u7684\u9009\u62E9\u3002</li><li>\u5982\u679C\u4F60\u5728\u4E4E\u6027\u80FD\uFF0C\u90A3\u4E48\u8BF7\u9009\u62E9\u5176\u4ED6\u5DE5\u5177\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528shell\u3002</li><li>\u5982\u679C\u4F60\u53D1\u73B0\u4F60\u9700\u8981\u4F7F\u7528\u6570\u636E\u800C\u4E0D\u662F\u53D8\u91CF\u8D4B\u503C\uFF08\u5982 <code>\${PHPESTATUS}</code> \uFF09\uFF0C\u90A3\u4E48\u4F60\u5E94\u8BE5\u4F7F\u7528Python\u811A\u672C\u3002</li><li>\u5982\u679C\u4F60\u5C06\u8981\u7F16\u5199\u7684\u811A\u672C\u4F1A\u8D85\u8FC7100\u884C\uFF0C\u90A3\u4E48\u4F60\u53EF\u80FD\u5E94\u8BE5\u4F7F\u7528Python\u6765\u7F16\u5199\uFF0C\u800C\u4E0D\u662FShell\u3002\u8BF7\u8BB0\u4F4F\uFF0C\u5F53\u811A\u672C\u884C\u6570\u589E\u52A0\uFF0C\u5C3D\u65E9\u4F7F\u7528\u53E6\u5916\u4E00\u79CD\u8BED\u8A00\u91CD\u5199\u4F60\u7684\u811A\u672C\uFF0C\u4EE5\u907F\u514D\u4E4B\u540E\u82B1\u66F4\u591A\u7684\u65F6\u95F4\u6765\u91CD\u5199\u3002</li></ul><h2 id="_2-shell\u6587\u4EF6\u548C\u89E3\u91CA\u5668\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_2-shell\u6587\u4EF6\u548C\u89E3\u91CA\u5668\u8C03\u7528" aria-hidden="true">#</a> 2 Shell\u6587\u4EF6\u548C\u89E3\u91CA\u5668\u8C03\u7528</h2><h3 id="_2-1-\u6587\u4EF6\u6269\u5C55\u540D" tabindex="-1"><a class="header-anchor" href="#_2-1-\u6587\u4EF6\u6269\u5C55\u540D" aria-hidden="true">#</a> 2.1 \u6587\u4EF6\u6269\u5C55\u540D</h3><blockquote><p>\u53EF\u6267\u884C\u6587\u4EF6\u5E94\u8BE5\u6CA1\u6709\u6269\u5C55\u540D\uFF08\u5F3A\u70C8\u5EFA\u8BAE\uFF09\u6216\u8005\u4F7F\u7528.sh\u6269\u5C55\u540D\u3002\u5E93\u6587\u4EF6\u5FC5\u987B\u4F7F\u7528.sh\u4F5C\u4E3A\u6269\u5C55\u540D\uFF0C\u800C\u4E14\u5E94\u8BE5\u662F\u4E0D\u53EF\u6267\u884C\u7684\u3002</p></blockquote><p>\u5F53\u6267\u884C\u4E00\u4E2A\u7A0B\u5E8F\u65F6\uFF0C\u5E76\u4E0D\u9700\u8981\u77E5\u9053\u5B83\u662F\u7528\u4EC0\u4E48\u8BED\u8A00\u7F16\u5199\u7684\u3002\u800C\u4E14shell\u811A\u672C\u4E5F\u4E0D\u8981\u6C42\u6709\u6269\u5C55\u540D\u3002\u6240\u4EE5\u6211\u4EEC\u66F4\u559C\u6B22\u53EF\u6267\u884C\u6587\u4EF6\u6CA1\u6709\u6269\u5C55\u540D\u3002</p><p>\u7136\u800C\uFF0C\u5BF9\u4E8E\u5E93\u6587\u4EF6\uFF0C\u77E5\u9053\u5176\u7528\u4EC0\u4E48\u8BED\u8A00\u7F16\u5199\u7684\u662F\u5F88\u91CD\u8981\u7684\uFF0C\u6709\u65F6\u5019\u4F1A\u9700\u8981\u4F7F\u7528\u4E0D\u540C\u8BED\u8A00\u7F16\u5199\u7684\u76F8\u4F3C\u7684\u5E93\u6587\u4EF6\u3002\u4F7F\u7528.sh\u8FD9\u6837\u7279\u5B9A\u8BED\u8A00\u540E\u7F00\u4F5C\u4E3A\u6269\u5C55\u540D\uFF0C\u5C31\u4F7F\u5F97\u7528\u4E0D\u540C\u8BED\u8A00\u7F16\u5199\u7684\u5177\u6709\u76F8\u540C\u529F\u80FD\u7684\u5E93\u6587\u4EF6\u53EF\u4EE5\u91C7\u7528\u4E00\u6837\u7684\u540D\u79F0\u3002</p><h3 id="_2-2-suid-sgid" tabindex="-1"><a class="header-anchor" href="#_2-2-suid-sgid" aria-hidden="true">#</a> 2.2 SUID/SGID</h3><blockquote><p>SUID(Set User ID)\u548CSGID(Set Group ID)\u5728shell\u811A\u672C\u4E2D\u662F\u88AB\u7981\u6B62\u7684\u3002</p></blockquote><p>shell\u5B58\u5728\u592A\u591A\u7684\u5B89\u5168\u95EE\u9898\uFF0C\u4EE5\u81F4\u4E8E\u5982\u679C\u5141\u8BB8SUID/SGID\u4F1A\u4F7F\u5F97shell\u51E0\u4E4E\u4E0D\u53EF\u80FD\u8DB3\u591F\u5B89\u5168\u3002\u867D\u7136bash\u4F7F\u5F97\u8FD0\u884CSUID\u975E\u5E38\u56F0\u96BE\uFF0C\u4F46\u5728\u67D0\u4E9B\u5E73\u53F0\u4E0A\u4ECD\u7136\u6709\u53EF\u80FD\u8FD0\u884C\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u6211\u4EEC\u660E\u786E\u63D0\u51FA\u8981\u7981\u6B62\u5B83\u3002</p><p>\u5982\u679C\u4F60\u9700\u8981\u8F83\u9AD8\u6743\u9650\u7684\u8BBF\u95EE\u8BF7\u4F7F\u7528<code>sudo</code>\u3002</p><h2 id="_3-\u73AF\u5883" tabindex="-1"><a class="header-anchor" href="#_3-\u73AF\u5883" aria-hidden="true">#</a> 3 \u73AF\u5883</h2><h3 id="_3-1-stdout-vs-stderr" tabindex="-1"><a class="header-anchor" href="#_3-1-stdout-vs-stderr" aria-hidden="true">#</a> 3.1 STDOUT vs STDERR</h3><blockquote><p>\u6240\u6709\u7684\u9519\u8BEF\u4FE1\u606F\u90FD\u5E94\u8BE5\u88AB\u5BFC\u5411STDERR\u3002</p></blockquote><p>\u8FD9\u4F7F\u5F97\u4ECE\u5B9E\u9645\u95EE\u9898\u4E2D\u5206\u79BB\u51FA\u6B63\u5E38\u72B6\u6001\u53D8\u5F97\u66F4\u5BB9\u6613\u3002</p><p>\u63A8\u8350\u4F7F\u7528\u7C7B\u4F3C\u5982\u4E0B\u51FD\u6570\uFF0C\u5C06\u9519\u8BEF\u4FE1\u606F\u548C\u5176\u4ED6\u72B6\u6001\u4FE1\u606F\u4E00\u8D77\u6253\u5370\u51FA\u6765\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function-name function">err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;[<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> + <span class="token string">&#39;%Y-%m-%dT%H:%M:%S%z&#39;</span><span class="token variable">)</span></span>]: <span class="token variable">$@</span>&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token operator">!</span> do_something<span class="token punctuation">;</span><span class="token keyword">then</span>
  err <span class="token string">&quot;Unable to do_someting&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token string">&quot;<span class="token variable">\${E_DID_NOTHING}</span>&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_4-\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_4-\u6CE8\u91CA" aria-hidden="true">#</a> 4 \u6CE8\u91CA</h2><h3 id="_4-1-\u6587\u4EF6\u5934" tabindex="-1"><a class="header-anchor" href="#_4-1-\u6587\u4EF6\u5934" aria-hidden="true">#</a> 4.1 \u6587\u4EF6\u5934</h3><blockquote><p>\u6BCF\u4E2A\u6587\u4EF6\u7684\u5F00\u5934\u662F\u5176\u6587\u4EF6\u5185\u5BB9\u7684\u63CF\u8FF0\u3002</p></blockquote><p>\u6BCF\u4E2A\u6587\u4EF6\u5FC5\u987B\u5305\u542B\u4E00\u4E2A\u9876\u5C42\u6CE8\u91CA\uFF0C\u5BF9\u5176\u5185\u5BB9\u8FDB\u884C\u7B80\u8981\u6982\u8FF0\u3002\u7248\u6743\u58F0\u660E\u548C\u4F5C\u8005\u4FE1\u606F\u662F\u53EF\u9009\u7684\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Perform hot backups of Oracle databases.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-2-\u529F\u80FD\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_4-2-\u529F\u80FD\u6CE8\u91CA" aria-hidden="true">#</a> 4.2 \u529F\u80FD\u6CE8\u91CA</h3><blockquote><p>\u4EFB\u4F55\u4E0D\u662F\u65E2\u660E\u663E\u53C8\u77ED\u7684\u51FD\u6570\u90FD\u5FC5\u987B\u88AB\u6CE8\u91CA\u3002\u4EFB\u4F55\u5E93\u51FD\u6570\u65E0\u8BBA\u5176\u957F\u77ED\u548C\u590D\u6742\u6027\u90FD\u5FC5\u987B\u88AB\u6CE8\u91CA\u3002</p></blockquote><p>\u5176\u4ED6\u4EBA\u901A\u8FC7\u9605\u8BFB\u6CE8\u91CA\uFF08\u548C\u5E2E\u52A9\u4FE1\u606F\uFF0C\u5982\u679C\u6709\u7684\u8BDD\uFF09\u5C31\u80FD\u591F\u5B66\u4F1A\u5982\u4F55\u4F7F\u7528\u4F60\u7684\u7A0B\u5E8F\u6216\u5E93\u51FD\u6570\uFF0C\u800C\u4E0D\u9700\u8981\u9605\u8BFB\u4EE3\u7801\u3002</p><p>\u6240\u6709\u7684\u51FD\u6570\u6CE8\u91CA\u5E94\u8BE5\u5305\u542B\uFF1A</p><ul><li>\u51FD\u6570\u7684\u63CF\u8FF0</li><li>\u5168\u5C40\u53D8\u91CF\u7684\u4F7F\u7528\u548C\u4FEE\u6539</li><li>\u4F7F\u7528\u7684\u53C2\u6570\u8BF4\u660E</li><li>\u8FD4\u56DE\u503C\uFF0C\u800C\u4E0D\u662F\u4E0A\u4E00\u6761\u547D\u4EE4\u8FD0\u884C\u540E\u9ED8\u8BA4\u7684\u9000\u51FA\u72B6\u6001</li></ul><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#</span>
<span class="token comment"># Perform hot backups of Oracle databases.</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&#39;/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin&#39;</span>

<span class="token comment">#######################################</span>
<span class="token comment"># Cleanup files from the backup dir</span>
<span class="token comment"># Globals:</span>
<span class="token comment">#   BACKUP_DIR</span>
<span class="token comment">#   ORACLE_SID</span>
<span class="token comment"># Arguments:</span>
<span class="token comment">#   None</span>
<span class="token comment"># Returns:</span>
<span class="token comment">#   None</span>
<span class="token comment">#######################################</span>
<span class="token function-name function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">..</span>.
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_4-3-\u5B9E\u73B0\u90E8\u5206\u7684\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_4-3-\u5B9E\u73B0\u90E8\u5206\u7684\u6CE8\u91CA" aria-hidden="true">#</a> 4.3 \u5B9E\u73B0\u90E8\u5206\u7684\u6CE8\u91CA</h3><blockquote><p>\u6CE8\u91CA\u4F60\u4EE3\u7801\u4E2D\u542B\u6709\u6280\u5DE7\u3001\u4E0D\u660E\u663E\u3001\u6709\u8DA3\u7684\u6216\u8005\u91CD\u8981\u7684\u90E8\u5206\u3002</p></blockquote><p>\u8FD9\u90E8\u5206\u9075\u5FAA\u8C37\u6B4C\u4EE3\u7801\u6CE8\u91CA\u7684\u901A\u7528\u505A\u6CD5\u3002\u4E0D\u8981\u6CE8\u91CA\u6240\u6709\u4EE3\u7801\u3002\u5982\u679C\u6709\u4E00\u4E2A\u590D\u6742\u7684\u7B97\u6CD5\u6216\u8005\u4F60\u6B63\u5728\u505A\u4E00\u4E9B\u4E0E\u4F17\u4E0D\u540C\u7684\uFF0C\u653E\u4E00\u4E2A\u7B80\u5355\u7684\u6CE8\u91CA\u3002</p><h3 id="_4-4-todo\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_4-4-todo\u6CE8\u91CA" aria-hidden="true">#</a> 4.4 TODO\u6CE8\u91CA</h3><blockquote><p>\u4F7F\u7528TODO\u6CE8\u91CA\u4E34\u65F6\u7684\u3001\u77ED\u671F\u89E3\u51B3\u65B9\u6848\u7684\u3001\u6216\u8005\u8DB3\u591F\u597D\u4F46\u4E0D\u591F\u5B8C\u7F8E\u7684\u4EE3\u7801\u3002</p></blockquote><p>\u8FD9\u4E0EC++\u6307\u5357\u4E2D\u7684\u7EA6\u5B9A\u76F8\u4E00\u81F4\u3002</p><p>TODOs\u5E94\u8BE5\u5305\u542B\u5168\u90E8\u5927\u5199\u7684\u5B57\u7B26\u4E32TODO\uFF0C\u63A5\u7740\u662F\u62EC\u53F7\u4E2D\u4F60\u7684\u7528\u6237\u540D\u3002\u5192\u53F7\u662F\u53EF\u9009\u7684\u3002\u6700\u597D\u5728TODO\u6761\u76EE\u4E4B\u540E\u52A0\u4E0A bug\u6216\u8005ticket \u7684\u5E8F\u53F7\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># TODO(mrmonkey): Handle the unlikely edge cases (bug ####)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_5-\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_5-\u683C\u5F0F" aria-hidden="true">#</a> 5 \u683C\u5F0F</h2><h3 id="_5-1-\u7F29\u8FDB" tabindex="-1"><a class="header-anchor" href="#_5-1-\u7F29\u8FDB" aria-hidden="true">#</a> 5.1 \u7F29\u8FDB</h3><blockquote><p>\u7F29\u8FDB\u4E24\u4E2A\u7A7A\u683C\uFF0C\u6CA1\u6709\u5236\u8868\u7B26\u3002</p></blockquote><p>\u5728\u4EE3\u7801\u5757\u4E4B\u95F4\u8BF7\u4F7F\u7528\u7A7A\u884C\u4EE5\u63D0\u5347\u53EF\u8BFB\u6027\u3002\u7F29\u8FDB\u4E3A\u4E24\u4E2A\u7A7A\u683C\u3002\u65E0\u8BBA\u4F60\u505A\u4EC0\u4E48\uFF0C\u8BF7\u4E0D\u8981\u4F7F\u7528\u5236\u8868\u7B26\u3002\u5BF9\u4E8E\u5DF2\u6709\u6587\u4EF6\uFF0C\u4FDD\u6301\u5DF2\u6709\u7684\u7F29\u8FDB\u683C\u5F0F\u3002</p><h3 id="_5-2-\u884C\u7684\u957F\u5EA6\u548C\u957F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_5-2-\u884C\u7684\u957F\u5EA6\u548C\u957F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 5.2 \u884C\u7684\u957F\u5EA6\u548C\u957F\u5B57\u7B26\u4E32</h3><blockquote><p>\u884C\u7684\u6700\u5927\u957F\u5EA6\u4E3A80\u4E2A\u5B57\u7B26\u3002</p></blockquote><p>\u5982\u679C\u4F60\u5FC5\u987B\u5199\u957F\u5EA6\u8D85\u8FC780\u4E2A\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\uFF0C\u5982\u679C\u53EF\u80FD\u7684\u8BDD\uFF0C\u5C3D\u91CF\u4F7F\u7528here document\u6216\u8005\u5D4C\u5165\u7684\u6362\u884C\u7B26\u3002\u957F\u5EA6\u8D85\u8FC780\u4E2A\u5B57\u7B26\u7684\u6587\u5B57\u4E32\u4E14\u4E0D\u80FD\u88AB\u5408\u7406\u5730\u5206\u5272\uFF0C\u8FD9\u662F\u6B63\u5E38\u7684\u3002\u4F46\u5F3A\u70C8\u5EFA\u8BAE\u627E\u5230\u4E00\u4E2A\u65B9\u6CD5\u4F7F\u5176\u53D8\u77ED\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># DO use &#39;here document&#39;s</span>
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span>END<span class="token punctuation">;</span>
I am an exceptionally long
string.
END

<span class="token comment"># Embedded newlines are ok too</span>
<span class="token assign-left variable">long_string</span><span class="token operator">=</span><span class="token string">&quot;I am an exceptionally
  long string.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_5-3-\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_5-3-\u7BA1\u9053" aria-hidden="true">#</a> 5.3 \u7BA1\u9053</h3><blockquote><p>\u5982\u679C\u4E00\u884C\u5BB9\u4E0D\u4E0B\u6574\u4E2A\u7BA1\u9053\u64CD\u4F5C\uFF0C\u90A3\u4E48\u8BF7\u5C06\u6574\u4E2A\u7BA1\u9053\u64CD\u4F5C\u5206\u5272\u6210\u6BCF\u884C\u4E00\u4E2A\u7BA1\u6BB5\u3002</p></blockquote><p>\u5982\u679C\u4E00\u884C\u5BB9\u5F97\u4E0B\u6574\u4E2A\u7BA1\u9053\u64CD\u4F5C\uFF0C\u90A3\u4E48\u8BF7\u5C06\u6574\u4E2A\u7BA1\u9053\u64CD\u4F5C\u5199\u5728\u540C\u4E00\u884C\u3002</p><p>\u5426\u5219\uFF0C\u5E94\u8BE5\u5C06\u6574\u4E2A\u7BA1\u9053\u64CD\u4F5C\u5206\u5272\u6210\u6BCF\u884C\u4E00\u4E2A\u7BA1\u6BB5\uFF0C\u7BA1\u9053\u64CD\u4F5C\u7684\u4E0B\u4E00\u90E8\u5206\u5E94\u8BE5\u5C06\u7BA1\u9053\u7B26\u653E\u5728\u65B0\u884C\u5E76\u4E14\u7F29\u8FDB2\u4E2A\u7A7A\u683C\u3002\u8FD9\u9002\u7528\u4E8E\u4F7F\u7528\u7BA1\u9053\u7B26\u2019|\u2019\u7684\u5408\u5E76\u547D\u4EE4\u94FE\u4EE5\u53CA\u4F7F\u7528\u2019||\u2019\u548C\u2019&amp;&amp;\u2019\u7684\u903B\u8F91\u8FD0\u7B97\u94FE\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># All fits on one line</span>
command1 <span class="token operator">|</span> command2

<span class="token comment"># Long commands</span>
command1 <span class="token punctuation">\\</span>
  <span class="token operator">|</span> command2 <span class="token punctuation">\\</span>
  <span class="token operator">|</span> command3 <span class="token punctuation">\\</span>
  <span class="token operator">|</span> command4
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-4-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_5-4-\u5FAA\u73AF" aria-hidden="true">#</a> 5.4 \u5FAA\u73AF</h3><blockquote><p>\u8BF7\u5C06<code>; do</code> ,<code>; then</code>\u548C<code>while</code>,<code>for</code>,<code>if</code>\u653E\u5728\u540C\u4E00\u884C\u3002</p></blockquote><p>shell\u4E2D\u7684\u5FAA\u73AF\u7565\u6709\u4E0D\u540C\uFF0C\u4F46\u662F\u6211\u4EEC\u9075\u5FAA\u8DDF\u58F0\u660E\u51FD\u6570\u65F6\u7684\u5927\u62EC\u53F7\u76F8\u540C\u7684\u539F\u5219\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>; do</code>,<code>; then</code>\u5E94\u8BE5\u548C if/for/while \u653E\u5728\u540C\u4E00\u884C\u3002<code>else</code>\u5E94\u8BE5\u5355\u72EC\u4E00\u884C\uFF0C\u7ED3\u675F\u8BED\u53E5\u5E94\u8BE5\u5355\u72EC\u4E00\u884C\u5E76\u4E14\u8DDF\u5F00\u59CB\u8BED\u53E5\u5782\u76F4\u5BF9\u9F50\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> <span class="token variable">\${dir_to_cleanup}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -d <span class="token string">&quot;<span class="token variable">\${dir}</span>/<span class="token variable">\${ORACLE_SID}</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    log_date <span class="token string">&quot;Cleaning up old files in <span class="token variable">\${dir}</span>/<span class="token variable">\${ORACLE_SID}</span>&quot;</span>
	<span class="token function">rm</span> <span class="token string">&quot;<span class="token variable">\${dir}</span>/<span class="token variable">\${ORACLE_SID}</span>/&quot;</span>*
	<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$?</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	  error_message
	<span class="token keyword">fi</span>
  <span class="token keyword">else</span>
    <span class="token function">mkdir</span> -p <span class="token string">&quot;<span class="token variable">\${dir}</span>/<span class="token variable">\${ORACLE_SID}</span>&quot;</span>
	<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$?</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	  error_message
	<span class="token keyword">fi</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_5-5-case\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#_5-5-case\u8BED\u53E5" aria-hidden="true">#</a> 5.5 case\u8BED\u53E5</h3><blockquote><ul><li>\u901A\u8FC72\u4E2A\u7A7A\u683C\u7F29\u8FDB\u53EF\u9009\u9879\u3002</li></ul></blockquote><ul><li>\u5728\u540C\u4E00\u884C\u53EF\u9009\u9879\u7684\u6A21\u5F0F\u53F3\u5706\u62EC\u53F7\u4E4B\u540E\u548C\u7ED3\u675F\u7B26 <code>;;</code> \u4E4B\u524D\u5404\u9700\u8981\u4E00\u4E2A\u7A7A\u683C\u3002</li><li>\u957F\u53EF\u9009\u9879\u6216\u8005\u591A\u547D\u4EE4\u53EF\u9009\u9879\u5E94\u8BE5\u88AB\u62C6\u5206\u6210\u591A\u884C\uFF0C\u6A21\u5F0F\u3001\u64CD\u4F5C\u548C\u7ED3\u675F\u7B26 <code>;;</code> \u5728\u4E0D\u540C\u7684\u884C\u3002</li></ul><p>\u5339\u914D\u8868\u8FBE\u5F0F\u6BD4<code>case</code>\u548C<code>esac</code>\u7F29\u8FDB\u4E00\u7EA7\u3002\u591A\u884C\u64CD\u4F5C\u8981\u518D\u7F29\u8FDB\u4E00\u7EA7\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u4E0D\u9700\u8981\u5F15\u7528\u5339\u914D\u8868\u8FBE\u5F0F\u3002\u6A21\u5F0F\u8868\u8FBE\u5F0F\u524D\u9762\u4E0D\u5E94\u8BE5\u51FA\u73B0\u5DE6\u62EC\u53F7\u3002\u907F\u514D\u4F7F\u7528 ;&amp; \u548C ;;&amp; \u7B26\u53F7\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">\${expression}</span>&quot;</span> <span class="token keyword">in</span>
  a<span class="token punctuation">)</span>
    <span class="token assign-left variable">variable</span><span class="token operator">=</span><span class="token string">&quot;...&quot;</span>
	some_command <span class="token string">&quot;<span class="token variable">\${variable}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${other_expr}</span>&quot;</span> <span class="token punctuation">..</span>.
	<span class="token punctuation">;</span><span class="token punctuation">;</span>
  absolute<span class="token punctuation">)</span>
    <span class="token assign-left variable">actions</span><span class="token operator">=</span><span class="token string">&quot;relative&quot;</span>
	another_command <span class="token string">&quot;<span class="token variable">\${actions}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${other_expr}</span>&quot;</span> <span class="token punctuation">..</span>.
	<span class="token punctuation">;</span><span class="token punctuation">;</span>
  *<span class="token punctuation">)</span>
    error <span class="token string">&quot;Unexpected expression &#39;<span class="token variable">\${expression}</span>&quot;</span>
	<span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53EA\u8981\u6574\u4E2A\u8868\u8FBE\u5F0F\u53EF\u8BFB\uFF0C\u7B80\u5355\u7684\u547D\u4EE4\u53EF\u4EE5\u8DDF\u6A21\u5F0F\u548C<code>;;</code>\u5199\u5728\u540C\u4E00\u884C\u3002\u8FD9\u901A\u5E38\u9002\u7528\u4E8E\u5355\u5B57\u6BCD\u9009\u9879\u7684\u5904\u7406\u3002\u5F53\u5355\u884C\u5BB9\u4E0D\u4E0B\u64CD\u4F5C\u65F6\uFF0C\u8BF7\u5C06\u6A21\u5F0F\u5355\u72EC\u653E\u4E00\u884C\uFF0C\u7136\u540E\u662F\u64CD\u4F5C\uFF0C\u6700\u540E\u7ED3\u675F\u7B26<code>;;</code>\u4E5F\u5355\u72EC\u4E00\u884C\u3002\u5F53\u64CD\u4F5C\u5728\u540C\u4E00\u884C\u65F6\uFF0C\u6A21\u5F0F\u7684\u53F3\u62EC\u53F7\u4E4B\u540E\u548C\u7ED3\u675F\u7B26<code>;;</code>\u4E4B\u524D\u8BF7\u4F7F\u7528\u4E00\u4E2A\u7A7A\u683C\u5206\u9694\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">verbose</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span>
<span class="token assign-left variable">aflag</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span>
<span class="token assign-left variable">bflag</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span>
<span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span>
<span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&#39;abf:v&#39;</span> flag<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">\${flag}</span>&quot;</span> <span class="token keyword">in</span>
    a<span class="token punctuation">)</span> <span class="token assign-left variable">aflag</span><span class="token operator">=</span><span class="token string">&#39;true&#39;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
	b<span class="token punctuation">)</span> <span class="token assign-left variable">bflag</span><span class="token operator">=</span><span class="token string">&#39;true&#39;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
	f<span class="token punctuation">)</span> <span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${OPTARG}</span>&quot;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
	<span class="token function">v</span><span class="token punctuation">)</span> <span class="token assign-left variable">verbose</span><span class="token operator">=</span><span class="token string">&#39;true&#39;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
	*<span class="token punctuation">)</span> error <span class="token string">&quot;Unexpected option <span class="token variable">\${flag}</span>&quot;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
   <span class="token keyword">esac</span>
 <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_5-6-\u53D8\u91CF\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_5-6-\u53D8\u91CF\u6269\u5C55" aria-hidden="true">#</a> 5.6 \u53D8\u91CF\u6269\u5C55</h3><blockquote><p>\u6309\u4F18\u5148\u7EA7\u987A\u5E8F\uFF1A\u4FDD\u6301\u8DDF\u4F60\u6240\u53D1\u73B0\u7684\u4E00\u81F4\uFF1B\u5F15\u7528\u4F60\u7684\u53D8\u91CF\uFF1B\u63A8\u8350\u7528<code>\${var}</code>\u800C\u4E0D\u662F<code>$var</code>\uFF0C\u8BE6\u7EC6\u89E3\u91CA\u5982\u4E0B\u3002</p></blockquote><p>\u8FD9\u4E9B\u4EC5\u4EC5\u662F\u6307\u5357\uFF0C\u56E0\u4E3A\u4F5C\u4E3A\u5F3A\u5236\u89C4\u5B9A\u4F3C\u4E4E\u9971\u53D7\u4E89\u8BAE\u3002</p><p>\u4EE5\u4E0B\u6309\u7167\u4F18\u5148\u987A\u5E8F\u5217\u51FA\u3002</p><ol><li>\u4E0E\u73B0\u5B58\u4EE3\u7801\u4E2D\u4F60\u6240\u53D1\u73B0\u7684\u4FDD\u6301\u4E00\u81F4\u3002</li><li>\u5F15\u7528\u53D8\u91CF\u53C2\u9605\u4E0B\u9762\u4E00\u8282\uFF0C\u5F15\u7528\u3002</li><li>\u9664\u975E\u7EDD\u5BF9\u5FC5\u8981\u6216\u8005\u4E3A\u4E86\u907F\u514D\u6DF1\u6DF1\u7684\u56F0\u60D1\uFF0C\u5426\u5219\u4E0D\u8981\u7528\u5927\u62EC\u53F7\u5C06\u5355\u4E2A\u5B57\u7B26\u7684shell\u7279\u6B8A\u53D8\u91CF\u6216\u5B9A\u4F4D\u53D8\u91CF\u62EC\u8D77\u6765\u3002\u63A8\u8350\u5C06\u5176\u4ED6\u6240\u6709\u53D8\u91CF\u7528\u5927\u62EC\u53F7\u62EC\u8D77\u6765\u3002</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Section of recommended cases.</span>

<span class="token comment"># Preferred style for &#39;special&#39; variables:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Positional: <span class="token variable">$1</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$5</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$3</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Specials: !=<span class="token variable">$!</span>, -=$-, _=<span class="token variable">$_</span>. ?=<span class="token variable">$?</span>, #=<span class="token variable">$#</span> *=<span class="token variable">$*</span> @=<span class="token variable">$@</span> \\$=<span class="token variable">$$</span> ...&quot;</span>

<span class="token comment"># Braces necessary:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;many parameters: <span class="token variable">\${10}</span>&quot;</span>

<span class="token comment"># Braces avoiding confusion:</span>
<span class="token comment"># Output is &quot;a0b0c0&quot;</span>
<span class="token builtin class-name">set</span> -- a b c
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${1}</span>0<span class="token variable">\${2}</span>0<span class="token variable">\${3}</span>0&quot;</span>

<span class="token comment"># Preferred style for other variables:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;PATH=<span class="token variable">\${<span class="token environment constant">PATH</span>}</span>, PWD=<span class="token variable">\${<span class="token environment constant">PWD</span>}</span>, mine=<span class="token variable">\${some_var}</span>&quot;</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> f<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;file=<span class="token variable">\${f}</span>&quot;</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">ls</span> -l /tmp<span class="token punctuation">)</span>

<span class="token comment"># Section of discouraged cases</span>

<span class="token comment"># Unquoted vars, unbraced vars, brace-quoted single letter</span>
<span class="token comment"># shell specials.</span>
<span class="token builtin class-name">echo</span> <span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token variable">$avar</span> <span class="token string">&quot;b=<span class="token variable">$bvar</span>&quot;</span> <span class="token string">&quot;PID=<span class="token variable">\${$}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${1}</span>&quot;</span>

<span class="token comment"># Confusing use: this is expanded as &quot;\${1}0\${2}0\${3}0&quot;,</span>
<span class="token comment"># not &quot;\${10}\${20}\${30}</span>
<span class="token builtin class-name">set</span> -- a b c
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$10</span><span class="token variable">$20</span><span class="token variable">$30</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="_5-7-\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_5-7-\u5F15\u7528" aria-hidden="true">#</a> 5.7 \u5F15\u7528</h3><blockquote><ul><li>\u9664\u975E\u9700\u8981\u5C0F\u5FC3\u4E0D\u5E26\u5F15\u7528\u7684\u6269\u5C55\uFF0C\u5426\u5219\u603B\u662F\u5F15\u7528\u5305\u542B\u53D8\u91CF\u3001\u547D\u4EE4\u66FF\u6362\u7B26\u3001\u7A7A\u683C\u6216shell\u5143\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\u3002</li></ul></blockquote><ul><li>\u63A8\u8350\u5F15\u7528\u662F\u5355\u8BCD\u7684\u5B57\u7B26\u4E32\uFF08\u800C\u4E0D\u662F\u547D\u4EE4\u9009\u9879\u6216\u8005\u8DEF\u5F84\u540D\uFF09\u3002</li><li>\u5343\u4E07\u4E0D\u8981\u5F15\u7528\u6574\u6570\u3002</li><li>\u6CE8\u610F [[ \u4E2D\u6A21\u5F0F\u5339\u914D\u7684\u5F15\u7528\u89C4\u5219\u3002</li><li>\u8BF7\u4F7F\u7528 $@ \u9664\u975E\u4F60\u6709\u7279\u6B8A\u539F\u56E0\u9700\u8981\u4F7F\u7528 $* \u3002</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># &#39;Single&#39; quotes indicate that no substitution is desired.</span>
<span class="token comment"># &quot;Double&quot; quotes indicate that substitution is required/tolerated.</span>

<span class="token comment"># Simple examples</span>
<span class="token comment"># &quot;quote command substitutions&quot;</span>
<span class="token assign-left variable">flag</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>some_command and its args <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span> <span class="token string">&#39;quoted separately&#39;</span><span class="token variable">)</span></span>&quot;</span>

<span class="token comment"># &quot;quote variables&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${flag}</span>&quot;</span>

<span class="token comment"># &quot;never quote literal integers&quot;</span>
<span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token number">32</span>
<span class="token comment"># &quot;quote command substitutions&quot;, even when you expect integers</span>
<span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>generate_number<span class="token variable">)</span></span>&quot;</span>

<span class="token comment"># &quot;prefer quoting words&quot;, not compulsory</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">USE_INTEGER</span><span class="token operator">=</span><span class="token string">&#39;true&#39;</span>

<span class="token comment"># &quot;quote shell meta characters&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;Hello stranger, and well met. Earn lots of $$$&#39;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Process <span class="token variable">$$</span>: Done making \\$\\$\\$.&quot;</span>

<span class="token comment"># &quot;command options or path names&quot;</span>
<span class="token comment"># ($1 is assumed to contain a value here)</span>
<span class="token function">grep</span> -li Hugo /dev/null <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>

<span class="token comment"># Less simple examples</span>
<span class="token comment"># &quot;quote variables, unless proven false&quot;: ccs might be empty</span>
<span class="token function">git</span> send-email --to <span class="token string">&quot;<span class="token variable">\${reviewers}</span>&quot;</span> <span class="token variable">\${ccs<span class="token operator">:+</span>&quot;--cc&quot; &quot;\${ccs}</span>&quot;<span class="token punctuation">}</span>

<span class="token comment"># Positional parameter precautions: $1 might be unset</span>
<span class="token comment"># Single quotes leave regex as-is.</span>
<span class="token function">grep</span> -cP <span class="token string">&#39;([Ss]pecial|\\|?characters*)$&#39;</span> <span class="token variable">\${1<span class="token operator">:+</span>&quot;$1&quot;}</span>

<span class="token comment"># For passing on arguments,</span>
<span class="token comment"># &quot;$@&quot; is right almost everytime, and</span>
<span class="token comment"># $* is wrong almost everytime:</span>
<span class="token comment">#</span>
<span class="token comment"># * $* and $@ will split on spaces, clobbering up arguments</span>
<span class="token comment">#   that contain spaces and dropping empty strings;</span>
<span class="token comment"># * &quot;$@&quot; will retain arguments as-is, so no args</span>
<span class="token comment">#   provided will result in no args being passed on;</span>
<span class="token comment">#   This is in most cases what you want to use for passing</span>
<span class="token comment">#   on arguments.</span>
<span class="token comment"># * &quot;$*&quot; expands to one argument, with all args joined</span>
<span class="token comment">#   by (usually) spaces,</span>
<span class="token comment">#   so no args provided will result in one empty string</span>
<span class="token comment">#   being passed on.</span>
<span class="token comment"># (Consult &#39;man bash&#39; for the nit-grits ;-)</span>

<span class="token builtin class-name">set</span> -- <span class="token number">1</span> <span class="token string">&quot;2 two&quot;</span> <span class="token string">&quot;3 three tres&quot;</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$#</span> <span class="token punctuation">;</span> <span class="token builtin class-name">set</span> -- <span class="token string">&quot;<span class="token variable">$*</span>&quot;</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$#</span>, <span class="token variable">$@</span>&quot;</span><span class="token punctuation">)</span>
<span class="token builtin class-name">set</span> -- <span class="token number">1</span> <span class="token string">&quot;2 two&quot;</span> <span class="token string">&quot;3 three tres&quot;</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$#</span> <span class="token punctuation">;</span> <span class="token builtin class-name">set</span> -- <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$#</span>, <span class="token variable">$@</span>&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="_6-\u7279\u6027\u53CA\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#_6-\u7279\u6027\u53CA\u9519\u8BEF" aria-hidden="true">#</a> 6 \u7279\u6027\u53CA\u9519\u8BEF</h2><h3 id="_6-1-\u547D\u4EE4\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#_6-1-\u547D\u4EE4\u66FF\u6362" aria-hidden="true">#</a> 6.1 \u547D\u4EE4\u66FF\u6362</h3><blockquote><p>\u4F7F\u7528 <code>$(command)</code> \u800C\u4E0D\u662F\u53CD\u5F15\u53F7\u3002</p></blockquote><p>\u5D4C\u5957\u7684\u53CD\u5F15\u53F7\u8981\u6C42\u7528\u53CD\u659C\u6760\u8F6C\u4E49\u5185\u90E8\u7684\u53CD\u5F15\u53F7\u3002\u800C <code>$(command)</code> \u5F62\u5F0F\u5D4C\u5957\u65F6\u4E0D\u9700\u8981\u6539\u53D8\uFF0C\u800C\u4E14\u66F4\u6613\u4E8E\u9605\u8BFB\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># This is preferred:</span>
<span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;$(command &quot;<span class="token variable"><span class="token variable">$(</span>command1<span class="token variable">)</span></span>&quot;</span><span class="token punctuation">)</span><span class="token string">&quot;

# This is not:
var=&quot;</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">command</span> <span class="token punctuation">\\</span><span class="token variable">\`</span></span>command1<span class="token punctuation">\\</span>\`\`&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-2-test-\u548C" tabindex="-1"><a class="header-anchor" href="#_6-2-test-\u548C" aria-hidden="true">#</a> 6.2 test, [\u548C[[</h3><blockquote><p>\u63A8\u8350\u4F7F\u7528 <code>[[ ... ]]</code> \uFF0C\u800C\u4E0D\u662F <code>[</code> , <code>test</code> , \u548C <code>/usr/bin/ [</code> \u3002</p></blockquote><p>\u56E0\u4E3A\u5728<code>[[</code>\u548C<code>]]</code>\u4E4B\u95F4\u4E0D\u4F1A\u6709\u8DEF\u5F84\u540D\u79F0\u6269\u5C55\u6216\u5355\u8BCD\u5206\u5272\u53D1\u751F\uFF0C\u6240\u4EE5\u4F7F\u7528<code>[[ ... ]]</code>\u80FD\u591F\u51CF\u5C11\u9519\u8BEF\u3002\u800C\u4E14<code>[[ ... ]]</code>\u5141\u8BB8\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\uFF0C\u800C<code>[ ... ]</code>\u4E0D\u5141\u8BB8\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># This ensures the string on the left is made up of characters in the</span>
<span class="token comment"># alnum character class followed by the string name.</span>
<span class="token comment"># Note that the RHS should not be quoted here.</span>
<span class="token comment"># For the gory details, see</span>
<span class="token comment"># E14 at http://tiswww.case.edu/php/chet/bash/FAQ</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;filename&quot;</span> <span class="token operator">=~</span> ^<span class="token punctuation">[</span><span class="token punctuation">[</span>:alnum:<span class="token punctuation">]</span><span class="token punctuation">]</span>+name <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Match&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># This matches the exact pattern &quot;f*&quot; (Does not match in this case)</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;filename&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;f*&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Match&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># This gives a &quot;too many arguments&quot; error as f* is expanded to the</span>
<span class="token comment"># contents of the current directory</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;filename&quot;</span> <span class="token operator">==</span> f* <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Match&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_6-3-\u6D4B\u8BD5\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_6-3-\u6D4B\u8BD5\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 6.3 \u6D4B\u8BD5\u5B57\u7B26\u4E32</h3><blockquote><p>\u5C3D\u53EF\u80FD\u4F7F\u7528\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u8FC7\u6EE4\u5B57\u7B26\u4E32\u3002</p></blockquote><p>Bash\u8DB3\u4EE5\u5728\u6D4B\u8BD5\u4E2D\u5904\u7406\u7A7A\u5B57\u7B26\u4E32\u3002\u6240\u4EE5\uFF0C\u8BF7\u4F7F\u7528\u7A7A\uFF08\u975E\u7A7A\uFF09\u5B57\u7B26\u4E32\u6D4B\u8BD5\uFF0C\u800C\u4E0D\u662F\u8FC7\u6EE4\u5B57\u7B26\uFF0C\u4F7F\u5F97\u4EE3\u7801\u66F4\u6613\u4E8E\u9605\u8BFB\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Do this:</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${my_var}</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;some_string&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>

<span class="token comment"># -z (string length is zero) and -n (string length is not zero) are</span>
<span class="token comment"># preferred over testing for an empty string</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token string">&quot;<span class="token variable">\${my_var}</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>

<span class="token comment"># This is OK (ensure quotes on the empty side), but not preferred:</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${my_var}</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>

<span class="token comment"># Not this:</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${my_var}</span>X&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;some_stringX&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4E3A\u4E86\u907F\u514D\u5BF9\u4F60\u6D4B\u8BD5\u7684\u76EE\u7684\u4EA7\u751F\u56F0\u60D1\uFF0C\u8BF7\u660E\u786E\u4F7F\u7528<code>-z</code>\u6216\u8005<code>-n</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Use this</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">\${my_var}</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>

<span class="token comment"># Instead of this as errors can occur if \${my_var} expands to a test</span>
<span class="token comment"># flag</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${my_var}</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_6-4-\u6587\u4EF6\u540D\u7684\u901A\u914D\u7B26\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_6-4-\u6587\u4EF6\u540D\u7684\u901A\u914D\u7B26\u6269\u5C55" aria-hidden="true">#</a> 6.4 \u6587\u4EF6\u540D\u7684\u901A\u914D\u7B26\u6269\u5C55</h3><blockquote><p>\u5F53\u8FDB\u884C\u6587\u4EF6\u540D\u7684\u901A\u914D\u7B26\u6269\u5C55\u65F6\uFF0C\u8BF7\u4F7F\u7528\u660E\u786E\u7684\u8DEF\u5F84\u3002</p></blockquote><p>\u4E3A\u6587\u4EF6\u540D\u53EF\u80FD\u4EE5 <code>-</code> \u5F00\u5934\uFF0C\u6240\u4EE5\u4F7F\u7528\u6269\u5C55\u901A\u914D\u7B26 <code>./*</code> \u6BD4<code>*</code> \u6765\u5F97\u5B89\u5168\u5F97\u591A\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Here&#39;s the contents of the directory:</span>
<span class="token comment"># -f  -r  somedir  somefile</span>

<span class="token comment"># This deletes almost everything in the directory by force</span>
psa@bilby$ <span class="token function">rm</span> -v *
removed directory: <span class="token variable"><span class="token variable">\`</span>somedir&#39;
removed <span class="token variable">\`</span></span>somefile<span class="token string">&#39;

# As opposed to:
psa@bilby$ rm -v ./*
removed \`./-f&#39;</span>
removed <span class="token variable"><span class="token variable">\`</span>./-r&#39;
rm: cannot remove <span class="token variable">\`</span></span>./somedir<span class="token string">&#39;: Is a directory
removed \`./somefile&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_6-5-eval" tabindex="-1"><a class="header-anchor" href="#_6-5-eval" aria-hidden="true">#</a> 6.5 Eval</h3><blockquote><p>\u5E94\u8BE5\u907F\u514D\u4F7F\u7528eval\u3002</p></blockquote><p>\u5F53\u7528\u4E8E\u7ED9\u53D8\u91CF\u8D4B\u503C\u65F6\uFF0CEval\u89E3\u6790\u8F93\u5165\uFF0C\u5E76\u4E14\u80FD\u591F\u8BBE\u7F6E\u53D8\u91CF\uFF0C\u4F46\u65E0\u6CD5\u68C0\u67E5\u8FD9\u4E9B\u53D8\u91CF\u662F\u4EC0\u4E48\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># What does this set?</span>
<span class="token comment"># Did it succeed? In part or whole?</span>
<span class="token builtin class-name">eval</span> <span class="token variable"><span class="token variable">$(</span>set_my_variables<span class="token variable">)</span></span>

<span class="token comment"># What happens if one of the returned values has a space in it?</span>
<span class="token assign-left variable">variable</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">eval</span> some_function<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_6-6-\u7BA1\u9053\u5BFC\u5411while\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_6-6-\u7BA1\u9053\u5BFC\u5411while\u5FAA\u73AF" aria-hidden="true">#</a> 6.6 \u7BA1\u9053\u5BFC\u5411while\u5FAA\u73AF</h3><blockquote><p>\u8BF7\u4F7F\u7528\u8FC7\u7A0B\u66FF\u6362\u6216\u8005for\u5FAA\u73AF\uFF0C\u800C\u4E0D\u662F\u7BA1\u9053\u5BFC\u5411while\u5FAA\u73AF\u3002\u5728while\u5FAA\u73AF\u4E2D\u88AB\u4FEE\u6539\u7684\u53D8\u91CF\u662F\u4E0D\u80FD\u4F20\u9012\u7ED9\u7236shell\u7684\uFF0C\u56E0\u4E3A\u5FAA\u73AF\u547D\u4EE4\u662F\u5728\u4E00\u4E2A\u5B50shell\u4E2D\u8FD0\u884C\u7684\u3002</p></blockquote><p>\u7BA1\u9053\u5BFC\u5411while\u5FAA\u73AF\u4E2D\u7684\u9690\u5F0F\u5B50shell\u4F7F\u5F97\u8FFD\u8E2Abug\u53D8\u5F97\u5F88\u56F0\u96BE\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">last_line</span><span class="token operator">=</span><span class="token string">&#39;NULL&#39;</span>
your_command <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">last_line</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${line}</span>&quot;</span>
<span class="token keyword">done</span>

<span class="token comment"># This will output &#39;NULL&#39;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${last_line}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u4F60\u786E\u5B9A\u8F93\u5165\u4E2D\u4E0D\u5305\u542B\u7A7A\u683C\u6216\u8005\u7279\u6B8A\u7B26\u53F7\uFF08\u901A\u5E38\u610F\u5473\u7740\u4E0D\u662F\u7528\u6237\u8F93\u5165\u7684\uFF09\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2Afor\u5FAA\u73AF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token comment"># Only do this if there are no spaces in return values.</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">value</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">command</span><span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">total</span><span class="token operator">+=</span><span class="token string">&quot;<span class="token variable">\${value}</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4F7F\u7528\u8FC7\u7A0B\u66FF\u6362\u5141\u8BB8\u91CD\u5B9A\u5411\u8F93\u51FA\uFF0C\u4F46\u662F\u8BF7\u5C06\u547D\u4EE4\u653E\u5165\u4E00\u4E2A\u663E\u5F0F\u7684\u5B50shell\u4E2D\uFF0C\u800C\u4E0D\u662Fbash\u4E3Awhile\u5FAA\u73AF\u521B\u5EFA\u7684\u9690\u5F0F\u5B50shell\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">last_file</span><span class="token operator">=</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> count filename<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">total</span><span class="token operator">+=</span><span class="token string">&quot;<span class="token variable">\${count}</span>&quot;</span>
  <span class="token assign-left variable">last_file</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${filename}</span>&quot;</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>your_command <span class="token operator">|</span> <span class="token function">uniq</span> -c<span class="token punctuation">)</span>

<span class="token comment"># This will output the second field of the last line of output from</span>
<span class="token comment"># the command.</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Total = <span class="token variable">\${total}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Last one = <span class="token variable">\${last_file}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5F53\u4E0D\u9700\u8981\u4F20\u9012\u590D\u6742\u7684\u7ED3\u679C\u7ED9\u7236shell\u65F6\u53EF\u4EE5\u4F7F\u7528while\u5FAA\u73AF\u3002\u8FD9\u901A\u5E38\u9700\u8981\u4E00\u4E9B\u66F4\u590D\u6742\u7684\u201C\u89E3\u6790\u201D\u3002\u8BF7\u6CE8\u610F\u7B80\u5355\u7684\u4F8B\u5B50\u4F7F\u7528\u5982awk\u8FD9\u7C7B\u5DE5\u5177\u53EF\u80FD\u66F4\u5BB9\u6613\u5B8C\u6210\u3002\u5F53\u4F60\u7279\u522B\u4E0D\u5E0C\u671B\u6539\u53D8\u7236shell\u7684\u8303\u56F4\u53D8\u91CF\u65F6\u8FD9\u53EF\u80FD\u4E5F\u662F\u6709\u7528\u7684\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Trivial implementation of awk expression:</span>
<span class="token comment">#   awk &#39;$3 == &quot;nfs&quot; { print $2 &quot; maps to &quot; $1 }&#39; /proc/mounts</span>
<span class="token function">cat</span> /proc/mounts <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> src dest <span class="token builtin class-name">type</span> opts rest<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">\${type}</span> <span class="token operator">==</span> <span class="token string">&quot;nfs&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;NFS <span class="token variable">\${dest}</span> maps to <span class="token variable">\${src}</span>&quot;</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_7-\u547D\u540D\u7EA6\u5B9A" tabindex="-1"><a class="header-anchor" href="#_7-\u547D\u540D\u7EA6\u5B9A" aria-hidden="true">#</a> 7 \u547D\u540D\u7EA6\u5B9A</h2><h3 id="_7-1-\u51FD\u6570\u540D" tabindex="-1"><a class="header-anchor" href="#_7-1-\u51FD\u6570\u540D" aria-hidden="true">#</a> 7.1 \u51FD\u6570\u540D</h3><blockquote><p>\u4F7F\u7528\u5C0F\u5199\u5B57\u6BCD\uFF0C\u5E76\u7528\u4E0B\u5212\u7EBF\u5206\u9694\u5355\u8BCD\u3002\u4F7F\u7528\u53CC\u5192\u53F7<code>::</code>\u5206\u9694\u5E93\u3002\u51FD\u6570\u540D\u4E4B\u540E\u5FC5\u987B\u6709\u5706\u62EC\u53F7\u3002\u5173\u952E\u8BCD<code>function</code>\u662F\u53EF\u9009\u7684\uFF0C\u4F46\u5FC5\u987B\u5728\u4E00\u4E2A\u9879\u76EE\u4E2D\u4FDD\u6301\u4E00\u81F4\u3002</p></blockquote><p>\u5982\u679C\u4F60\u6B63\u5728\u5199\u5355\u4E2A\u51FD\u6570\uFF0C\u8BF7\u7528\u5C0F\u5199\u5B57\u6BCD\u6765\u547D\u540D\uFF0C\u5E76\u7528\u4E0B\u5212\u7EBF\u5206\u9694\u5355\u8BCD\u3002\u5982\u679C\u4F60\u6B63\u5728\u5199\u4E00\u4E2A\u5305\uFF0C\u4F7F\u7528\u53CC\u5192\u53F7<code>::</code>\u6765\u5206\u9694\u5305\u540D\u3002\u5927\u62EC\u53F7\u5FC5\u987B\u548C\u51FD\u6570\u540D\u4F4D\u4E8E\u540C\u4E00\u884C\uFF08\u5C31\u50CF\u5728Google\u7684\u5176\u4ED6\u8BED\u8A00\u4E00\u6837\uFF09\uFF0C\u5E76\u4E14\u51FD\u6570\u540D\u548C\u5706\u62EC\u53F7\u4E4B\u95F4\u6CA1\u6709\u7A7A\u683C\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Single function</span>
<span class="token function-name function">my_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">..</span>.
<span class="token punctuation">}</span>

<span class="token comment"># Part of a package</span>
mypackage::<span class="token function-name function">my_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">..</span>.
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5F53\u51FD\u6570\u540D\u540E\u5B58\u5728 () \u65F6\uFF0C\u5173\u952E\u8BCD function \u662F\u591A\u4F59\u7684\u3002\u4F46\u662F\u5176\u4FC3\u8FDB\u4E86\u51FD\u6570\u7684\u5FEB\u901F\u8FA8\u8BC6\u3002</p><h3 id="_7-2-\u53D8\u91CF\u540D" tabindex="-1"><a class="header-anchor" href="#_7-2-\u53D8\u91CF\u540D" aria-hidden="true">#</a> 7.2 \u53D8\u91CF\u540D</h3><blockquote><p>\u5982\u51FD\u6570\u540D</p></blockquote><p>\u5FAA\u73AF\u7684\u53D8\u91CF\u540D\u5E94\u8BE5\u548C\u5FAA\u73AF\u7684\u4EFB\u4F55\u53D8\u91CF\u540C\u6837\u547D\u540D\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">zone</span> <span class="token keyword">in</span> <span class="token variable">\${zones}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  something_with <span class="token string">&quot;<span class="token variable">\${zone}</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_7-3-\u5E38\u91CF\u548C\u73AF\u5883\u53D8\u91CF\u540D" tabindex="-1"><a class="header-anchor" href="#_7-3-\u5E38\u91CF\u548C\u73AF\u5883\u53D8\u91CF\u540D" aria-hidden="true">#</a> 7.3 \u5E38\u91CF\u548C\u73AF\u5883\u53D8\u91CF\u540D</h3><blockquote><p>\u5168\u90E8\u5927\u5199\uFF0C\u7528\u4E0B\u5212\u7EBF\u5206\u9694\uFF0C\u58F0\u660E\u5728\u6587\u4EF6\u7684\u9876\u90E8\u3002</p></blockquote><p>\u5E38\u91CF\u548C\u4EFB\u4F55\u5BFC\u51FA\u5230\u73AF\u5883\u4E2D\u7684\u90FD\u5E94\u8BE5\u5927\u5199\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Constant</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">PATH_TO_FILES</span><span class="token operator">=</span><span class="token string">&#39;/some/path&#39;</span>

<span class="token comment"># Both constant and environment</span>
<span class="token builtin class-name">declare</span> -xr <span class="token assign-left variable">ORACLE_SID</span><span class="token operator">=</span><span class="token string">&#39;PROD&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7B2C\u4E00\u6B21\u8BBE\u7F6E\u65F6\u6709\u4E00\u4E9B\u5C31\u53D8\u6210\u4E86\u5E38\u91CF\uFF08\u4F8B\u5982\uFF0C\u901A\u8FC7getopts\uFF09\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u5728getopts\u4E2D\u6216\u57FA\u4E8E\u6761\u4EF6\u6765\u8BBE\u5B9A\u5E38\u91CF\uFF0C\u4F46\u4E4B\u540E\u5E94\u8BE5\u7ACB\u5373\u8BBE\u7F6E\u5176\u4E3A\u53EA\u8BFB\u3002\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C\u5728\u51FD\u6570\u4E2D<code>declare</code>\u4E0D\u4F1A\u5BF9\u5168\u5C40\u53D8\u91CF\u8FDB\u884C\u64CD\u4F5C\u3002\u6240\u4EE5\u63A8\u8350\u4F7F\u7528<code>readonly</code>\u548C<code>export</code>\u6765\u4EE3\u66FF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">VERBOSE</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span>
<span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&#39;v&#39;</span> flag<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">\${flag}</span>&quot;</span> <span class="token keyword">in</span>
    <span class="token function">v</span><span class="token punctuation">)</span> <span class="token assign-left variable">VERBOSE</span><span class="token operator">=</span><span class="token string">&#39;true&#39;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token keyword">esac</span>
<span class="token keyword">done</span>
<span class="token builtin class-name">readonly</span> VERBOSE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_7-4-\u6E90\u6587\u4EF6\u540D" tabindex="-1"><a class="header-anchor" href="#_7-4-\u6E90\u6587\u4EF6\u540D" aria-hidden="true">#</a> 7.4 \u6E90\u6587\u4EF6\u540D</h3><blockquote><p>\u5C0F\u5199\uFF0C\u5982\u679C\u9700\u8981\u7684\u8BDD\u4F7F\u7528\u4E0B\u5212\u7EBF\u5206\u9694\u5355\u8BCD\u3002</p></blockquote><p>\u8FD9\u662F\u4E3A\u4E86\u548C\u5728Google\u4E2D\u7684\u5176\u4ED6\u4EE3\u7801\u98CE\u683C\u4FDD\u6301\u4E00\u81F4\uFF1A<code>maketemplate</code>\u6216\u8005<code>make_template</code>\uFF0C\u800C\u4E0D\u662F<code>make-template</code>\u3002</p><h3 id="_7-5-\u53EA\u8BFB\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_7-5-\u53EA\u8BFB\u53D8\u91CF" aria-hidden="true">#</a> 7.5 \u53EA\u8BFB\u53D8\u91CF</h3><blockquote><p>\u4F7F\u7528 readonly \u6216\u8005 declare -r \u6765\u786E\u4FDD\u53D8\u91CF\u53EA\u8BFB\u3002</p></blockquote><p>\u56E0\u4E3A\u5168\u5C40\u53D8\u91CF\u5728shell\u4E2D\u5E7F\u6CDB\u4F7F\u7528\uFF0C\u6240\u4EE5\u5728\u4F7F\u7528\u5B83\u4EEC\u7684\u8FC7\u7A0B\u4E2D\u6355\u83B7\u9519\u8BEF\u662F\u5F88\u91CD\u8981\u7684\u3002\u5F53\u4F60\u58F0\u660E\u4E86\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5E0C\u671B\u5176\u53EA\u8BFB\uFF0C\u90A3\u4E48\u8BF7\u660E\u786E\u6307\u51FA\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">zip_version</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>dpkg --status <span class="token function">zip</span> <span class="token operator">|</span> <span class="token function">grep</span> Version: <span class="token operator">|</span> <span class="token function">cut</span> -d <span class="token string">&#39; &#39;</span> -f <span class="token number">2</span><span class="token variable">)</span></span>&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token string">&quot;<span class="token variable">\${zip_version}</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  error_message
<span class="token keyword">else</span>
  <span class="token builtin class-name">readonly</span> zip_version
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_7-6-\u4F7F\u7528\u672C\u5730\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_7-6-\u4F7F\u7528\u672C\u5730\u53D8\u91CF" aria-hidden="true">#</a> 7.6 \u4F7F\u7528\u672C\u5730\u53D8\u91CF</h3><blockquote><p>\u4F7F\u7528<code>local</code>\u58F0\u660E\u7279\u5B9A\u529F\u80FD\u7684\u53D8\u91CF\u3002\u58F0\u660E\u548C\u8D4B\u503C\u5E94\u8BE5\u5728\u4E0D\u540C\u884C\u3002</p></blockquote><p>\u4F7F\u7528<code>local</code>\u6765\u58F0\u660E\u5C40\u90E8\u53D8\u91CF\u4EE5\u786E\u4FDD\u5176\u53EA\u5728\u51FD\u6570\u5185\u90E8\u548C\u5B50\u51FD\u6570\u4E2D\u53EF\u89C1\u3002\u8FD9\u907F\u514D\u4E86\u6C61\u67D3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u548C\u4E0D\u7ECF\u610F\u95F4\u8BBE\u7F6E\u53EF\u80FD\u5177\u6709\u51FD\u6570\u4E4B\u5916\u91CD\u8981\u6027\u7684\u53D8\u91CF\u3002</p><p>\u5F53\u8D4B\u503C\u7684\u503C\u7531\u547D\u4EE4\u66FF\u6362\u63D0\u4F9B\u65F6\uFF0C\u58F0\u660E\u548C\u8D4B\u503C\u5FC5\u987B\u5206\u5F00\u3002\u56E0\u4E3A\u5185\u5EFA\u7684<code>local</code>\u4E0D\u4F1A\u4ECE\u547D\u4EE4\u66FF\u6362\u4E2D\u4F20\u9012\u9000\u51FA\u7801\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function-name function">my_func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$1</span>&quot;</span>

  <span class="token comment"># Separate lines for declaration and assignment:</span>
  <span class="token builtin class-name">local</span> my_var
  <span class="token assign-left variable">my_var</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>my_func<span class="token variable">)</span></span>&quot;</span> <span class="token operator">||</span> <span class="token builtin class-name">return</span>

  <span class="token comment"># DO NOT do this: $? contains the exit code of &#39;local&#39;, not my_func</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">my_var</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>my_func<span class="token variable">)</span></span>&quot;</span>
  <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">return</span>

  <span class="token punctuation">..</span>.
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_7-7-\u51FD\u6570\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_7-7-\u51FD\u6570\u4F4D\u7F6E" aria-hidden="true">#</a> 7.7 \u51FD\u6570\u4F4D\u7F6E</h3><blockquote><p>\u5C06\u6587\u4EF6\u4E2D\u6240\u6709\u7684\u51FD\u6570\u4E00\u8D77\u653E\u5728\u5E38\u91CF\u4E0B\u9762\u3002\u4E0D\u8981\u5728\u51FD\u6570\u4E4B\u95F4\u9690\u85CF\u53EF\u6267\u884C\u4EE3\u7801\u3002</p></blockquote><p>\u5982\u679C\u4F60\u6709\u51FD\u6570\uFF0C\u8BF7\u5C06\u4ED6\u4EEC\u4E00\u8D77\u653E\u5728\u6587\u4EF6\u5934\u90E8\u3002\u53EA\u6709includes\uFF0C<code>set</code>\u58F0\u660E\u548C\u5E38\u91CF\u8BBE\u7F6E\u53EF\u80FD\u5728\u51FD\u6570\u58F0\u660E\u4E4B\u524D\u5B8C\u6210\u3002\u4E0D\u8981\u5728\u51FD\u6570\u4E4B\u95F4\u9690\u85CF\u53EF\u6267\u884C\u4EE3\u7801\u3002\u5982\u679C\u90A3\u6837\u505A\uFF0C\u4F1A\u4F7F\u5F97\u4EE3\u7801\u5728\u8C03\u8BD5\u65F6\u96BE\u4EE5\u8DDF\u8E2A\u5E76\u51FA\u73B0\u610F\u60F3\u4E0D\u5230\u7684\u8BA8\u538C\u7ED3\u679C\u3002</p><h3 id="_7-8-\u4E3B\u51FD\u6570main" tabindex="-1"><a class="header-anchor" href="#_7-8-\u4E3B\u51FD\u6570main" aria-hidden="true">#</a> 7.8 \u4E3B\u51FD\u6570main</h3><blockquote><p>\u5BF9\u4E8E\u5305\u542B\u81F3\u5C11\u4E00\u4E2A\u5176\u4ED6\u51FD\u6570\u7684\u8DB3\u591F\u957F\u7684\u811A\u672C\uFF0C\u9700\u8981\u79F0\u4E3A<code>main</code>\u7684\u51FD\u6570\u3002</p></blockquote><p>\u4E3A\u4E86\u65B9\u4FBF\u67E5\u627E\u7A0B\u5E8F\u7684\u5F00\u59CB\uFF0C\u5C06\u4E3B\u7A0B\u5E8F\u653E\u5165\u4E00\u4E2A\u79F0\u4E3A<code>main</code>\u7684\u51FD\u6570\uFF0C\u4F5C\u4E3A\u6700\u4E0B\u9762\u7684\u51FD\u6570\u3002\u8FD9\u4F7F\u5176\u548C\u4EE3\u7801\u5E93\u7684\u5176\u4F59\u90E8\u5206\u4FDD\u6301\u4E00\u81F4\u6027\uFF0C\u540C\u65F6\u5141\u8BB8\u4F60\u5B9A\u4E49\u66F4\u591A\u53D8\u91CF\u4E3A\u5C40\u90E8\u53D8\u91CF\uFF08\u5982\u679C\u4E3B\u4EE3\u7801\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\u5C31\u4E0D\u80FD\u8FD9\u4E48\u505A\uFF09\u3002\u6587\u4EF6\u4E2D\u6700\u540E\u7684\u975E\u6CE8\u91CA\u884C\u5E94\u8BE5\u662F\u5BF9<code>main</code>\u51FD\u6570\u7684\u8C03\u7528\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>main <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u663E\u7136\uFF0C\u5BF9\u4E8E\u4EC5\u4EC5\u662F\u7EBF\u6027\u6D41\u7684\u77ED\u811A\u672C\uFF0C <code>main</code> \u662F\u77EB\u6789\u8FC7\u6B63\uFF0C\u56E0\u6B64\u662F\u4E0D\u9700\u8981\u7684\u3002</p><h2 id="_8-\u8C03\u7528\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#_8-\u8C03\u7528\u547D\u4EE4" aria-hidden="true">#</a> 8 \u8C03\u7528\u547D\u4EE4</h2><h3 id="_8-1-\u68C0\u67E5\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_8-1-\u68C0\u67E5\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 8.1 \u68C0\u67E5\u8FD4\u56DE\u503C</h3><blockquote><p>\u603B\u662F\u68C0\u67E5\u8FD4\u56DE\u503C\uFF0C\u5E76\u7ED9\u51FA\u4FE1\u606F\u8FD4\u56DE\u503C\u3002</p></blockquote><p>\u5BF9\u4E8E\u975E\u7BA1\u9053\u547D\u4EE4\uFF0C\u4F7F\u7528 <code>$?</code> \u6216\u76F4\u63A5\u901A\u8FC7\u4E00\u4E2A <code>if</code> \u8BED\u53E5\u6765\u68C0\u67E5\u4EE5\u4FDD\u6301\u5176\u7B80\u6D01\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">mv</span> <span class="token string">&quot;<span class="token variable">\${file_list}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${dest_dir}</span>/&quot;</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Unable to move <span class="token variable">\${file_list}</span> to <span class="token variable">\${dest_dir}</span>&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
  <span class="token builtin class-name">exit</span> <span class="token string">&quot;<span class="token variable">\${E_BAD_MOVE}</span>&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># Or</span>
<span class="token function">mv</span> <span class="token string">&quot;<span class="token variable">\${file_list}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${dest_dir}</span>/&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$?</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Unable to move <span class="token variable">\${file_list}</span> to <span class="token variable">\${dest_dir}</span>&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
  <span class="token builtin class-name">exit</span> <span class="token string">&quot;<span class="token variable">\${E_BAD_MOVE}</span>&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Bash\u4E5F\u6709<code>PIPESTATUS</code>\u53D8\u91CF\uFF0C\u5141\u8BB8\u68C0\u67E5\u4ECE\u7BA1\u9053\u6240\u6709\u90E8\u5206\u8FD4\u56DE\u7684\u4EE3\u7801\u3002\u5982\u679C\u4EC5\u4EC5\u9700\u8981\u68C0\u67E5\u6574\u4E2A\u7BA1\u9053\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF0C\u4EE5\u4E0B\u7684\u65B9\u6CD5\u662F\u53EF\u4EE5\u63A5\u53D7\u7684\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">tar</span> -cf - ./* <span class="token operator">|</span> <span class="token punctuation">(</span> <span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable">\${dir}</span>&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> -xf - <span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${<span class="token environment constant">PIPESTATUS</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span>}</span>&quot;</span> -ne <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">&quot;<span class="token variable">\${<span class="token environment constant">PIPESTATUS</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>}</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Unable to tar files to <span class="token variable">\${dir}</span>&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u53EF\u662F\uFF0C\u53EA\u8981\u4F60\u8FD0\u884C\u4EFB\u4F55\u5176\u4ED6\u547D\u4EE4\uFF0C<code>PIPESTATUS</code>\u5C06\u4F1A\u88AB\u8986\u76D6\u3002\u5982\u679C\u4F60\u9700\u8981\u57FA\u4E8E\u7BA1\u9053\u4E2D\u53D1\u751F\u7684\u9519\u8BEF\u6267\u884C\u4E0D\u540C\u7684\u64CD\u4F5C\uFF0C\u90A3\u4E48\u4F60\u9700\u8981\u5728\u8FD0\u884C\u547D\u4EE4\u540E\u7ACB\u5373\u5C06<code>PIPESTATUS</code>\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u53D8\u91CF\uFF08\u522B\u5FD8\u4E86 <code>[</code> \u662F\u4E00\u4E2A\u4F1A\u5C06<code>PIPESTATUS</code>\u64E6\u9664\u7684\u547D\u4EE4\uFF09\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">tar</span> -cf - ./* <span class="token operator">|</span> <span class="token punctuation">(</span> <span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable">\${DIR}</span>&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> -xf - <span class="token punctuation">)</span>
<span class="token assign-left variable">return_codes</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">\${<span class="token environment constant">PIPESTATUS</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span>}</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${return_codes<span class="token punctuation">[</span>0<span class="token punctuation">]</span>}</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something
<span class="token keyword">fi</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${return_codes<span class="token punctuation">[</span>1<span class="token punctuation">]</span>}</span>&quot;</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  do_something_else
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_8-2-\u5185\u5EFA\u547D\u4EE4\u548C\u5916\u90E8\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#_8-2-\u5185\u5EFA\u547D\u4EE4\u548C\u5916\u90E8\u547D\u4EE4" aria-hidden="true">#</a> 8.2 \u5185\u5EFA\u547D\u4EE4\u548C\u5916\u90E8\u547D\u4EE4</h3><blockquote><p>\u53EF\u4EE5\u5728\u8C03\u7528shell\u5185\u5EFA\u547D\u4EE4\u548C\u8C03\u7528\u53E6\u5916\u7684\u7A0B\u5E8F\u4E4B\u95F4\u9009\u62E9\uFF0C\u8BF7\u9009\u62E9\u5185\u5EFA\u547D\u4EE4\u3002</p></blockquote><p>\u6211\u4EEC\u66F4\u559C\u6B22\u4F7F\u7528\u5185\u5EFA\u547D\u4EE4\uFF0C\u5982\u5728 <code>bash(1)</code> \u4E2D\u53C2\u6570\u6269\u5C55\u51FD\u6570\u3002\u56E0\u4E3A\u5B83\u66F4\u5F3A\u5065\u548C\u4FBF\u643A\uFF08\u5C24\u5176\u662F\u8DDF\u50CF <code>sed</code> \u8FD9\u6837\u7684\u547D\u4EE4\u6BD4\u8F83\uFF09</p><p>\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Prefer this:</span>
<span class="token assign-left variable">addition</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>\${X} <span class="token operator">+</span> \${Y}<span class="token variable">))</span></span>
<span class="token assign-left variable">substitution</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${string<span class="token operator">/</span><span class="token operator">#</span>foo<span class="token operator">/</span>bar}</span>&quot;</span>

<span class="token comment"># Instead of this:</span>
<span class="token assign-left variable">addition</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">expr</span> $<span class="token punctuation">{</span>X<span class="token punctuation">}</span> + $<span class="token punctuation">{</span>Y<span class="token punctuation">}</span><span class="token variable">)</span></span>&quot;</span>
<span class="token assign-left variable">substitution</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${string}</span>&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">&#39;s/^foo/bar/&#39;</span><span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,168);function p(t,l){return e}var c=s(a,[["render",p],["__file","part6.html.vue"]]);export{c as default};

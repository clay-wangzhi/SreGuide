import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,a as e}from"./app-811ce446.js";const p={},r=e(`<h1 id="性能压测指标及方法" tabindex="-1"><a class="header-anchor" href="#性能压测指标及方法" aria-hidden="true">#</a> 性能压测指标及方法</h1><h2 id="一、基础性能测试" tabindex="-1"><a class="header-anchor" href="#一、基础性能测试" aria-hidden="true">#</a> 一、基础性能测试</h2><h3 id="cpu-性能" tabindex="-1"><a class="header-anchor" href="#cpu-性能" aria-hidden="true">#</a> CPU 性能</h3><h4 id="super-pi" tabindex="-1"><a class="header-anchor" href="#super-pi" aria-hidden="true">#</a> Super_Pi</h4><p>在计算性能测试中，我们使用linux下的bc计算器程序通过反正切函数计算5000位圆周率的cpu耗时来对主机进行测试。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装 bc</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">bc</span>
<span class="token comment"># 单核计算性能测试</span>
<span class="token function">time</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=5000; 4*a(1)&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-q</span> <span class="token operator">&amp;&gt;</span><span class="token number">1</span>
<span class="token comment"># 多核计算性能测试</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">seq</span> <span class="token number">1</span> <span class="token number">2</span><span class="token variable">\`</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>time <span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=5000; 4*a(1)&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-q</span> <span class="token operator">&amp;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token keyword">done</span> <span class="token punctuation">;</span> <span class="token function">wait</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">seq</span> <span class="token number">1</span> <span class="token number">4</span><span class="token variable">\`</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>time <span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=5000; 4*a(1)&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-q</span> <span class="token operator">&amp;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token keyword">done</span> <span class="token punctuation">;</span> <span class="token function">wait</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="cpu调度延时" tabindex="-1"><a class="header-anchor" href="#cpu调度延时" aria-hidden="true">#</a> CPU调度延时</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/rgushchin/schbench.git
<span class="token function">make</span>
./schbench <span class="token parameter variable">-t</span> <span class="token number">4</span> <span class="token parameter variable">-m</span> <span class="token number">1</span>
<span class="token comment"># -t 线程数</span>
<span class="token comment"># -m 每个线程产生的信息数</span>
 
注意： CPU调度延迟一般情况下，是负载的关键指标，本次压测需要KVM，TXY空负载。当资源还没有在使用时，容器正常申请对应配置压测即可。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sysbench-素数计算" tabindex="-1"><a class="header-anchor" href="#sysbench-素数计算" aria-hidden="true">#</a> sysbench 素数计算</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 单线程素数运算，最大素数10000，计算10000 events结束为止</span>
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--events</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">0</span> cpu run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内存性能" tabindex="-1"><a class="header-anchor" href="#内存性能" aria-hidden="true">#</a> 内存性能</h3><h4 id="内存带宽-stream" tabindex="-1"><a class="header-anchor" href="#内存带宽-stream" aria-hidden="true">#</a> 内存带宽(stream)</h4><p>Stream测试是内存测试中业界公认的内存带宽性能测试基准工具</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc gcc-gfortran
<span class="token function">git</span> clone https://github.com/jeffhammond/STREAM.git
<span class="token builtin class-name">cd</span> STREAM/
<span class="token function">make</span>
<span class="token comment"># 指定线程数</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">OMP_NUM_THREADS</span><span class="token operator">=</span><span class="token number">1</span>
./stream_c.exe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="内存时延-mlc" tabindex="-1"><a class="header-anchor" href="#内存时延-mlc" aria-hidden="true">#</a> 内存时延(mlc)</h4><p>官网下载：https://www.intel.com/content/www/us/en/developer/articles/tool/intelr-memory-latency-checker.html#inpage-nav-9</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> mlc
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> mlc_v3.9a.tgz <span class="token parameter variable">-C</span> mlc
<span class="token builtin class-name">cd</span> mlc/Linux/
./mlc <span class="token parameter variable">--latency_matrix</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sysbench-连续读写或者随机读写操作" tabindex="-1"><a class="header-anchor" href="#sysbench-连续读写或者随机读写操作" aria-hidden="true">#</a> sysbench 连续读写或者随机读写操作</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 写操作</span>
<span class="token comment">## 线程数=4  内存块大小=8K 传输数据总量=100G 内存操作=写 内存访问模式=顺序访问</span>
sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-oper<span class="token operator">=</span>write --memory-access-mode<span class="token operator">=</span>seq run
<span class="token comment">## 线程数=4  内存块大小=8K 传输数据总量=100G 内存操作=写 内存访问模式=随机访问</span>
sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-oper<span class="token operator">=</span>write --memory-access-mode<span class="token operator">=</span>rnd run
  
<span class="token comment"># 读操作</span>
<span class="token comment">## 线程数=4  内存块大小=8K 传输数据总量=100G 内存操作=读 内存访问模式=顺序访问</span>
sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-oper<span class="token operator">=</span>read --memory-access-mode<span class="token operator">=</span>seq run
<span class="token comment">## 线程数=4  内存块大小=8K 传输数据总量=100G 内存操作=读 内存访问模式=随机访问</span>
sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-oper<span class="token operator">=</span>read --memory-access-mode<span class="token operator">=</span>rnd run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="磁盘-i-o-性能" tabindex="-1"><a class="header-anchor" href="#磁盘-i-o-性能" aria-hidden="true">#</a> 磁盘 I/O 性能</h3><blockquote><p>⚠️ 测试时请准备裸的数据盘，测试完成后请重新格式化磁盘</p></blockquote><h4 id="磁盘读、写iops" tabindex="-1"><a class="header-anchor" href="#磁盘读、写iops" aria-hidden="true">#</a> 磁盘读、写iops</h4><p>iops：磁盘的每秒读写次数，这个是随机读写考察的重点</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> fio
<span class="token comment"># filename 为数据盘名称,注意修改，测试硬盘性能时，建议直接测试裸数据盘，不要使用系统盘或带有业务数据的数据盘，可得造成磁盘损坏</span>
<span class="token comment"># 随机读</span>
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randread <span class="token parameter variable">--filename</span><span class="token operator">=</span>/dev/sda <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
<span class="token comment"># 随机写 IOPS</span>
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randwrite <span class="token parameter variable">--filename</span><span class="token operator">=</span>/dev/sda <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="磁盘读、写带宽" tabindex="-1"><a class="header-anchor" href="#磁盘读、写带宽" aria-hidden="true">#</a> 磁盘读、写带宽</h4><p>bw：磁盘的吞吐量，这个是顺序读写考察的重点</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 顺序读</span>
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>read <span class="token parameter variable">--filename</span><span class="token operator">=</span>/dev/sda <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
<span class="token comment"># 顺序写</span>
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>write <span class="token parameter variable">--filename</span><span class="token operator">=</span>/dev/sda <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="存储性能——磁盘时延" tabindex="-1"><a class="header-anchor" href="#存储性能——磁盘时延" aria-hidden="true">#</a> 存储性能——磁盘时延</h4><p>依据上面结果看 clat</p><h3 id="文件-i-o-性能" tabindex="-1"><a class="header-anchor" href="#文件-i-o-性能" aria-hidden="true">#</a> 文件 I/O 性能</h3><blockquote><p>sysbench 压文件不准，建议还是用 fio 压文件，filename 指定文件即可</p></blockquote><h4 id="fio-方式" tabindex="-1"><a class="header-anchor" href="#fio-方式" aria-hidden="true">#</a> fio 方式</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randread <span class="token parameter variable">--filename</span><span class="token operator">=</span>/home/a.txt <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randwrite <span class="token parameter variable">--filename</span><span class="token operator">=</span>/home/b.txt <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>read <span class="token parameter variable">--filename</span><span class="token operator">=</span>/home/c.txt <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
fio <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--thread</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>write <span class="token parameter variable">--filename</span><span class="token operator">=</span>/home/d.txt <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>randread-dep1 <span class="token parameter variable">--size</span><span class="token operator">=</span>1g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sysbench-文件随机读写速度、顺序读写吞吐率" tabindex="-1"><a class="header-anchor" href="#sysbench-文件随机读写速度、顺序读写吞吐率" aria-hidden="true">#</a> sysbench 文件随机读写速度、顺序读写吞吐率</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 线程数=4 每隔4s输出一次结果 测试时间=60s</span>
<span class="token comment"># 文件数=2 文件总大小=4G 文件操作模式=随机读写</span>
<span class="token comment"># 块大小 16384</span>
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>rndrw prepare
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>rndrw run
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>rndrw cleanup
<span class="token comment"># 顺序写</span>
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqwr prepare
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqwr run
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqwr cleanup
<span class="token comment"># 顺序读</span>
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqrd prepare
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqrd run
sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">4</span> --report-interval<span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">60</span> <span class="token parameter variable">--test</span><span class="token operator">=</span>fileio --file-num<span class="token operator">=</span><span class="token number">2</span> --file-total-size<span class="token operator">=</span>4G --file-test-mode<span class="token operator">=</span>seqrd cleanup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dd-顺序写" tabindex="-1"><a class="header-anchor" href="#dd-顺序写" aria-hidden="true">#</a> dd 顺序写</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>benchtest_<span class="token variable">$$</span> <span class="token assign-left variable">bs</span><span class="token operator">=</span>512k <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">2048</span> <span class="token assign-left variable">conv</span><span class="token operator">=</span>fdatasync <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> benchtest_<span class="token variable">$$</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="网络性能" tabindex="-1"><a class="header-anchor" href="#网络性能" aria-hidden="true">#</a> 网络性能</h3><h4 id="传输速率-pps" tabindex="-1"><a class="header-anchor" href="#传输速率-pps" aria-hidden="true">#</a> 传输速率(pps)</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># server端：</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> sysstat
 
netserver <span class="token parameter variable">-p</span> <span class="token number">12345</span><span class="token punctuation">(</span>启动<span class="token punctuation">)</span>
 
sar <span class="token parameter variable">-n</span> DEV <span class="token number">1</span>
 
<span class="token comment">#client端</span>
<span class="token function">wget</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;https://codeload.github.com/HewlettPackard/netperf/tar.gz/netperf-2.5.0&quot;</span> <span class="token parameter variable">-O</span> netperf-2.5.0.tar.gz
<span class="token function">tar</span> zxvf netperf-2.5.0.tar.gz
<span class="token builtin class-name">cd</span> netperf-netperf-2.5.0
yum <span class="token function">install</span> gcc cc <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> ./configure <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
netperf <span class="token parameter variable">-H</span> <span class="token variable">$server_ip</span> <span class="token parameter variable">-p</span> <span class="token variable">$port</span> <span class="token parameter variable">-t</span> UDP_STREAM <span class="token parameter variable">-l</span> <span class="token number">300</span> -- <span class="token parameter variable">-m</span> <span class="token number">1</span> <span class="token parameter variable">-R</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="网络带宽" tabindex="-1"><a class="header-anchor" href="#网络带宽" aria-hidden="true">#</a> 网络带宽</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># server端：</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> sysstat
 
netserver <span class="token parameter variable">-p</span> <span class="token number">12345</span><span class="token punctuation">(</span>启动<span class="token punctuation">)</span>
 
sar <span class="token parameter variable">-n</span> DEV <span class="token number">1</span>
 
<span class="token comment">#client端</span>
<span class="token function">wget</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;https://codeload.github.com/HewlettPackard/netperf/tar.gz/netperf-2.5.0&quot;</span> <span class="token parameter variable">-O</span> netperf-2.5.0.tar.gz
<span class="token function">tar</span> zxvf netperf-2.5.0.tar.gz
<span class="token builtin class-name">cd</span> netperf-netperf-2.5.0
yum <span class="token function">install</span> gcc cc <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> ./configure <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
netperf <span class="token parameter variable">-t</span> TCP_STREAM <span class="token parameter variable">-H</span> <span class="token variable">$server_ip</span> <span class="token parameter variable">-p</span> <span class="token variable">$port</span> <span class="token parameter variable">-l</span> 60s -- <span class="token parameter variable">-m</span> 32k <span class="token string">&quot;MAX_LATENCY,MEAN_LATENCY,P90_LATENCY,P99_LATENCY,P999_LATENCY,P9999_LATENCY,STDDEV_LATENCY,THROUGHPUT,THROUGHPUT_UNITS&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="单向时延" tabindex="-1"><a class="header-anchor" href="#单向时延" aria-hidden="true">#</a> 单向时延</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>服务端：
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> sockperf
sockperf sr <span class="token parameter variable">--daemonize</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
 
客户端：
sockperf under-load <span class="token parameter variable">-i</span> serverip  <span class="token parameter variable">--mps</span><span class="token operator">=</span><span class="token number">100000</span> <span class="token parameter variable">-t</span> <span class="token number">300</span> <span class="token parameter variable">-m</span> <span class="token number">14</span> --reply-every<span class="token operator">=</span><span class="token number">50</span> --full-log<span class="token operator">=</span>sockperf.out
 
<span class="token comment"># mps: 每秒多少请求   -t 测试时间 -m 每个请求大小(默认14byte)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ping时延" tabindex="-1"><a class="header-anchor" href="#ping时延" aria-hidden="true">#</a> ping时延</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">30</span> 同网段其他主机
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、应用性能测试" tabindex="-1"><a class="header-anchor" href="#二、应用性能测试" aria-hidden="true">#</a> 二、应用性能测试</h2><h3 id="_1、nginx" tabindex="-1"><a class="header-anchor" href="#_1、nginx" aria-hidden="true">#</a> 1、Nginx</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>wrk:
<span class="token function">git</span> clone https://github.com/wg/wrk.git
<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
 
<span class="token comment">## his runs a benchmark for 30 seconds, using 12 threads, and keeping 400 HTTP connections open</span>
wrk <span class="token parameter variable">-t12</span> <span class="token parameter variable">-c400</span> <span class="token parameter variable">-d30s</span> http://127.0.0.1:8080/index.html
 
<span class="token comment">#默认长连接，短链接：-H “Connection:Close”</span>
 
ab:
ab <span class="token parameter variable">-c</span> <span class="token number">400</span> <span class="token parameter variable">-n</span> <span class="token number">1000000</span>
 
推荐ab测试
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、mysql" tabindex="-1"><a class="header-anchor" href="#_2、mysql" aria-hidden="true">#</a> 2、MySQL</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>安装
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mariadb-server
create database pressure
grant all on pressure.* to <span class="token string">&#39;pressure&#39;</span>@<span class="token string">&#39;127.0.0.1&#39;</span> identified by <span class="token string">&#39;pressure&#39;</span><span class="token punctuation">;</span>
 
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> sysbench
造数据：
sysbench --db-driver<span class="token operator">=</span>mysql <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">300</span> <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">10</span> --report-interval<span class="token operator">=</span><span class="token number">1</span> --mysql-host<span class="token operator">=</span><span class="token number">127.0</span>.0.1 --mysql-port<span class="token operator">=</span><span class="token number">3306</span> --mysql-user<span class="token operator">=</span>pressure --mysql-password<span class="token operator">=</span>pressure --mysql-db<span class="token operator">=</span>pressure <span class="token parameter variable">--tables</span><span class="token operator">=</span><span class="token number">20</span> <span class="token parameter variable">--table_size</span><span class="token operator">=</span><span class="token number">1000000</span> oltp_read_write --db-ps-mode<span class="token operator">=</span>disable prepare
 
常规压测（包含读写）
sysbench --db-driver<span class="token operator">=</span>mysql <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">300</span> <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">10</span> --report-interval<span class="token operator">=</span><span class="token number">1</span> --mysql-host<span class="token operator">=</span><span class="token number">127.0</span>.0.1 --mysql-port<span class="token operator">=</span><span class="token number">3306</span> --mysql-user<span class="token operator">=</span>pressure --mysql-password<span class="token operator">=</span>pressure --mysql-db<span class="token operator">=</span>pressure <span class="token parameter variable">--tables</span><span class="token operator">=</span><span class="token number">20</span> <span class="token parameter variable">--table_size</span><span class="token operator">=</span><span class="token number">1000000</span> oltp_read_write --db-ps-mode<span class="token operator">=</span>disable run
 
 
 
 
<span class="token comment"># 基于mysql的驱动去连接mysql数据库，如果是oracle、SQLserver就是用对应的数据库驱动</span>
--db-driver<span class="token operator">=</span>mysql
<span class="token comment"># 连续访问300秒</span>
<span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">300</span>
<span class="token comment"># 10个线程模拟并发访问</span>
<span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">10</span>
<span class="token comment"># 每隔1秒输出一下压测情况</span>
--report-interval<span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># 数据库所在机器的IP地址</span>
--mysql-host<span class="token operator">=</span><span class="token number">127.0</span>.0.1
<span class="token comment"># 端口号：3306</span>
--mysql-port<span class="token operator">=</span><span class="token number">3306</span>
<span class="token comment"># 用户名</span>
--mysql-user<span class="token operator">=</span>test_user
<span class="token comment"># 密码</span>
--mysql-password<span class="token operator">=</span><span class="token number">12345678</span>
<span class="token comment"># 压测数据库</span>
--mysql-db<span class="token operator">=</span>test_db
<span class="token comment"># 模拟构造20个测试表</span>
<span class="token parameter variable">--tables</span><span class="token operator">=</span><span class="token number">20</span>
<span class="token comment"># 每个表构造100万条测试数据，测试表的名字会是类似于sbtest1，sbtest2这样</span>
<span class="token parameter variable">--table_size</span><span class="token operator">=</span><span class="token number">1000000</span> 
<span class="token comment"># 执行oltp数据库的读写测试</span>
oltp_read_write
<span class="token comment"># 禁止ps模式</span>
--db-ps-mode<span class="token operator">=</span>disable
<span class="token comment"># 参照这个命令的设置去构造出来我们需要的数据库里的数据</span>
<span class="token comment"># 自动创建20个测试表，每个表里创建100万条测试数据</span>
prepare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考：https://blog.csdn.net/aiyowei1106/article/details/117359969</p><h3 id="_3、redis" tabindex="-1"><a class="header-anchor" href="#_3、redis" aria-hidden="true">#</a> 3、Redis</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> redis
<span class="token function">service</span> redis start
 
压测：
redis-benchmark <span class="token parameter variable">-t</span> set,get <span class="token parameter variable">-n</span> <span class="token number">1000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、压测脚本" tabindex="-1"><a class="header-anchor" href="#三、压测脚本" aria-hidden="true">#</a> 三、压测脚本</h2><p>压测需要大量采样，并实时观察</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/clay-wangzhi/bench.git
<span class="token function">bash</span> bench.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,57),t=[r];function l(o,i){return s(),n("div",null,t)}const d=a(p,[["render",l],["__file","sysbench.html.vue"]]);export{d as default};

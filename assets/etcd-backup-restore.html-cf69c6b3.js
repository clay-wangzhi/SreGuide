import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as p,a as s,b as i,d as l,e as c}from"./app-0d7f3073.js";const r={},o=c(`<h1 id="etcd-备份恢复" tabindex="-1"><a class="header-anchor" href="#etcd-备份恢复" aria-hidden="true">#</a> Etcd 备份恢复</h1><h2 id="etcd-备份" tabindex="-1"><a class="header-anchor" href="#etcd-备份" aria-hidden="true">#</a> Etcd 备份</h2><ol><li><p>创建备份脚本<code>/opt/etcd_backup.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env bash</span>
<span class="token comment">#</span>
<span class="token comment"># Etcd backup</span>
 
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
 
<span class="token assign-left variable">ETCD_CA_CERT</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/ca.crt&quot;</span>
<span class="token assign-left variable">ETCD_CERT</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/server.crt&quot;</span>
<span class="token assign-left variable">ETCD_KEY</span><span class="token operator">=</span><span class="token string">&quot;/etc/kubernetes/pki/etcd/server.key&quot;</span>
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span><span class="token string">&quot;/var/lib/docker/etcd_backup&quot;</span>
<span class="token assign-left variable">DT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d.%H%M%S<span class="token variable">)</span></span>
 
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">\${BACKUP_DIR}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">\${BACKUP_DIR}</span>
<span class="token function">find</span> <span class="token variable">\${BACKUP_DIR}</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.db&quot;</span> <span class="token parameter variable">-mtime</span> +7 <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
 
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl <span class="token parameter variable">--endpoints</span><span class="token operator">=</span>https://127.0.0.1:2379 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--cacert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${ETCD_CA_CERT}</span>&quot;</span> <span class="token parameter variable">--cert</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${ETCD_CERT}</span>&quot;</span> <span class="token parameter variable">--key</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${ETCD_KEY}</span>&quot;</span> <span class="token punctuation">\\</span>
  snapshot save <span class="token string">&quot;<span class="token variable">\${BACKUP_DIR}</span>/etcd-snapshot-<span class="token variable">\${DT}</span>.db&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Etcd backup success, backup file: <span class="token variable">\${BACKUP_DIR}</span>/etcd-snapshot-<span class="token variable">\${DT}</span>.db, \\
  file size: <span class="token variable"><span class="token variable">$(</span><span class="token function">du</span> <span class="token parameter variable">-sh</span> $<span class="token punctuation">{</span>BACKUP_DIR<span class="token punctuation">}</span>/etcd-snapshot-$<span class="token punctuation">{</span>DT<span class="token punctuation">}</span>.db <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">)</span></span>&quot;</span>
<span class="token builtin class-name">echo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>添加cron定时任务 <code>crontab -e</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">0</span> */1 * * * /bin/bash /opt/etcd_backup.sh <span class="token operator">&gt;&gt;</span>/opt/log-backup-etcd.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="etcd-恢复" tabindex="-1"><a class="header-anchor" href="#etcd-恢复" aria-hidden="true">#</a> Etcd 恢复</h2><ol><li><p>创建备份目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /opt/k8s_manifests_backup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>停止所有 Master 上 kube-apiserver 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /etc/kubernetes/manifests/kube-apiserver.yaml /opt/k8s_manifests_backup/
<span class="token comment"># 检查服务是否已停止</span>
kubectl get pod <span class="token parameter variable">-n</span> kube-system <span class="token operator">|</span> <span class="token function">grep</span> kube-apiserver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>停止集群中所有 etcd 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 记录 etcd --name、--initial-advertise-peer-urls、--data-dir 值</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> etcd
<span class="token comment"># 停止服务</span>
<span class="token function">mv</span> /etc/kubernetes/manifests/etcd.yaml /opt/k8s_manifests_backup/
<span class="token comment"># 检查服务是否已停止</span>
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> etcd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>移除所有 etcd 存储目录下数据，不同环境下，存储目录可能不一样，线上存储目录为 <code>/data/etcd</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /data/etcd<span class="token punctuation">{</span>,.bak<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>拷贝要恢复的快照到所有 etcd 节点，进行快照恢复 所有 etcd 节点操作，不同节点，传入不同的 <code>--name、--initial-advertise-peer-urls、--data-dir</code>值</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl snapshot restore /tmp/xxx.db <span class="token punctuation">\\</span>
  <span class="token parameter variable">--name</span> st-kubernetes-master-2 <span class="token punctuation">\\</span>
  --initial-cluster <span class="token string">&quot;st-kubernetes-master-3=https://10.100.142.165:2380,st-kubernetes-master-1=https://10.100.142.163:2380,st-kubernetes-master-2=https://10.100.142.164:2380&quot;</span> <span class="token punctuation">\\</span>
  --initial-cluster-token k8s_etcd <span class="token punctuation">\\</span>
  --initial-advertise-peer-urls https://10.100.142.164:2380 <span class="token punctuation">\\</span>
  --data-dir<span class="token operator">=</span>/data/etcd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动集群中所有 etcd</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /opt/k8s_manifests_backup/etcd.yaml /etc/kubernetes/manifests/
<span class="token comment"># 检查集群状态</span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl  <span class="token parameter variable">--cacert</span><span class="token operator">=</span>/etc/kubernetes/pki/etcd/ca.crt <span class="token punctuation">\\</span>
  <span class="token parameter variable">--cert</span><span class="token operator">=</span>/etc/kubernetes/pki/etcd/server.crt <span class="token punctuation">\\</span>
  <span class="token parameter variable">--key</span><span class="token operator">=</span>/etc/kubernetes/pki/etcd/server.key <span class="token punctuation">\\</span>
  <span class="token parameter variable">--endpoints</span><span class="token operator">=</span>https://10.100.142.163:2379,https://10.100.142.164:2379,https://10.100.142.165:2379 <span class="token punctuation">\\</span>
  endpoint health
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动所有 Master 上 kube-apiserver 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /opt/k8s_manifests_backup/kube-apiserver.yaml /etc/kubernetes/manifests/
<span class="token comment"># 检查服务状态</span>
kubectl get pod <span class="token parameter variable">-n</span> kube-system <span class="token operator">|</span> <span class="token function">grep</span> kube-apiserver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>检查是否如期恢复</p></li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Kubernetes 集群备份主要是备份etcd集群。而恢复时，主要考虑恢复整个顺序：</p><p>停止Kube-apiserver–&gt; 停止etcd–&gt; 恢复数据–&gt;启动etcd–&gt;启动kube-apiserver</p><blockquote><p>注意：备份etcd集群时，只需要备份一个etcd就行，恢复时，拿同一份备份数据恢复。</p></blockquote><p>参考：</p>`,10),d={href:"https://kubesphere.com.cn/forum/d/3532-etcdkubernetes",target:"_blank",rel:"noopener noreferrer"};function u(k,v){const a=e("ExternalLinkIcon");return t(),p("div",null,[o,s("ul",null,[s("li",null,[s("a",d,[i("Etcd备份数据如何做到完美恢复Kubernetes中误删数据呢"),l(a)])])])])}const h=n(r,[["render",u],["__file","etcd-backup-restore.html.vue"]]);export{h as default};

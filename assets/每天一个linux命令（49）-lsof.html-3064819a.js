import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as a,c as r,f as o,a as e,b as i,d as n,e as s}from"./app-f15250d3.js";const c={},u=e("p",null,"lsof（list open files）是一个列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。",-1),p=s(`<h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><p><code>lsof(选项)</code></p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-a：列出打开文件存在的进程；
-c&lt;进程名&gt;：列出指定进程所打开的文件；
-g：列出GID号进程详情；
-d&lt;文件号&gt;：列出占用该文件号的进程；
+d&lt;目录&gt;：列出目录下被打开的文件；
+D&lt;目录&gt;：递归列出目录下被打开的文件；
-n&lt;目录&gt;：列出使用NFS的文件；
-i&lt;条件&gt;：列出符合条件的进程。（4、6、协议、:端口、 @ip ）
-p&lt;进程号&gt;：列出指定进程号所打开的文件；
-u：列出UID号进程详情；
-h：显示帮助信息；
-v：显示版本信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令功能" tabindex="-1"><a class="header-anchor" href="#命令功能" aria-hidden="true">#</a> 命令功能</h2><p>用于查看你进程开打的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回/恢复删除的文件。是十分方便的系统监视工具，因为 lsof 需要访问核心内存和各种文件，所以需要root用户执行。</p><p>lsof打开的文件可以是：</p><p>1.普通文件</p><p>2.目录</p><p>3.网络文件系统的文件</p><p>4.字符或设备文件</p><p>5.(函数)共享库</p><p>6.管道，命名管道</p><p>7.符号链接</p><p>8.网络文件（例如：NFS file、网络socket，unix域名socket）</p><p>9.还有其它类型的文件，等等</p><h2 id="常用实例" tabindex="-1"><a class="header-anchor" href="#常用实例" aria-hidden="true">#</a> 常用实例</h2><p>1）无任何参数</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof
command     PID USER   FD      type             DEVICE     SIZE       NODE NAME
init          1 root  cwd       DIR                8,2     4096          2 /
init          1 root  rtd       DIR                8,2     4096          2 /
init          1 root  txt       REG                8,2    43496    6121706 /sbin/init
init          1 root  mem       REG                8,2   143600    7823908 /lib64/ld-2.5.so
init          1 root  mem       REG                8,2  1722304    7823915 /lib64/libc-2.5.so
init          1 root  mem       REG                8,2    23360    7823919 /lib64/libdl-2.5.so
init          1 root  mem       REG                8,2    95464    7824116 /lib64/libselinux.so.1
init          1 root  mem       REG                8,2   247496    7823947 /lib64/libsepol.so.1
init          1 root   10u     FIFO               0,17                1233 /dev/initctl
migration     2 root  cwd       DIR                8,2     4096          2 /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p><strong>lsof输出各列信息的意义如下：</strong></p><ul><li>COMMAND：进程的名称</li><li>PID：进程标识符</li><li>PPID：父进程标识符（需要指定-R参数）</li><li>USER：进程所有者</li><li>PGID：进程所属组</li><li>FD：文件描述符，应用程序通过文件描述符识别该文件。</li></ul><p>文件描述符列表：</p>`,23),v=e("li",null,"cwd：表示current work dirctory，即：应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改",-1),m=e("li",null,"txt：该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序",-1),b=e("li",null,"lnn：library references (AIX);",-1),x=e("li",null,"er：FD information error (see NAME column);",-1),g=e("li",null,"jld：jail directory (FreeBSD);",-1),h=e("li",null,"ltx：shared library text (code and data);",-1),_=e("li",null,"mxx ：hex memory-mapped type number xx.",-1),f={href:"http://man.linuxde.net/file",target:"_blank",rel:"noopener noreferrer"},E=e("li",null,"mem：memory-mapped file;",-1),D=e("li",null,"mmap：memory-mapped device;",-1),I=e("li",null,"pd：parent directory;",-1),k=e("li",null,"rtd：root directory;",-1),N={href:"http://man.linuxde.net/tr",target:"_blank",rel:"noopener noreferrer"},R=e("li",null,"v86 VP/ix mapped file;",-1),w=e("li",null,"0：表示标准输出",-1),S=e("li",null,"1：表示标准输入",-1),y=e("li",null,"2：表示标准错误",-1),O=e("p",null,"一般在标准输出、标准错误、标准输入后还跟着文件状态模式：",-1),P=e("li",null,"u：表示该文件被打开并处于读取/写入模式。",-1),C=e("li",null,"r：表示该文件被打开并处于只读模式。",-1),F={href:"http://man.linuxde.net/w",target:"_blank",rel:"noopener noreferrer"},M=e("li",null,"空格：表示该文件的状态模式为unknow，且没有锁定。",-1),G=e("li",null,"-：表示该文件的状态模式为unknow，且被锁定。",-1),A=e("p",null,"同时在文件状态模式后面，还跟着相关的锁：",-1),V=e("li",null,"N：for a Solaris NFS lock of unknown type;",-1),U={href:"http://man.linuxde.net/read",target:"_blank",rel:"noopener noreferrer"},q=e("li",null,"R：for a read lock on the entire file;",-1),B={href:"http://man.linuxde.net/write",target:"_blank",rel:"noopener noreferrer"},T=e("li",null,"W：for a write lock on the entire file;（整个文件的写锁）",-1),X=e("li",null,"u：for a read and write lock of any length;",-1),Z=e("li",null,"U：for a lock of unknown type;",-1),L=e("li",null,"x：for an SCO OpenServer Xenix lock on part of the file;",-1),Y=e("li",null,"X：for an SCO OpenServer Xenix lock on the entire file;",-1),j=e("li",null,"space：if there is no lock.",-1),H=s(`<p>文件类型：</p><ol><li><p>DIR：表示目录。</p></li><li><p>CHR：表示字符类型。</p></li><li><p>BLK：块设备类型。</p></li><li><p>UNIX： UNIX 域套接字。</p></li><li><p>FIFO：先进先出 (FIFO) 队列。</p></li><li><p>IPv4：网际协议 (IP) 套接字。</p></li><li><p>DEVICE：指定磁盘的名称</p></li><li><p>SIZE：文件的大小</p></li><li><p>NODE：索引节点（文件在磁盘上的标识）</p></li><li><p>NAME：打开文件的确切名称</p></li></ol><p>2）查看谁正在使用某个文件，也就是说查找某个文件相关的进程</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof /bin/bash
COMMAND   PID USER  FD   TYPE DEVICE   SIZE    NODE NAME
bash    24159 root txt    REG    8,2 801528 5368780 /bin/bash
bash    24909 root txt    REG    8,2 801528 5368780 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）递归查看某个目录的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof test/test3
COMMAND   PID USER   FD   TYPE DEVICE SIZE    NODE NAME
bash    24941 root  cwd    DIR    8,2 4096 2258872 test/test3
vi      24976 root  cwd    DIR    8,2 4096 2258872 test/test3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>使用了+D，对应目录下的所有子目录和文件都会被列出</p><p>4）不使用+D选项，遍历查看某个目录的所有文件信息的方法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof |grep &#39;test/test3&#39;
bash      24941 root  cwd       DIR                8,2     4096    2258872 /opt/soft/test/test3
vi        24976 root  cwd       DIR                8,2     4096    2258872 /opt/soft/test/test3
vi        24976 root    4u      REG                8,2    12288    2258882 /opt/soft/test/test3/.log2013.log.swp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5）列出某个用户打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -u username
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>说明:</p><p>-u 选项，u其实是user的缩写</p><p>6）列出某个程序进程所打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -c mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>说明:</p><p>-c 选项将会列出所有以mysql这个进程开头的程序的文件，其实你也可以写成 lsof | grep mysql, 但是第一种方法明显比第二种方法要少打几个字符了</p><p>7）列出多个进程多个打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -c mysql -c apache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>8）列出某个用户以及某个进程所打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof  -u test -c mysql 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>9）列出除了某个用户外的被打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -u ^root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>说明：</p><p>^这个符号在用户名之前，将会把是root用户打开的进程不让显示</p><p>10）通过某个进程号显示该进行打开的文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -p 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>11）列出多个进程号对应的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -p 1,2,3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>12）列出除了某个进程号，其他进程号所打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -p ^1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>13）列出所有的网络连接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>14）列出所有tcp 网络连接信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>15）列出所有udp网络连接信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i udp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>16）列出谁在使用某个端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i :3306
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>17）列出谁在使用某个特定的udp端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i udp:55
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>18）特定的tcp端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i tcp:80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>19）列出某个用户的所有活跃的网络端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -a -u test -i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>20）列出所有网络文件系统</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -N
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>21）域名socket文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>22）某个用户组所打开的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -g 5555
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>23）根据文件描述列出对应的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -d description(like 2)
# lsof  -d  txt
# lsof  -d  1
# lsof  -d  2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>0表示标准输入，1表示标准输出，2表示标准错误，从而可知：所以大多数应用程序所打开的文件的 FD 都是从 3 开始</p><p>24）根据文件描述范围列出文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -d 2-3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>25）列出COMMAND列中包含字符串&quot; sshd&quot;，且文件描符的类型为txt的文件信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -c sshd -a -d txt
COMMAND   PID USER  FD   TYPE DEVICE   SIZE    NODE NAME
sshd     2756 root txt    REG    8,2 409488 1027867 /usr/sbin/sshd
sshd    24155 root txt    REG    8,2 409488 1027867 /usr/sbin/sshd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>26）列出被进程号为1234的进程所打开的所有IPV4 network files</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i 4 -a -p 1234
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>27）列出目前连接主机peida.linux上端口为：20，21，22，25，53，80相关的所有文件信息，且每隔3秒不断的执行lsof指令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># lsof -i @peida.linux:20,21,22,25,53,80  -r  3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考链接：</p><p>http://www.cnblogs.com/peida/archive/2013/02/26/2932972.html</p><p>https://man.linuxde.net/lsof</p>`,67);function K(W,z){const l=d("ExternalLinkIcon");return a(),r("div",null,[u,o("more"),p,e("ol",null,[v,m,b,x,g,h,_,e("li",null,[i("m86：DOS Merge mapped "),e("a",f,[i("file"),n(l)]),i(";")]),E,D,I,k,e("li",null,[e("a",N,[i("tr"),n(l)]),i("：kernel trace file (OpenBSD);")]),R,w,S,y]),O,e("ol",null,[P,C,e("li",null,[e("a",F,[i("w"),n(l)]),i("：表示该文件被打开并处于。")]),M,G]),A,e("ol",null,[V,e("li",null,[i("r：for "),e("a",U,[i("read"),n(l)]),i(" lock on part of the file;")]),q,e("li",null,[i("w：for a "),e("a",B,[i("write"),n(l)]),i(" lock on part of the file;（文件的部分写锁）")]),T,X,Z,L,Y,j]),H])}const $=t(c,[["render",K],["__file","每天一个linux命令（49）-lsof.html.vue"]]);export{$ as default};

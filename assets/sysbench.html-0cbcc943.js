const a=JSON.parse('{"key":"v-07f61cc9","path":"/cloudnative/kubernetes/sysbench.html","title":"性能压测指标及方法","lang":"zh-CN","frontmatter":{"category":"云原生","tag":["Kubernetes"],"description":"性能压测指标及方法 一、基础性能测试 CPU 性能 Super_Pi 在计算性能测试中，我们使用linux下的bc计算器程序通过反正切函数计算5000位圆周率的cpu耗时来对主机进行测试。 # 安装 bc yum -y install bc # 单核计算性能测试 time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1 # 多核计算性能测试 for i in `seq 1 2`; do (time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1) &amp; done ; wait 2&gt;/dev/null for i in `seq 1 4`; do (time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1) &amp; done ; wait 2&gt;/dev/null","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/kubernetes/sysbench.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"性能压测指标及方法"}],["meta",{"property":"og:description","content":"性能压测指标及方法 一、基础性能测试 CPU 性能 Super_Pi 在计算性能测试中，我们使用linux下的bc计算器程序通过反正切函数计算5000位圆周率的cpu耗时来对主机进行测试。 # 安装 bc yum -y install bc # 单核计算性能测试 time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1 # 多核计算性能测试 for i in `seq 1 2`; do (time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1) &amp; done ; wait 2&gt;/dev/null for i in `seq 1 4`; do (time echo \\"scale=5000; 4*a(1)\\" | bc -l -q &amp;&gt;1) &amp; done ; wait 2&gt;/dev/null"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能压测指标及方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"一、基础性能测试","slug":"一、基础性能测试","link":"#一、基础性能测试","children":[{"level":3,"title":"CPU 性能","slug":"cpu-性能","link":"#cpu-性能","children":[]},{"level":3,"title":"内存性能","slug":"内存性能","link":"#内存性能","children":[]},{"level":3,"title":"磁盘 I/O 性能","slug":"磁盘-i-o-性能","link":"#磁盘-i-o-性能","children":[]},{"level":3,"title":"文件 I/O 性能","slug":"文件-i-o-性能","link":"#文件-i-o-性能","children":[]},{"level":3,"title":"网络性能","slug":"网络性能","link":"#网络性能","children":[]}]},{"level":2,"title":"二、应用性能测试","slug":"二、应用性能测试","link":"#二、应用性能测试","children":[{"level":3,"title":"1、Nginx","slug":"_1、nginx","link":"#_1、nginx","children":[]},{"level":3,"title":"2、MySQL","slug":"_2、mysql","link":"#_2、mysql","children":[]},{"level":3,"title":"3、Redis","slug":"_3、redis","link":"#_3、redis","children":[]}]},{"level":2,"title":"三、压测脚本","slug":"三、压测脚本","link":"#三、压测脚本","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":5.97,"words":1792},"filePathRelative":"cloudnative/kubernetes/sysbench.md","localizedDate":"2023年4月19日","excerpt":"<h1> 性能压测指标及方法</h1>\\n<h2> 一、基础性能测试</h2>\\n<h3> CPU 性能</h3>\\n<h4> Super_Pi</h4>\\n<p>在计算性能测试中，我们使用linux下的bc计算器程序通过反正切函数计算5000位圆周率的cpu耗时来对主机进行测试。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 安装 bc</span>\\nyum <span class=\\"token parameter variable\\">-y</span> <span class=\\"token function\\">install</span> <span class=\\"token function\\">bc</span>\\n<span class=\\"token comment\\"># 单核计算性能测试</span>\\n<span class=\\"token function\\">time</span> <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"scale=5000; 4*a(1)\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">bc</span> <span class=\\"token parameter variable\\">-l</span> <span class=\\"token parameter variable\\">-q</span> <span class=\\"token operator\\">&amp;&gt;</span><span class=\\"token number\\">1</span>\\n<span class=\\"token comment\\"># 多核计算性能测试</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token for-or-select variable\\">i</span> <span class=\\"token keyword\\">in</span> <span class=\\"token variable\\"><span class=\\"token variable\\">`</span><span class=\\"token function\\">seq</span> <span class=\\"token number\\">1</span> <span class=\\"token number\\">2</span><span class=\\"token variable\\">`</span></span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">do</span> <span class=\\"token punctuation\\">(</span>time <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"scale=5000; 4*a(1)\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">bc</span> <span class=\\"token parameter variable\\">-l</span> <span class=\\"token parameter variable\\">-q</span> <span class=\\"token operator\\">&amp;&gt;</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;</span> <span class=\\"token keyword\\">done</span> <span class=\\"token punctuation\\">;</span> <span class=\\"token function\\">wait</span> <span class=\\"token operator\\"><span class=\\"token file-descriptor important\\">2</span>&gt;</span>/dev/null\\n<span class=\\"token keyword\\">for</span> <span class=\\"token for-or-select variable\\">i</span> <span class=\\"token keyword\\">in</span> <span class=\\"token variable\\"><span class=\\"token variable\\">`</span><span class=\\"token function\\">seq</span> <span class=\\"token number\\">1</span> <span class=\\"token number\\">4</span><span class=\\"token variable\\">`</span></span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">do</span> <span class=\\"token punctuation\\">(</span>time <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"scale=5000; 4*a(1)\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">bc</span> <span class=\\"token parameter variable\\">-l</span> <span class=\\"token parameter variable\\">-q</span> <span class=\\"token operator\\">&amp;&gt;</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;</span> <span class=\\"token keyword\\">done</span> <span class=\\"token punctuation\\">;</span> <span class=\\"token function\\">wait</span> <span class=\\"token operator\\"><span class=\\"token file-descriptor important\\">2</span>&gt;</span>/dev/null\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Clay"},"autoDesc":true}');export{a as data};

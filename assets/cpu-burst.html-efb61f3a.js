const t=JSON.parse('{"key":"v-5af6d8ef","path":"/cloudnative/troubleshooting/cpu-burst.html","title":"K8s CPU Throttle 优化方案","lang":"zh-CN","frontmatter":{"isOriginal":true,"category":"云原生","tag":["Kubernetes"],"description":"K8s CPU Throttle 优化方案 CPU Throttle 问题详解 受内核调度控制周期（cfs_period）影响，容器的 CPU 利用率往往具有一定的欺骗性，下图展示了某容器一段时间的 CPU 使用情况（单位为0.01核），可以看到在 1s 级别的粒度下（图中紫色折线），容器的 CPU 用量较为稳定，平均在 2.5 核左右。根据经验，管理员会将 CPU Limit设置为 4 核。本以为这已经保留了充足的弹性空间，然而若我们将观察粒度放大到 100ms 级别（图中绿色折线），容器的 CPU 用量呈现出了严重的毛刺现象，峰值达到 4 核以上。此时容器会产生频繁的 CPU Throttle，进而导致应用性能下降、RT 抖动，但我们从常用的 CPU 利用率指标中竟然完全无法发现！","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/cloudnative/troubleshooting/cpu-burst.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"K8s CPU Throttle 优化方案"}],["meta",{"property":"og:description","content":"K8s CPU Throttle 优化方案 CPU Throttle 问题详解 受内核调度控制周期（cfs_period）影响，容器的 CPU 利用率往往具有一定的欺骗性，下图展示了某容器一段时间的 CPU 使用情况（单位为0.01核），可以看到在 1s 级别的粒度下（图中紫色折线），容器的 CPU 用量较为稳定，平均在 2.5 核左右。根据经验，管理员会将 CPU Limit设置为 4 核。本以为这已经保留了充足的弹性空间，然而若我们将观察粒度放大到 100ms 级别（图中绿色折线），容器的 CPU 用量呈现出了严重的毛刺现象，峰值达到 4 核以上。此时容器会产生频繁的 CPU Throttle，进而导致应用性能下降、RT 抖动，但我们从常用的 CPU 利用率指标中竟然完全无法发现！"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T09:55:28.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:modified_time","content":"2024-08-02T09:55:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"K8s CPU Throttle 优化方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-02T09:55:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"CPU Throttle 问题详解","slug":"cpu-throttle-问题详解","link":"#cpu-throttle-问题详解","children":[]},{"level":2,"title":"调研 CPU Burst 方案","slug":"调研-cpu-burst-方案","link":"#调研-cpu-burst-方案","children":[]},{"level":2,"title":"项目架构","slug":"项目架构","link":"#项目架构","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[]},{"level":2,"title":"Show me Code","slug":"show-me-code","link":"#show-me-code","children":[]}],"git":{"createdTime":1722592528000,"updatedTime":1722592528000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":4.49,"words":1348},"filePathRelative":"cloudnative/troubleshooting/cpu-burst.md","localizedDate":"2024年8月2日","excerpt":"<h1> K8s CPU Throttle 优化方案</h1>\\n<h2> CPU Throttle 问题详解</h2>\\n<p>受内核调度控制周期（cfs_period）影响，容器的 CPU 利用率往往具有一定的欺骗性，下图展示了某容器一段时间的 CPU 使用情况（单位为0.01核），可以看到在 1s 级别的粒度下（图中紫色折线），容器的 CPU 用量较为稳定，平均在 2.5 核左右。根据经验，管理员会将 CPU Limit设置为 4 核。本以为这已经保留了充足的弹性空间，然而若我们将观察粒度放大到 100ms 级别（图中绿色折线），容器的 CPU 用量呈现出了严重的毛刺现象，峰值达到 4 核以上。此时容器会产生频繁的 CPU Throttle，进而导致应用性能下降、RT 抖动，但我们从常用的 CPU 利用率指标中竟然完全无法发现！</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{t as data};

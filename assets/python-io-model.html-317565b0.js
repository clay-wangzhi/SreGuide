const e=JSON.parse('{"key":"v-3f18b850","path":"/code/python/python-io-model.html","title":"17 IO 模型","lang":"zh-CN","frontmatter":{"category":"Python","description":"17 IO 模型 重要概念 同步、异步 函数或方法被调用的时候，调用者是否得到最终结果的。 直接得到最终结果结果的，就是同步调用； 不直接得到最终结果的，就是异步调用。 阻塞、非阻塞 函数或方法调用的时候，是否立刻返回。 立即返回就是非阻塞调用； 不立即返回就是阻塞调用。 区别 同步、异步，与阻塞、非阻塞不相关。 同步、异步强调的是，是否得到（最终的）结果； 阻塞、非阻塞强调是时间，是否等待。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/python/python-io-model.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"17 IO 模型"}],["meta",{"property":"og:description","content":"17 IO 模型 重要概念 同步、异步 函数或方法被调用的时候，调用者是否得到最终结果的。 直接得到最终结果结果的，就是同步调用； 不直接得到最终结果的，就是异步调用。 阻塞、非阻塞 函数或方法调用的时候，是否立刻返回。 立即返回就是非阻塞调用； 不立即返回就是阻塞调用。 区别 同步、异步，与阻塞、非阻塞不相关。 同步、异步强调的是，是否得到（最终的）结果； 阻塞、非阻塞强调是时间，是否等待。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"Clay"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"17 IO 模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Clay\\",\\"url\\":\\"https://clay-wangzhi.com\\"}]}"]]},"headers":[{"level":2,"title":"重要概念","slug":"重要概念","link":"#重要概念","children":[{"level":3,"title":"同步、异步","slug":"同步、异步","link":"#同步、异步","children":[]},{"level":3,"title":"阻塞、非阻塞","slug":"阻塞、非阻塞","link":"#阻塞、非阻塞","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"联系","slug":"联系","link":"#联系","children":[]}]},{"level":2,"title":"IO两个阶段","slug":"io两个阶段","link":"#io两个阶段","children":[]},{"level":2,"title":"同步 IO 模型","slug":"同步-io-模型","link":"#同步-io-模型","children":[{"level":3,"title":"阻塞 IO","slug":"阻塞-io","link":"#阻塞-io","children":[]},{"level":3,"title":"非阻塞 IO","slug":"非阻塞-io","link":"#非阻塞-io","children":[]},{"level":3,"title":"IO多路复用","slug":"io多路复用","link":"#io多路复用","children":[]},{"level":3,"title":"信号驱动IO","slug":"信号驱动io","link":"#信号驱动io","children":[]}]},{"level":2,"title":"异步 IO","slug":"异步-io","link":"#异步-io","children":[]},{"level":2,"title":"Python 中 IO多路复用","slug":"python-中-io多路复用","link":"#python-中-io多路复用","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":8.93,"words":2680},"filePathRelative":"code/python/python-io-model.md","localizedDate":"2023年4月19日","excerpt":"<h1> 17 IO 模型</h1>\\n<h2> 重要概念</h2>\\n<h3> 同步、异步</h3>\\n<p>函数或方法被调用的时候，调用者是否得到<strong>最终结果</strong>的。\\n直接得到最终结果结果的，就是同步调用；\\n不直接得到最终结果的，就是异步调用。</p>\\n<h3> 阻塞、非阻塞</h3>\\n<p>函数或方法调用的时候，是否立刻返回。\\n立即返回就是非阻塞调用；\\n不立即返回就是阻塞调用。</p>\\n<h3> 区别</h3>\\n<p>同步、异步，与阻塞、非阻塞不相关。\\n同步、异步强调的是，是否得到（最终的）<strong>结果</strong>；\\n阻塞、非阻塞强调是时间，是否<strong>等待</strong>。</p>","copyright":{"author":"Clay"},"autoDesc":true}');export{e as data};

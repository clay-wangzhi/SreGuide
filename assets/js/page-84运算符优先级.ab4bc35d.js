(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{1092:function(t,e,l){"use strict";l.r(e);var a=l(1),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"_8-4-运算符优先级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-运算符优先级"}},[t._v("#")]),t._v(" 8.4 运算符优先级")]),t._v(" "),l("p",[t._v("在脚本中，运算执行的顺序被称为"),l("em",[t._v("优先级")]),t._v(": 高优先级的操作会比低优先级的操作先执行。"),l("sup",{staticClass:"footnote-ref"},[l("a",{attrs:{href:"#footnote1"}},[t._v("[1]")]),l("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})])]),t._v(" "),l("p",[l("strong",[t._v("表 8-1. 运算符优先级(从高到低)")])]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("含义")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("注解")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("var++ var--")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("后缀自增/自减")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C风格运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("++var --var")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("前缀自增/自减")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("! ~")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位取反/逻辑取反")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("对每一比特位取反/对逻辑判断的结果取反")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("**")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("幂运算")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("算数运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("* / %")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("乘, 除, 取余")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("算数运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("+ -")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("加, 减")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("算数运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("<< >>")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("左移, 右移")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("比特位运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("-z -n")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("一元比较")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("字符串是/否为空")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("-e -f -t -x, etc")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("一元比较")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("文件测试")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("-lt -gt -le -ge <=  >=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("复合比较")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("字符串/整数比较")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("-nt -ot -ef")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("复合比较")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("文件测试")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("AND(按位与)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位与操作")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("XOR(按位异或)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位异或操作")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("OR(按位或)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("按位或操作")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("&& -a")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("AND(逻辑与)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与, 复合比较")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("|| -o")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("OR(逻辑或)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑或, 复合比较")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("? :")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("if/else三目运算符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("C风格运算符")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("赋值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("不要与test中的等号混淆")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("*= /= %= += -= <<= >>= &=")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("赋值运算")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("先运算后赋值")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v(",")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("逗号运算符")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("连接一系列语句")])])])]),t._v(" "),l("p",[t._v("实际上，你只需要记住以下规则就可以了:")]),t._v(" "),l("ul",[l("li",[t._v("先乘除取余，后加减，与算数运算相似")]),t._v(" "),l("li",[t._v("复合逻辑运算符，&&, ||, -a, -o 优先级较低")]),t._v(" "),l("li",[t._v("优先级相同的操作按"),l("em",[t._v("从左至右")]),t._v("顺序求值")])]),t._v(" "),l("p",[t._v("现在，让我们利用运算符优先级的知识来分析一下"),l("em",[t._v("Fedora Core Linux")]),t._v("中的"),l("code",[t._v("/etc/init.d/functions")]),t._v("文件。")]),t._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[t._v('while [ -n "$remaining" -a "$retry" -gt 0 ]; do\n\n# 初看之下很恐怖...\n\n\n# 分开来分析\nwhile [ -n "$remaining" -a "$retry" -gt 0 ]; do\n#       --condition 1-- ^^ --condition 2-\n\n#  如果变量"$remaining" 长度不为0\n#+      并且AND (-a)\n#+ 变量 "$retry" 大于0\n#+ 那么\n#+ [ 方括号表达式 ] 返回成功(0)\n#+ while-loop 开始迭代执行语句。\n#  ==============================================================\n#  "condition 1" 和 "condition 2" 在 AND之前执行，为什么？\n#  因为AND(-a)优先级比-n,-gt来得低，逻辑与会在最后求值。\n#################################################################\n\nif [ -f /etc/sysconfig/i18n -a -z "${NOLOCALE:-}" ] ; then\n\n\n# 同样，分开来分析\nif [ -f /etc/sysconfig/i18n -a -z "${NOLOCALE:-}" ] ; then\n#    --condition 1--------- ^^ --condition 2-----\n\n#  如果文件"/etc/sysconfig/i18n" 存在\n#+      并且AND (-a)\n#+ 变量 $NOLOCALE 长度不为0\n#+ 那么\n#+ [ 方括号表达式 ] 返回成功(0)\n#+ 执行接下来的语句。\n#\n#  和之前的情况一样，逻辑与AND(-a)最后求值。\n#  因为在方括号测试结构中，逻辑运算的优先级是最低的。\n#  ==============================================================\n#  注意:\n#  ${NOLOCALE:-} 是一个参数扩展式，看起来有点多余。\n#  但是, 如果 $NOLOCALE 没有提前声明, 它会被设成null，\n#  在某些情况下，这会有点问题。\n')])]),t._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[t._v("1")]),l("br"),l("span",{staticClass:"line-number"},[t._v("2")]),l("br"),l("span",{staticClass:"line-number"},[t._v("3")]),l("br"),l("span",{staticClass:"line-number"},[t._v("4")]),l("br"),l("span",{staticClass:"line-number"},[t._v("5")]),l("br"),l("span",{staticClass:"line-number"},[t._v("6")]),l("br"),l("span",{staticClass:"line-number"},[t._v("7")]),l("br"),l("span",{staticClass:"line-number"},[t._v("8")]),l("br"),l("span",{staticClass:"line-number"},[t._v("9")]),l("br"),l("span",{staticClass:"line-number"},[t._v("10")]),l("br"),l("span",{staticClass:"line-number"},[t._v("11")]),l("br"),l("span",{staticClass:"line-number"},[t._v("12")]),l("br"),l("span",{staticClass:"line-number"},[t._v("13")]),l("br"),l("span",{staticClass:"line-number"},[t._v("14")]),l("br"),l("span",{staticClass:"line-number"},[t._v("15")]),l("br"),l("span",{staticClass:"line-number"},[t._v("16")]),l("br"),l("span",{staticClass:"line-number"},[t._v("17")]),l("br"),l("span",{staticClass:"line-number"},[t._v("18")]),l("br"),l("span",{staticClass:"line-number"},[t._v("19")]),l("br"),l("span",{staticClass:"line-number"},[t._v("20")]),l("br"),l("span",{staticClass:"line-number"},[t._v("21")]),l("br"),l("span",{staticClass:"line-number"},[t._v("22")]),l("br"),l("span",{staticClass:"line-number"},[t._v("23")]),l("br"),l("span",{staticClass:"line-number"},[t._v("24")]),l("br"),l("span",{staticClass:"line-number"},[t._v("25")]),l("br"),l("span",{staticClass:"line-number"},[t._v("26")]),l("br"),l("span",{staticClass:"line-number"},[t._v("27")]),l("br"),l("span",{staticClass:"line-number"},[t._v("28")]),l("br"),l("span",{staticClass:"line-number"},[t._v("29")]),l("br"),l("span",{staticClass:"line-number"},[t._v("30")]),l("br"),l("span",{staticClass:"line-number"},[t._v("31")]),l("br"),l("span",{staticClass:"line-number"},[t._v("32")]),l("br"),l("span",{staticClass:"line-number"},[t._v("33")]),l("br"),l("span",{staticClass:"line-number"},[t._v("34")]),l("br"),l("span",{staticClass:"line-number"},[t._v("35")]),l("br"),l("span",{staticClass:"line-number"},[t._v("36")]),l("br"),l("span",{staticClass:"line-number"},[t._v("37")]),l("br"),l("span",{staticClass:"line-number"},[t._v("38")]),l("br"),l("span",{staticClass:"line-number"},[t._v("39")]),l("br"),l("span",{staticClass:"line-number"},[t._v("40")]),l("br"),l("span",{staticClass:"line-number"},[t._v("41")]),l("br")])]),l("blockquote",[l("p",[l("img",{attrs:{src:"http://tldp.org/LDP/abs/images/tip.gif",alt:"tip"}}),t._v("为了避免在复杂比较运算中的错误，可以把运算分散到几个括号结构中。")]),t._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[t._v('if [ "$v1" -gt "$v2"  -o  "$v1" -lt "$v2"  -a  -e "$filename" ]\n# 这样写不清晰...\n\nif [[ "$v1" -gt "$v2" ]] || [[ "$v1" -lt "$v2" ]] && [[ -e "$filename" ]]\n# 好多了 -- 把逻辑判断分散到多个组之中\n')])]),t._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[t._v("1")]),l("br"),l("span",{staticClass:"line-number"},[t._v("2")]),l("br"),l("span",{staticClass:"line-number"},[t._v("3")]),l("br"),l("span",{staticClass:"line-number"},[t._v("4")]),l("br"),l("span",{staticClass:"line-number"},[t._v("5")]),l("br")])])]),t._v(" "),l("hr",{staticClass:"footnotes-sep"}),t._v(" "),l("section",{staticClass:"footnotes"},[l("ol",{staticClass:"footnotes-list"},[l("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[l("p",[t._v("Precedence(优先级)，根据上下文，与priority含义相近。 "),l("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[t._v("↩︎")])])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);
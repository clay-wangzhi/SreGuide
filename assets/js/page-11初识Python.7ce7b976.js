(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{1006:function(t,s,n){"use strict";n.r(s);var e=n(1),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_1-1-初识python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-初识python"}},[t._v("#")]),t._v(" 1.1 初识Python")]),t._v(" "),n("blockquote",[n("p",[t._v("转载自：Python - 100天从新手到大师 | 骆昊")])]),t._v(" "),n("h2",{attrs:{id:"python简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python简介"}},[t._v("#")]),t._v(" Python简介")]),t._v(" "),n("h3",{attrs:{id:"python的历史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python的历史"}},[t._v("#")]),t._v(" Python的历史")]),t._v(" "),n("ol",[n("li",[t._v("1989年圣诞节：Guido von Rossum开始写Python语言的编译器。")]),t._v(" "),n("li",[t._v("1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，还有对列表、字典等核心数据类型，同时支持以模块为基础来构造应用程序。")]),t._v(" "),n("li",[t._v("1994年1月：Python 1.0正式发布。")]),t._v(" "),n("li",[t._v("2000年10月16日：Python 2.0发布，增加了完整的"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)",target:"_blank",rel:"noopener noreferrer"}},[t._v("垃圾回收"),n("OutboundLink")],1),t._v("，提供了对"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Unicode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unicode"),n("OutboundLink")],1),t._v("的支持。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。")]),t._v(" "),n("li",[t._v("2008年12月3日：Python 3.0发布，它并不完全兼容之前的Python代码，不过因为目前还有不少公司在项目和运维中使用Python 2.x版本，所以Python 3.x的很多新特性后来也被移植到Python 2.6/2.7版本中。")])]),t._v(" "),n("p",[t._v("目前我们使用的Python 3.7.x的版本是在2018年发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（例如：修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以阅读名为"),n("a",{attrs:{href:"http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Python简史》"),n("OutboundLink")],1),t._v("的网络文章。")]),t._v(" "),n("h3",{attrs:{id:"python的优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python的优缺点"}},[t._v("#")]),t._v(" Python的优缺点")]),t._v(" "),n("p",[t._v("Python的优点很多，简单的可以总结为以下几点。")]),t._v(" "),n("ol",[n("li",[t._v("简单明了，学习曲线低，比很多编程语言都容易上手。")]),t._v(" "),n("li",[t._v("开放源代码，拥有强大的社区和生态圈，尤其是在数据分析和机器学习领域。")]),t._v(" "),n("li",[t._v("解释型语言，天生具有平台可移植性，代码可以工作于不同的操作系统。")]),t._v(" "),n("li",[t._v("对两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。")]),t._v(" "),n("li",[t._v("代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。")])]),t._v(" "),n("p",[t._v("Python的缺点主要集中在以下几点。")]),t._v(" "),n("ol",[n("li",[t._v("执行效率稍低，对执行效率要求高的部分可以由其他语言（如：C、C++）编写。")]),t._v(" "),n("li",[t._v("代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被弱化。")]),t._v(" "),n("li",[t._v("在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。")])]),t._v(" "),n("h3",{attrs:{id:"python的应用领域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python的应用领域"}},[t._v("#")]),t._v(" Python的应用领域")]),t._v(" "),n("p",[t._v("目前Python在Web应用后端开发、云基础设施建设、DevOps、网络数据采集（爬虫）、自动化测试、数据分析、机器学习等领域都有着广泛的应用。")]),t._v(" "),n("h2",{attrs:{id:"python-解释器分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python-解释器分类"}},[t._v("#")]),t._v(" Python 解释器分类")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("解释器")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("CPython")])]),t._v(" "),n("td",[t._v("官方，C 语言开发，最广泛的 Python 解释器")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("IPython")])]),t._v(" "),n("td",[t._v("一个交互式、功能增强的"),n("code",[t._v("CPython")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("PyPy")])]),t._v(" "),n("td",[t._v("Python 语言写的 Python 解释器，"),n("code",[t._v("JIT")]),t._v("技术，动态编译 Python 代码")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Jython")])]),t._v(" "),n("td",[t._v("Python 的源代码编译成 Java 的字节码，跑在"),n("code",[t._v("JVM")]),t._v("上")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("IronPython")])]),t._v(" "),n("td",[t._v("与"),n("code",[t._v("Jytho")]),t._v("n类似，运行在"),n("code",[t._v(".Net")]),t._v("平台上的解释器，Python 代码被编译成"),n("code",[t._v(".Net")]),t._v("的字节码")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("stackless")])]),t._v(" "),n("td",[t._v("Python的增强版本解释器，不使用"),n("code",[t._v("CPython")]),t._v("的 C 的栈，采用微线程概念编程，并发编程")])])])]),t._v(" "),n("p",[t._v("想要开始Python编程之旅，首先得在自己使用的计算机上安装Python解释器环境，下面将以安装官方的Python解释器为例，讲解如何在不同的操作系统上安装Python环境。官方的Python解释器是用C语言实现的，也是使用最为广泛的Python解释器，通常称之为CPython。")]),t._v(" "),n("h2",{attrs:{id:"安装python解释器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装python解释器"}},[t._v("#")]),t._v(" 安装Python解释器")]),t._v(" "),n("h3",{attrs:{id:"windows环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#windows环境"}},[t._v("#")]),t._v(" Windows环境")]),t._v(" "),n("p",[t._v("可以在"),n("a",{attrs:{href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python官方网站"),n("OutboundLink")],1),t._v("下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装Python 3.x，需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.x to PATH”（将Python 3.x添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议选择自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示。如果稍后运行Python程序时，出现因为缺失一些动态链接库文件而导致Python解释器无法工作的问题，可以按照下面的方法加以解决。")]),t._v(" "),n("p",[t._v("如果系统显示api-ms-win-crt*.dll文件缺失，可以参照"),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32087135",target:"_blank",rel:"noopener noreferrer"}},[t._v("《api-ms-win-crt*.dll缺失原因分析和解决方法》"),n("OutboundLink")],1),t._v("一文讲解的方法进行处理或者直接在"),n("a",{attrs:{href:"https://www.microsoft.com/zh-cn/download/details.aspx?id=48145",target:"_blank",rel:"noopener noreferrer"}},[t._v("微软官网"),n("OutboundLink")],1),t._v("下载Visual C++ Redistributable for Visual Studio 2015文件进行修复；如果是因为更新Windows的DirectX之后导致某些动态链接库文件缺失问题，可以下载一个"),n("a",{attrs:{href:"https://dl.pconline.com.cn/download/360074-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DirectX修复工具"),n("OutboundLink")],1),t._v("进行修复。")]),t._v(" "),n("h3",{attrs:{id:"linux环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux环境"}},[t._v("#")]),t._v(" Linux环境")]),t._v(" "),n("p",[t._v("Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在"),n("a",{attrs:{href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python的官方网站"),n("OutboundLink")],1),t._v("下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示（以CentOS为例）。")]),t._v(" "),n("ol",[n("li",[t._v("安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。")])]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("yum -y "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("下载Python源代码并解压缩到指定目录。")])]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz\nxz -d Python-3.7.6.tar.xz\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf Python-3.7.6.tar\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("切换至Python源代码目录并执行下面的命令进行配置和安装。")])]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Python-3.7.6\n./configure --prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/python37 --enable-optimizations\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("修改用户主目录下名为.bash_profile的文件，配置PATH环境变量并使其生效。")])]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" .bash_profile\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... 此处省略上面的代码 ...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/usr/local/python37/bin\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... 此处省略下面的代码 ...")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("激活环境变量。")])]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" .bash_profile\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h3",{attrs:{id:"macos环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#macos环境"}},[t._v("#")]),t._v(" macOS环境")]),t._v(" "),n("p",[t._v("macOS也自带了Python 2.x版本，可以通过"),n("a",{attrs:{href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python的官方网站"),n("OutboundLink")],1),t._v("提供的安装文件（pkg文件）安装Python 3.x的版本。默认安装完成后，可以通过在终端执行"),n("code",[t._v("python")]),t._v("命令来启动2.x版本的Python解释器，启动3.x版本的Python解释器需要执行"),n("code",[t._v("python3")]),t._v("命令。")]),t._v(" "),n("h2",{attrs:{id:"运行python程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行python程序"}},[t._v("#")]),t._v(" 运行Python程序")]),t._v(" "),n("h3",{attrs:{id:"确认python的版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#确认python的版本"}},[t._v("#")]),t._v(" 确认Python的版本")]),t._v(" "),n("p",[t._v("可以Windows的命令行提示符中键入下面的命令。")]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("python --version\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("在Linux或macOS系统的终端中键入下面的命令。")]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("python3 --version\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("当然也可以先输入"),n("code",[t._v("python")]),t._v("或"),n("code",[t._v("python3")]),t._v("进入交互式环境，再执行以下的代码检查Python的版本。")]),t._v(" "),n("div",{staticClass:"language-Python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version_info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h3",{attrs:{id:"编写python源代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写python源代码"}},[t._v("#")]),t._v(" 编写Python源代码")]),t._v(" "),n("p",[t._v("可以用文本编辑工具（推荐使用"),n("a",{attrs:{href:"https://www.sublimetext.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sublime"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code"),n("OutboundLink")],1),t._v("等高级文本编辑工具）编写Python源代码并用py作为后缀名保存该文件，代码内容如下所示。")]),t._v(" "),n("div",{staticClass:"language-Python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, world!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h3",{attrs:{id:"运行程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行程序"}},[t._v("#")]),t._v(" 运行程序")]),t._v(" "),n("p",[t._v('切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了"hello, world!"。')]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("python hello.py\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("或")]),t._v(" "),n("div",{staticClass:"language-Shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("python3 hello.py\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);
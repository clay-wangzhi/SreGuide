(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{1243:function(e,s,t){"use strict";t.r(s);var r=t(1),a=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"别再乱用-prometheus-联邦了-分享一个-prometheus-高可用新方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#别再乱用-prometheus-联邦了-分享一个-prometheus-高可用新方案"}},[e._v("#")]),e._v(" 别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案")]),e._v(" "),t("blockquote",[t("p",[e._v("转载自："),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/PDmSntHaN-tTltLBghyO4g",target:"_blank",rel:"noopener noreferrer"}},[e._v("别再乱用 Prometheus 联邦了，分享一个 Prometheus 高可用新方案 ｜ 云原生实验室"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("我看到很多人会这样使用联邦：联邦 prometheus 收集多个采集器的数据")])]),e._v(" "),t("li",[t("p",[e._v("实在看不下下去了，很多小白还在乱用"),t("code",[e._v("prometheus")]),e._v("的联邦")])]),e._v(" "),t("li",[t("p",[e._v("其实很多人是想实现 prometheus 数据的可用性，数据分片保存，有个统一的查询地方(小白中的联邦 prometheus)")])]),e._v(" "),t("li",[t("p",[e._v("而且引入 m3db 等支持集群的 tsdb 可能比较重")])]),e._v(" "),t("li",[t("p",[e._v("具体问题可以看我之前写的文章 "),t("strong",[e._v("m3db 资源开销，聚合降采样，查询限制等注意事项")]),e._v("[1]")])]),e._v(" "),t("li",[t("ul",[t("li",[t("strong",[e._v("m3db-node oom 追踪和内存分配器代码查看")]),e._v("[2]")])])]),e._v(" "),t("li",[t("p",[e._v("今天写篇文章分析下联邦的问题，并给出一个基于全部是 prometheus 的"),t("code",[e._v("multi_remote_read")]),e._v("方案")])])]),e._v(" "),t("h2",{attrs:{id:"架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[e._v("#")]),e._v(" 架构图")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/clay-wangzhi/blogImg/raw/master/blogImg/640",alt:"图片"}}),e._v("img")]),e._v(" "),t("h2",{attrs:{id:"联邦问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联邦问题"}},[e._v("#")]),e._v(" 联邦问题")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("联邦文档地址")]),e._v("[3]")])]),e._v(" "),t("h2",{attrs:{id:"联邦使用样例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联邦使用样例"}},[e._v("#")]),e._v(" 联邦使用样例")]),e._v(" "),t("ul",[t("li",[e._v("本质上就是采集级联")]),e._v(" "),t("li",[e._v("说白了就是 a 从 b,c,d 那里再采集数据过来")]),e._v(" "),t("li",[e._v("可以搭配 match 指定只拉取某些指标")]),e._v(" "),t("li",[e._v("下面就是官方文档给出的样例")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("scrape_configs:\n  - job_name: 'federate'\n    scrape_interval: 15s\n\n    honor_labels: true\n    metrics_path: '/federate'\n\n    params:\n      'match[]':\n        - '{job=\"prometheus\"}'\n        - '{__name__=~\"job:.*\"}'\n\n    static_configs:\n      - targets:\n        - 'source-prometheus-1:9090'\n        - 'source-prometheus-2:9090'\n        - 'source-prometheus-3:9090'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h2",{attrs:{id:"看上面的样例配置怎么感觉是采集的配置呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#看上面的样例配置怎么感觉是采集的配置呢"}},[e._v("#")]),e._v(" 看上面的样例配置怎么感觉是采集的配置呢")]),e._v(" "),t("ul",[t("li",[e._v("不用怀疑就是，下面看看代码分析一下 从上述配置可以看到采集的 path 是 "),t("code",[e._v("/federate")])])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// web.go 的 federate Handler\n    router.Get("/federate", readyf(httputil.CompressionHandler{\n        Handler: http.HandlerFunc(h.federation),\n    }.ServeHTTP))\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("blockquote",[t("p",[e._v("分析下联邦函数 说白了就是读取本地存储数据处理")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('func (h *Handler) federation(w http.ResponseWriter, req *http.Request) {\n\n    // localstorage 的query\n    q, err := h.localStorage.Querier(req.Context(), mint, maxt)\n\n    defer q.Close()\n    // 最终发送的Vector 数组\n    vec := make(promql.Vector, 0, 8000)\n\n    hints := &storage.SelectHints{Start: mint, End: maxt}\n\n    var sets []storage.SeriesSet\n\n    set := storage.NewMergeSeriesSet(sets, storage.ChainedSeriesMerge)\n    // 遍历存储中的full series\n    for set.Next() {\n        s := set.At()\n\n\n        vec = append(vec, promql.Sample{\n            Metric: s.Labels(),\n            Point:  promql.Point{T: t, V: v},\n        })\n\n    for _, s := range vec {\n        nameSeen := false\n        globalUsed := map[string]struct{}{}\n        protMetric := &dto.Metric{\n            Untyped: &dto.Untyped{},\n        }\n        // Encode方法根据请求类型编码\n                if protMetricFam != nil {\n                    if err := enc.Encode(protMetricFam); err != nil {\n                        federationErrors.Inc()\n                        level.Error(h.logger).Log("msg", "federation failed", "err", err)\n                        return\n                    }\n                }\n\n        }\n\n        protMetric.TimestampMs = proto.Int64(s.T)\n        protMetric.Untyped.Value = proto.Float64(s.V)\n\n        protMetricFam.Metric = append(protMetricFam.Metric, protMetric)\n    }\n    //\n    if protMetricFam != nil {\n        if err := enc.Encode(protMetricFam); err != nil {\n            federationErrors.Inc()\n            level.Error(h.logger).Log("msg", "federation failed", "err", err)\n        }\n    }\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br"),t("span",{staticClass:"line-number"},[e._v("40")]),t("br"),t("span",{staticClass:"line-number"},[e._v("41")]),t("br"),t("span",{staticClass:"line-number"},[e._v("42")]),t("br"),t("span",{staticClass:"line-number"},[e._v("43")]),t("br"),t("span",{staticClass:"line-number"},[e._v("44")]),t("br"),t("span",{staticClass:"line-number"},[e._v("45")]),t("br"),t("span",{staticClass:"line-number"},[e._v("46")]),t("br"),t("span",{staticClass:"line-number"},[e._v("47")]),t("br"),t("span",{staticClass:"line-number"},[e._v("48")]),t("br"),t("span",{staticClass:"line-number"},[e._v("49")]),t("br"),t("span",{staticClass:"line-number"},[e._v("50")]),t("br"),t("span",{staticClass:"line-number"},[e._v("51")]),t("br"),t("span",{staticClass:"line-number"},[e._v("52")]),t("br"),t("span",{staticClass:"line-number"},[e._v("53")]),t("br"),t("span",{staticClass:"line-number"},[e._v("54")]),t("br")])]),t("blockquote",[t("p",[e._v("最终调用压缩函数压缩")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("type CompressionHandler struct {\n    Handler http.Handler\n}\n\n// ServeHTTP adds compression to the original http.Handler's ServeHTTP() method.\nfunc (c CompressionHandler) ServeHTTP(writer http.ResponseWriter, req *http.Request) {\n    compWriter := newCompressedResponseWriter(writer, req)\n    c.Handler.ServeHTTP(compWriter, req)\n    compWriter.Close()\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("p",[e._v("如果没有过滤那么只是一股脑把分片的数据集中到了一起，没意义。很多时候是因为数据量太大了，分散在多个采集器的数据是不能被一个联邦消化的。")]),e._v(" "),t("h2",{attrs:{id:"正确使用联邦的姿势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正确使用联邦的姿势"}},[e._v("#")]),e._v(" 正确使用联邦的姿势")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("使用 match 加过滤，将采集数据分位两类")])]),e._v(" "),t("li",[t("p",[e._v("第一类需要再聚合的数据，通过联邦收集在一起")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("只收集中间件的数据的联邦 只收集业务数据的联邦")]),e._v(" "),t("li",[e._v("举个例子")]),e._v(" "),t("li",[e._v("其余数据保留在采集器本地即可")])])]),e._v(" "),t("li",[t("p",[e._v("这样可以在各个联邦上执行"),t("code",[e._v("预聚合")]),e._v("和"),t("code",[e._v("alert")]),e._v("，使得查询速度提升")])])]),e._v(" "),t("h2",{attrs:{id:"默认-prometheus-不支持降采样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认-prometheus-不支持降采样"}},[e._v("#")]),e._v(" 默认 prometheus 不支持降采样")]),e._v(" "),t("ul",[t("li",[e._v("可以在联邦配置 scrape_interval 的时候设置的大一点来达到 模拟降采样的目的")]),e._v(" "),t("li",[e._v("真实的降采样需要 agg 算法支持的，比如 5 分钟的数据算平均值、最大值、最小值保留，而不是这种把采集间隔调大到 5 分钟的随机选点逻辑")])]),e._v(" "),t("h2",{attrs:{id:"正确实现统一查询的姿势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正确实现统一查询的姿势"}},[e._v("#")]),e._v(" 正确实现统一查询的姿势")]),e._v(" "),t("blockquote",[t("p",[e._v("什么是 remote_read")])]),e._v(" "),t("ul",[t("li",[e._v("简单说就是 prometheus 意识到自己本地存储不具备高可用性，所以通过支持第三方存储来补足这点的手段")]),e._v(" "),t("li",[t("strong",[e._v("配置文档地址")]),e._v("[4]")])]),e._v(" "),t("blockquote",[t("p",[e._v("读写都支持的存储")])]),e._v(" "),t("ul",[t("li",[e._v("AWS Timestream")]),e._v(" "),t("li",[e._v("Azure Data Explorer")]),e._v(" "),t("li",[e._v("Cortex")]),e._v(" "),t("li",[e._v("CrateDB")]),e._v(" "),t("li",[e._v("Google BigQuery")]),e._v(" "),t("li",[e._v("Google Cloud Spanner")]),e._v(" "),t("li",[t("strong",[e._v("InfluxDB")]),e._v("[5]")]),e._v(" "),t("li",[e._v("IRONdb")]),e._v(" "),t("li",[t("strong",[e._v("M3DB")]),e._v("[6]")]),e._v(" "),t("li",[e._v("PostgreSQL/TimescaleDB")]),e._v(" "),t("li",[e._v("QuasarDB")]),e._v(" "),t("li",[e._v("Splunk")]),e._v(" "),t("li",[e._v("Thanos")]),e._v(" "),t("li",[e._v("TiKV")])]),e._v(" "),t("blockquote",[t("p",[e._v("但是这个和我们今天聊的问题关联在哪里?，往下看你就知道了")])]),e._v(" "),t("h2",{attrs:{id:"multi-remote-read"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multi-remote-read"}},[e._v("#")]),e._v(" multi_remote_read")]),e._v(" "),t("p",[e._v("如果我们配置了多个 remote_read 接口的话即可实现 multi")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('remote_read:\n  - url: "http://172.20.70.205:9090/api/v1/read"\n    read_recent: true\n  - url: "http://172.20.70.215:9090/api/v1/read"\n    read_recent: true\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("上述配置代表并发查询两个后端存储，并可以对查询的结果进行 merge")]),e._v(" "),t("p",[e._v("merge 有啥用：你们的查询 promql 或者 alert 配置文件就无需关心数据到底存储在哪个存储里面 ，可以直接使用全局的聚合函数")]),e._v(" "),t("h2",{attrs:{id:"prometheus-可以-remote-read-prometheus-自己"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-可以-remote-read-prometheus-自己"}},[e._v("#")]),e._v(" prometheus 可以 remote_read prometheus 自己")]),e._v(" "),t("p",[e._v("感觉这个特点很多人不知道，以为 remote"),t("em",[e._v("read 必须配置第三方存储如 m3db 等，其实 p 也可以 remote_wirte 自己，只不过需要开启")]),e._v(" --enable-feature=remote-write-receiver")]),e._v(" "),t("h2",{attrs:{id:"高可用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高可用方案"}},[e._v("#")]),e._v(" 高可用方案")]),e._v(" "),t("p",[e._v("所以结合上述两个特点就可以用多个采集的 prometheus + 多个无状态的 prometheus query 实现 prometheus 的高可用方案")]),e._v(" "),t("ul",[t("li",[e._v("监控数据存储在多个采集器的本地，可以是机器上的 prometheus")]),e._v(" "),t("li",[e._v("也可以是 k8s 中的 prometheus statefulset")]),e._v(" "),t("li",[e._v("prometheus query remote_read 填写多个"),t("code",[e._v("prometheus的/api/v1/read/")]),e._v("地址")])]),e._v(" "),t("h3",{attrs:{id:"数据重复怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据重复怎么办"}},[e._v("#")]),e._v(" 数据重复怎么办")]),e._v(" "),t("p",[e._v("不用管，上面提到了 query 会做 merge，多个数据只会保留一份")]),e._v(" "),t("p",[e._v("可以利用这个特点模拟副本机制：")]),e._v(" "),t("ul",[t("li",[e._v("重要的采集 job 由两个以上的采集 prometheus 采集")]),e._v(" "),t("li",[e._v("查询的时候 merge 数据")]),e._v(" "),t("li",[e._v("可以避免其中一个挂掉时没数据的问题")])]),e._v(" "),t("h3",{attrs:{id:"这种方案的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这种方案的缺点"}},[e._v("#")]),e._v(" 这种方案的缺点")]),e._v(" "),t("p",[e._v("并发查询必须要等最慢的那个返回才返回，所以如果有个慢的节点会导致查询速度下降，举个例子：")]),e._v(" "),t("p",[e._v("有个美东的节点，网络基础延迟是 1 秒，那么所有查询无论返回多快都必须叠加 1 秒的延迟。")]),e._v(" "),t("p",[e._v("应对重查询时可能会把 query 打挂。")]),e._v(" "),t("p",[e._v("但也正是这个特点，会很好的保护后端存储分片，重查询的基数分散给多个采集器了。")]),e._v(" "),t("p",[e._v("由于是无差别的并发 query，也就是说所有的 query 都会打向所有的采集器，会导致一些采集器总是查询不存在他这里的数据")]),e._v(" "),t("p",[e._v("那么一个关键性的问题就是，查询不存在这个 prometheus 的数据的资源开销到底是多少？据我观察，新版本速度还是很快的说明资源开销不会在很深的地方才判断出不属于我的数据。")]),e._v(" "),t("p",[e._v("m3db 有布隆过滤器来防止这个问题。")]),e._v(" "),t("p",[e._v("如果想精确把 query 打向数据它的存储分片可以参考我之前写的 route 方案："),t("strong",[e._v("开源项目 : prome-route：使用反向代理实现 prometheus 分片")]),e._v("[7]")]),e._v(" "),t("p",[e._v("主要哦，需要特征标签支持，并且数据天然就是分开的！！")]),e._v(" "),t("p",[t("strong",[e._v("忘了说了，这个方案还有个缺点就是重查询没控制好容易把你的采集器打挂了")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"脚注"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚注"}},[e._v("#")]),e._v(" 脚注")]),e._v(" "),t("p",[e._v("[1]m3db 资源开销，聚合降采样，查询限制等注意事项: "),t("em",[e._v("https://zhuanlan.zhihu.com/p/359551116")]),e._v("[2]m3db-node oom 追踪和内存分配器代码查看: "),t("em",[e._v("https://zhuanlan.zhihu.com/p/183815841")]),e._v("[3]联邦文档地址: "),t("em",[e._v("https://prometheus.io/docs/prometheus/latest/federation/")]),e._v("[4]配置文档地址: "),t("em",[e._v("https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_read")]),e._v("[5]InfluxDB: "),t("em",[e._v("https://docs.influxdata.com/influxdb/v1.8/supported_protocols/prometheus/")]),e._v("[6]M3DB: "),t("em",[e._v("https://m3db.io/docs/integrations/prometheus/")]),e._v("[7]开源项目 : prome-route：使用反向代理实现 prometheus 分片: "),t("em",[e._v("https://zhuanlan.zhihu.com/p/231914857")])]),e._v(" "),t("p",[e._v("原文链接："),t("strong",[e._v("https://zhuanlan.zhihu.com/p/368868988")])])])}),[],!1,null,null,null);s.default=a.exports}}]);
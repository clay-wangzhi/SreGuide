(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{1194:function(t,a,s){"use strict";s.r(a);var e=s(1),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"elasticsearch基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch基础概念"}},[t._v("#")]),t._v(" Elasticsearch基础概念")]),t._v(" "),e("h3",{attrs:{id:"elasticsearch关键概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch关键概念"}},[t._v("#")]),t._v(" Elasticsearch关键概念")]),t._v(" "),e("ul",[e("li",[t._v("Document（文档）：用户存储在es中的数据文档，它是以JSON格式定义的特定方式的字段集合。每个文档都属于一个类型，并驻留在一个索引中。每个文档都有一个唯一的标识符，称为UID。")]),t._v(" "),e("li",[t._v("Index（索引）：包含一堆有相似结构的文档数据，比如可以有一个客户索引，商品分类索引，订单索引，索引有一个名称。一个index包含很多document，一个index就代表了一类类似的或者相同的Document。比如说建立一个商品索引，里面可能就存放了所有的商品数据。")]),t._v(" "),e("li",[t._v("Type/Mapping（类型/映射）：它是共享同一索引中一组公共字段的文档集合。例如，索引包含社交网络应用程序的数据，然后可以有特定类型的用户简档数据、另一种类型的消息数据和另一种类型的评论数据。")]),t._v(" "),e("li",[t._v("Node（节点）：它指的是ElasticSearch的单个运行实例，是集群的构成单元。单个物理和虚拟服务器可容纳多个节点，具体取决于其物理资源(如内存、存储和处理能力)的能力。")]),t._v(" "),e("li",[t._v("Cluster（集群）：它是一个或多个节点组成的集合。集群为整个数据提供跨节点的索引和搜索功能。")]),t._v(" "),e("li",[t._v("Shard（分片）：单台机器无法存储大量数据，ElasticSearch可以将一个索引中的数据切分为多个Shard，分布在多台服务器上存储。有了Shard就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。")]),t._v(" "),e("li",[t._v("Replicas(副本):服务器随时可能故障或宕机，此时Shard可能就会丢失，因此可以为每个Shard创建多个Replica副本。Replica可以在Shard故障时提供备用服务，保证数据不丢失，多个Replica还可以提升搜索操作的吞吐量和性能。")])]),t._v(" "),e("h3",{attrs:{id:"document-文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#document-文档"}},[t._v("#")]),t._v(" Document（文档）")]),t._v(" "),e("p",[t._v("document其实就是json object 由字段（Field)组成，常见的类型：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("字符串：keyword（不分词）,text(分词)")])]),t._v(" "),e("li",[e("p",[t._v("数值型：long,integer,short,byte,double,float,half_float,scaled_float")])]),t._v(" "),e("li",[e("p",[t._v("布尔：boolean")])]),t._v(" "),e("li",[e("p",[t._v("日期：date")])]),t._v(" "),e("li",[e("p",[t._v("二进制：binary")])]),t._v(" "),e("li",[e("p",[t._v("范围类型：integer_range,float_range,long_range,double_range,date_range")])])]),t._v(" "),e("p",[t._v("每一个文档有唯一的ID标识")]),t._v(" "),e("ul",[e("li",[t._v("自行指定")]),t._v(" "),e("li",[t._v("es 自动生成")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(646),alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("元数据，用于标注文档的相关信息\n"),e("ul",[e("li",[t._v("_index：文档所在的索引名")]),t._v(" "),e("li",[t._v("_type：文档所在的类型名")]),t._v(" "),e("li",[t._v("_id：文档唯一id")]),t._v(" "),e("li",[t._v("_uid：组合id，由_type和_id组成（6.x _type不再起作用，同id一样）")]),t._v(" "),e("li",[t._v("_source：文档的原始Json数据，可以从这里获取每个字段的内容")]),t._v(" "),e("li",[t._v("_all：整合所有字段内容到该字段，默认禁用")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("注意：元数据不能删除")])]),t._v(" "),e("h3",{attrs:{id:"index-索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index-索引"}},[t._v("#")]),t._v(" Index（索引）")]),t._v(" "),e("ul",[e("li",[t._v("索引中存储具有相同结构的文档（Document）\n"),e("ul",[e("li",[t._v("每个索引都有自己的mapping定义，用于定义字段名和类型")])])]),t._v(" "),e("li",[t._v("一个集群可以有多个索引，比如：\n"),e("ul",[e("li",[t._v("nginx日志存储的时候可以按照日期每天生产一个索引来存储\n"),e("ul",[e("li",[t._v("nginx_log_2019-08-01")]),t._v(" "),e("li",[t._v("nginx_log_2019-08-02")]),t._v(" "),e("li",[t._v("nginx_log_2019-08-03")])])])])])]),t._v(" "),e("h3",{attrs:{id:"mapping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapping"}},[t._v("#")]),t._v(" Mapping")]),t._v(" "),e("h4",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),e("ul",[e("li",[t._v("类似数据库中的表结构定义，主要作用如下：\n"),e("ul",[e("li",[t._v("定义Index下的字段名（Field Name）")]),t._v(" "),e("li",[t._v("定义字段的类型，比如数值型、字符串型、布尔型等")]),t._v(" "),e("li",[t._v("定义倒排索引相关的配置，比如是否索引、记录position等")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(647),alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:s(648),alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("Mapping中的字段类型一旦设定后，禁止直接修改，原因如下：")]),t._v(" "),e("p",[t._v("​\tLucene实现的倒排索引生成后不允许修改")])]),t._v(" "),e("h4",{attrs:{id:"常用参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用参数"}},[t._v("#")]),t._v(" 常用参数")]),t._v(" "),e("h5",{attrs:{id:"dynamic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic"}},[t._v("#")]),t._v(" Dynamic")]),t._v(" "),e("ul",[e("li",[t._v("允许新增字段，通过dynamic参数来控制字段的新增\n"),e("ul",[e("li",[t._v("true（默认）允许自动新增字段")]),t._v(" "),e("li",[t._v("false不允许自动新增字段，但是文档可以正常写入，但无法对字段进行查询等操作")]),t._v(" "),e("li",[t._v("strict文档不能写入，报错")])])])]),t._v(" "),e("h5",{attrs:{id:"copy-to"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-to"}},[t._v("#")]),t._v(" copy_to")]),t._v(" "),e("ul",[e("li",[t._v("将该字段的值复制到目标字段，实现类似_all的作用")]),t._v(" "),e("li",[t._v("不会出现在_source中，只用来搜索")])]),t._v(" "),e("h5",{attrs:{id:"index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[t._v("#")]),t._v(" index")]),t._v(" "),e("ul",[e("li",[t._v("控制当前字段是否索引，默认为true，即记录索引，false不记录，即不可搜索")])]),t._v(" "),e("h5",{attrs:{id:"index-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index-options"}},[t._v("#")]),t._v(" index_options")]),t._v(" "),e("ul",[e("li",[t._v("用于控制倒排索引记录的内容，有如下4种配置\n"),e("ul",[e("li",[t._v("docs：只记录doc id")]),t._v(" "),e("li",[t._v("freqs：记录doc id和term frequencies")]),t._v(" "),e("li",[t._v("positions：记录doc id、term frequencies和term position")]),t._v(" "),e("li",[t._v("offsets：记录doc id、term frequencies、term position和character offsets")])])]),t._v(" "),e("li",[t._v("text类型默认配置为positions，其他默认为docs")]),t._v(" "),e("li",[t._v("记录内容越多，占用空间越大")])]),t._v(" "),e("h5",{attrs:{id:"null-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#null-value"}},[t._v("#")]),t._v(" null_value")]),t._v(" "),e("ul",[e("li",[t._v("当字段遇到null值时的处理策略，默认为null，即控制，此时es会忽略该值。可以通过设定该值设定字段的默认值")])]),t._v(" "),e("h3",{attrs:{id:"rest-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rest-api"}},[t._v("#")]),t._v(" Rest API")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Elasticsearch集群对外提供Restful API")]),t._v(" "),e("ul",[e("li",[t._v("REST：REpresentational State Transfer")]),t._v(" "),e("li",[t._v("URL指定资源，如Index、Document等")]),t._v(" "),e("li",[t._v("Http Method指明资源操作类型，如GET、POST、PUT、DELETE等")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(649),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"创建文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建文档"}},[t._v("#")]),t._v(" 创建文档")]),t._v(" "),e("p",[e("img",{attrs:{src:s(650),alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:s(651),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"查询文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询文档"}},[t._v("#")]),t._v(" 查询文档")]),t._v(" "),e("p",[e("img",{attrs:{src:s(652),alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:s(653),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"批量创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#批量创建"}},[t._v("#")]),t._v(" 批量创建")]),t._v(" "),e("p",[e("img",{attrs:{src:s(654),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"批量查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#批量查询"}},[t._v("#")]),t._v(" 批量查询")]),t._v(" "),e("p",[e("img",{attrs:{src:s(655),alt:""}})])])}),[],!1,null,null,null);a.default=i.exports},646:function(t,a,s){t.exports=s.p+"assets/img/document01.3bfe2d89.png"},647:function(t,a,s){t.exports=s.p+"assets/img/mapping01.3c75c5a3.png"},648:function(t,a,s){t.exports=s.p+"assets/img/mapping02.71bbd94a.png"},649:function(t,a,s){t.exports=s.p+"assets/img/rest01.baf0d3b0.png"},650:function(t,a,s){t.exports=s.p+"assets/img/create01.320c66d4.png"},651:function(t,a,s){t.exports=s.p+"assets/img/create02.4586b088.png"},652:function(t,a,s){t.exports=s.p+"assets/img/select01.0bc59e9c.png"},653:function(t,a,s){t.exports=s.p+"assets/img/select02.02a7f75e.png"},654:function(t,a,s){t.exports=s.p+"assets/img/create03.f00c3bf2.png"},655:function(t,a,s){t.exports=s.p+"assets/img/select03.dbb8aafa.png"}}]);
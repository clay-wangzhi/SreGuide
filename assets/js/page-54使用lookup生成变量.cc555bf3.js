(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{940:function(s,e,a){"use strict";a.r(e);var t=a(1),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_5-4-使用lookup生成变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-使用lookup生成变量"}},[s._v("#")]),s._v(" 5.4 使用lookup生成变量")]),s._v(" "),a("h1",{attrs:{id:"简单说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单说明"}},[s._v("#")]),s._v(" 简单说明")]),s._v(" "),a("p",[s._v("在通常情况下，所有的配置信息都会被作为ansible的变量保存了，而且可以保存在ansible允许定义变量的各种地方，诸如vars区段，"),a("code",[s._v("vars_files")]),s._v("加载的文件中，以及host_vars和group_vars目录中。")]),s._v(" "),a("p",[s._v("但在有些时候，我们希望从诸如文本文件或者.csv文件中收集数据作为ansible的变量，或者直接获取某些命令的输出作为ansible的变量，甚至从redis或者etcd这样的键值存储中取得相应的值作为ansible的变量。这个时候，我们就需要通过ansible的lookup插件来从这些数据源中读取配置数据，传递给ansbile变量，并在playbook或者模板中使用这些数据。")]),s._v(" "),a("p",[s._v('lookup()是Ansible的一个插件，可用于从外部读取数据，这里的"外部"含义非常广泛，比如：')]),s._v(" "),a("p",[s._v("(1).从磁盘文件读取(file插件)")]),s._v(" "),a("p",[s._v("(2).从redis中读取(redis插件)")]),s._v(" "),a("p",[s._v("(3).从etcd中读取(etcd插件)")]),s._v(" "),a("p",[s._v("(4).从命令执行结果读取(pipe插件)")]),s._v(" "),a("p",[s._v("(5).从Ansible变量中读取(vars插件)")]),s._v(" "),a("p",[s._v("(6).从Ansible列表中读取(list插件)")]),s._v(" "),a("p",[s._v("(7).从Ansible字典中读取(dict插件)")]),s._v(" "),a("p",[s._v("(8)....")]),s._v(" "),a("p",[s._v('具体可以从哪些"外部"读取以及如何读取，取决于Ansible是否提供了相关的读取插件。官方手册：https://docs.ansible.com/ansible/latest/plugins/lookup.html#plugin-list 中列出了所有支持的插件')]),s._v(" "),a("p",[a("strong",[s._v("lookup()语法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("lookup('<plugin_name>', 'plugin_argument')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"_1-file-fileglob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-file-fileglob"}},[s._v("#")]),s._v(" 1. file/fileglob")]),s._v(" "),a("p",[s._v("使用file lookup可以从文本文件中获取数据，并在这些数据传递给ansible变量，在task或者jinja2模板中进行引用。下面是一个从文本文件中获取ssh公钥并复制到远程主机的示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: copy authorized_host file\n  template: \n    src: authorized_keys.j2 \n    dest: /home/deploy/.ssh/authrized_keys \n    owner: deploy\n    group: deploy\n    mode: 0600\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("authorized_keys.j2模板文件示例如下：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" lookup('file'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" '/users/breeze/.ssh/id_rsa.pub')"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("和file类似，支持通配符的fileglob插件，它使用通配符来通配Ansible本地端的文件名")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("---\n- name: play1\n  hosts: new\n  gather_facts: false\n  tasks:\n    - name: task1\n  debug:\n    msg: \"filenames: {{lookup('fileglob','/etc/*.conf')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("需注意的是，fileglob查询的是Ansible端文件，且只能通配文件而不能通配目录，且不会递归通配。如果想要查询目标主机上的文件，可以使用find模块。")]),s._v(" "),a("blockquote",[a("p",[s._v("如果lookup()查询出来的结果包含多项，则默认以逗号分隔各项的字符串方式返回，如果想要以列表方式返回，则传递一个lookup的参数wantlist=True。例如，fileglob通配出来的文件如果有多个，加上wantlist=True：")])]),s._v(" "),a("p",[s._v("在Ansible 2.5中添加了一个新的功能query()或q()，后者是前者的等价缩写形式。query()在写法和功能上和lookup一致，其实它会自动调用lookup插件，并且总是以列表方式返回，而不需要手动加上wantlist=True参数。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: task1\n  debug:\n  msg: \"{{q('fileglob','/etc/*.conf')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h1",{attrs:{id:"_2-pipe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pipe"}},[s._v("#")]),s._v(" 2. pipe")]),s._v(" "),a("p",[s._v("使用pipe lookup可以直接调用外部命令，并将命令执行的结果打印到标准输出，作为ansible变量。下面的例子通过pipe调用date指令拿到一个以时间数字组成的字串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: Flamingo | Get release version\n  set_fact:\n    flamingo_release_version: \"{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h1",{attrs:{id:"_3-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-env"}},[s._v("#")]),s._v(" 3. env")]),s._v(" "),a("p",[s._v("env lookup实际就是获取在控制主机上的某个环境变量的值。下面是一个读取控制机上"),a("code",[s._v("$JAVA_HOME")]),s._v("变量值的示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: get JAVA_HOME\n  debug: msg=\"{{ lookup('env', 'JAVA_HOME')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"_4-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-template"}},[s._v("#")]),s._v(" 4. template")]),s._v(" "),a("p",[s._v("template lookup可以指定一个jinja2模板，然后返回这个模板中的变量被替换以后的结果。")]),s._v(" "),a("p",[s._v("假设我们有一个message.j2模板，内容如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("This host runs {{ ansible_distribution }}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("定义一个如下的task：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: print message from template\n  debug: msg=\"{{ lookup('template', 'message.j2')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("输出的msg的结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("This host runs CentOS\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"_5-csvfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-csvfile"}},[s._v("#")]),s._v(" 5. csvfile")]),s._v(" "),a("p",[s._v("csvfile可以从.csv文件中读取一个条目。假设我们有如下示例的名为users.csv的文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("username,email\nlorin,lorin@test.com\njohn,john@example.com\nsue,sue@exmaple.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("下面是一个使用csvfile lookkup提取sue的电子邮件地址的task示例：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" get sue's email\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(' msg="'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" lookup('csvfile'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("'sue file=users.csv delimiter="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col=1')"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v('"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("可以看到，一共向插件传递了四个参数：sue, file=users.csv, delimiter=,以及col=1。说明如下：")]),s._v(" "),a("ul",[a("li",[s._v("第一个参数指定一个名字，该名字必须出现在其所在行的第0列，需要说明的是，如果指定的第一个参数名字在文件中出现多次，则匹配第一次出现的结果")]),s._v(" "),a("li",[s._v("第二个参数指定csv文件的文件名")]),s._v(" "),a("li",[s._v("第三个参数指定csv文件的中条目的分隔符，")]),s._v(" "),a("li",[s._v("第四个参数指定要取得哪一列的值，这一列正是第一个参数所在行的那一列的值")])]),s._v(" "),a("p",[s._v('如果我们想要查找的用户存储在名为username的变量中，则可以使用"+"符号来连接username字串和其他的参数字串，来构建完整的参数字符串：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("lookup('csvfile', username+'file=users.csv' delimiter=, col=1)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"_6-redis-kv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis-kv"}},[s._v("#")]),s._v(" 6. redis_kv")]),s._v(" "),a("p",[a("code",[s._v("redis_kv lookup")]),s._v("可以直接从redis存储中来获取一个key的value，key必须是一个字符串，如同Redis GET指令一样。需要注意的是，要使用"),a("code",[s._v("redis_kv lookup")]),s._v("，需要在主控端安装python的redis客户端，在centos上，软件包为python-redis。")]),s._v(" "),a("p",[s._v("下面是一个在playbook中调用redis lookup的task，从本地的redis中取中一个key为weather的值：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: lookup value in redis\n  debug: msg=\"{{ lookup('redis_kv', 'redis://localhost:6379,weather')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其中URL部分如果不指定，该模块会默认连接到"),a("code",[s._v("redis://localhost:6379")]),s._v("，所以实际上在上面的实例中，调用可以直接写成如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{{ lookup('redis_kv', 'weather')}}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"_7-etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-etcd"}},[s._v("#")]),s._v(" 7. etcd")]),s._v(" "),a("p",[s._v("etcd是一个分布式的key-value存储，通常被用于保存配置信息或者被用于实现服务发现。可以使用etcd lookup来从etcd中获取指定key的value。")]),s._v(" "),a("p",[s._v("我们通过如下方法往一个etcd中写入一个key：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("curl -L http://127.0.0.1:4001/v2/keys/weather -XPUT -d value=sunny\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("定义一个调用etcd插件的task：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: look up value in etcd\n  debug: msg=\"{{ lookup('etcd','weather')}}\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("默认情况下，etcd lookup会在http://127.0.0.1:4001上查找etcd服务器。但我们在执行playbook之前可以通过设置"),a("code",[s._v("ANSIBLE_ETCD_URL")]),s._v("环境变量来修改这个设置。")]),s._v(" "),a("h1",{attrs:{id:"_8-password"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-password"}},[s._v("#")]),s._v(" 8. password")]),s._v(" "),a("p",[s._v("password lookup会随机生成一个密码，并将这个密码写入到参数指定的文件中。如下示例，创建一个名为bob的mysql用户，并随机生成该用户的密码，并将密码写入到主控端的bob-password.txt中：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- name: create deploy mysql user\n  mysql_user: name=bob password={{ lookup('password', 'bob-password,txt')}} priv=*.*:ALL state=present\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"_9-dnstxt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-dnstxt"}},[s._v("#")]),s._v(" 9. dnstxt")]),s._v(" "),a("p",[s._v("dnstxt lookup用于获取指定域名的TXT记录。需要在主控端安装python-dns。")]),s._v(" "),a("p",[s._v("使用方法如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('- name: lookup TXT record\n  debug: msg="{{ lookup(\'dnstxt\', "aliyun.com") }}"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果某一个主机有多个相关联的TXT记录，那么模块会把他们连在一起，并且每次调用时的连接顺序可能不同")]),s._v(" "),a("blockquote",[a("p",[s._v("参考链接：")]),s._v(" "),a("p",[s._v("https://www.cnblogs.com/breezey/p/9275799.html")]),s._v(" "),a("p",[s._v("https://blog.51cto.com/cloumn/blog/1544")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
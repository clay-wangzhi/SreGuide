(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{1125:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("# 第34章 陷阱")]),s._v(" "),n("blockquote",[n("p",[s._v("Turandot: Gli enigmi sono tre, la morte una!\nCaleph: No, no! Gli enigmi sono tre, una la vita!")])]),s._v(" "),n("blockquote",[n("p",[s._v("——Puccini")])]),s._v(" "),n("h3",{attrs:{id:"以下的做法-非推荐-将让你原本平淡无奇的生活激动不已。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#以下的做法-非推荐-将让你原本平淡无奇的生活激动不已。"}},[s._v("#")]),s._v(" 以下的做法（非推荐）将让你原本平淡无奇的生活激动不已。")]),s._v(" "),n("ul",[n("li",[s._v("将保留字或特殊字符声明为变量名。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("case")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value0       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引发错误。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("23skidoo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也会引发错误。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以数字开头的变量名是被shell保留使用的。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 试试_23skidoo=value1。以下划线开头的变量名就没问题.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然而 . . .   只用一个下划线作为变量名就不行。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("_")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $_是一个特殊变量, 代表最后一个命令的最后一个参数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是，_是一个有效的函数名！")]),s._v("\n\nxyz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引起严重的错误。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Bash3.0之后，标点不能出现在变量名中。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("ul",[n("li",[s._v("使用连字符或其他保留字符来做变量名（或函数名）。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("var-1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用 'var_1 代替。")]),s._v("\n\nfunction-whatever "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用 ‘function_whatever ()’ 代替。")]),s._v("\n\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Bash3.0之后，标点不能出现在函数名中。")]),s._v("\nfunction.whatever "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用 ‘functionWhatever ()’ 代替。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("让变量名与函数名相同。 这会使得脚本的可读性变得很差。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("do_something")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This function does something with '),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("do_something")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("do_something\n\ndo_something do_something\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这么做是合法的，但会让人混淆。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("不合时宜的使用[空白符][1]。与其他编程语言相比，Bash非常讲究空白符的使用。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("var1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ‘var1=23’才是正确的。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对于上边这一行来说，Bash会把“var1”当作命令来执行，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# “=”和“23”会被看作“命令”“var1”的参数。")]),s._v("\n\t\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ‘let c=$a-$b’或‘let "c = $a - $b"’才是正确的。')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -le "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ $a -le 5 ]   是正确的。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#           ^^      if [ "$a" -le 5 ]   这么写更好。')]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [[ $a -le 5 ]] 也行。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("在[大括号包含的代码块][2]中，最后一条命令没有以[分号][3]结尾。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Done."')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash: syntax error: unexpected end of file")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Done."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                        ^     ### 最后的这条命令必须以分号结尾。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("假定未被初始化的变量（赋值前的变量）被“清0”。事实上，未初始化的变量值为“null”，而不是0。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"uninitialized_var = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uninitialized_var")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uninitialized_var =")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是 . . .")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if $BASH_VERSION ≥ 4.2; then")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -v uninitialized_var "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uninitialized_var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Initialize it to zero!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("ul",[n("li",[s._v("混淆测试符号=和-ep。请记住，=用于比较字符变量，而-ep用来比较整数。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("273")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $a是整数还是字符串？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("273")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $a为整数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有些情况下，即使你混用-ep和=，也不会产生错误的结果。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然而 . . .")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("273.0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不是一个整数。")]),s._v("\n\t   \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("273")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Comparison works."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("  \n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Comparison does not work."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Comparison does not work.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 与a=" 273"和a="0273"相同。')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类似的， 如果对非整数值使用“-ep”的话，就会产生问题。")]),s._v("\n\t   \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("273.0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 产生了错误消息而退出。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test.sh: [: 273.0: integer expression expected")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("ul",[n("li",[s._v("误用了[字符串比较][4]操作符。")])]),s._v(" "),n("p",[s._v("样例 34-1. 数字比较与字符串比较并不相同")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bad-op.sh: 尝试一下对整数使用字符串比较。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  下面的"while循环"有两个过错误:')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 一个比较明显，而另一个比较隐蔽。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 错！应该是:  while [ "$number" -lt 5 ]')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v(' "')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number += 1"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果试图运行这个错误的脚本，就会得到一个错误信息:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ bad-op.sh: line 10: 5: No such file or directory")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  在单中括号结构（[ ]）中，"<"必须被转义，')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 即便如此，比较两个整数仍是错误的。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---------------------"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  1 2 3 4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v(' "')]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  看起来好像可以工作，但是 . . .")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number += 1"')]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 事实上是比较ASCII码，")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 而不是整数比较。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---------------------"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这么做会产生问题。比如:")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("lesser")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("greater")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("105")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greater")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$lesser")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greater")]),s._v(" is less than "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$lesser")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 105 is less than 5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  事实上，在字符串比较中（按照ASCII码的顺序）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#+ "105"小于"5"。')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("ul",[n("li",[s._v("试图用[let][5]来设置字符串变量。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = hello, you"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("有时候在“test”中括号（[ ]）结构里的变量需要被引用起来（双引号）。如果不这么做的话，可能会引起不可预料的结果。请参考[例子 7-6][6]，[例子 16-5][7]，[例子 9-6][8]。")])]),s._v(" "),n("li",[n("p",[s._v("[为防分隔][9]，用双引号引用一个包含空白符的变量。 有些情况下，这会产生[意想不到的后果][10]。")])]),s._v(" "),n("li",[n("p",[s._v("脚本中的命令可能会因为脚本宿主不具备相应的运行权限而导致运行失败。如果用户在命令行中不能调用这个命令的话，那么即使把它放到脚本中来运行，也还是会失败。这时可以通过修改命令的属性来解决这个问题，有时候甚至要给它设置suid位(当然, 要以root身份来设置)。")])]),s._v(" "),n("li",[n("p",[s._v("试图使用-作为作为重定向操作符（事实上它不是），通常都会导致令人不快的结果。")])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("command1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" command2\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 试图将command1的错误输出重定向到一个管道中 . . .")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# . . . 不会工作。")]),s._v("\n\ncommand1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">&")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" command2  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也没效果。")]),s._v("\n\n感谢，S.C。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("使用[Bash 2.0或更高版本][11]的功能，可以在产生错误信息的时候，引发修复动作。但是比较老的Linux机器默认安装的可能是Bash 1.XX。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minimum_version")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为Chet Ramey经常给Bash添加一些新的特征，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所以你最好将$minimum_version设置为2.XX，3.XX，或是其他你认为比较合适的值。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("E_BAD_VERSION")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$BASH_VERSION")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$minimum_version")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This script works only with Bash, version '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$minimum")]),s._v(' or greater."')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Upgrade strongly recommended."')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$E_BAD_VERSION")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("在非Linux机器上的[Bourne shell][12]脚本( "),n("strong",[s._v("#!/bin/sh")]),s._v(" )中使用Bash特有的功能，[可能会引起不可预料的行为][13]。Linux系统通常都会把"),n("strong",[s._v("bash")]),s._v("别名化为"),n("strong",[s._v("sh")]),s._v("，但是在一般的UNIX机器上却不一定会这么做。")])]),s._v(" "),n("li",[n("p",[s._v("使用Bash未文档化的特征，将是一种危险的举动。本书之前的几个版本就依赖一个这种“特征”，下面说明一下这个“特征”，虽然[exit][14]或[return][15]所能返回的最大正值为255，但是并没有限制我们使用负整数。不幸的是, Bash 2.05b之后的版本，这个漏洞消失了。请参考[例子 24-9][16]。")])]),s._v(" "),n("li",[n("p",[s._v("在某些情况下，会返回一个误导性的[退出状态][17]。[设置一个函数内的局部变量][18]或[分配一个算术值给一个变量][19]时，就有可能发生这种情况。")])]),s._v(" "),n("li",[n("p",[s._v("[算术表达式的退出状态][20]不等同于一个错误代码。")])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("var"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        ^^^^^^^^^ 在这里，这个与列表返回错误代码1而终止。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                     不会打印$var的值！")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("一个带有DOS风格换行符(\\r\\n)的脚本将会运行失败，因为**#!/bin/bash\\r\\n"),n("strong",[s._v("是不合法的，与我们所期望的")]),s._v("#!/bin/bash\\n**不同，解决办法就是将这个脚本转换为UNIX风格的换行符。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Here"')]),s._v("\n\nunix2dos "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脚本先将自己改为DOS格式。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更改可执行权限。")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'unix2dos'会删除可执行权限")]),s._v("\n\n./"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脚本尝试再次运行自己。")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但它作为一个DOS文件，已经不能运行了。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("以**#!/bin/sh"),n("strong",[s._v("开头的Bash脚本，不能在完整的Bash兼容模式下运行。某些Bash特定的功能可能会被禁用。如果脚本需要完整的访问所有Bash专有扩展，那么它需要使用")]),s._v("#!/bin/bash**作为开头。")])]),s._v(" "),n("li",[n("p",[s._v("如果在[here document][21]中，[结尾的limit string之前加上空白字符][22]的话，将会导致脚本的异常行为。")])]),s._v(" "),n("li",[n("p",[s._v("在一个[输出被捕获][23]的函数中放置了不止一个echo语句。")])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("add2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Whatever ... "')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删掉zhehan")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"retval = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$retval")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("43")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sum of '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num1")]),s._v(" and "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num2")]),s._v(" = "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("add2 $num1 $num2"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   Sum of 12 and 43 = Whatever ... ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   55")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        这些echo连在一起了。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("这是[行不通][24]的。")]),s._v(" "),n("ul",[n("li",[s._v("脚本不能将变量export到它的[父进程]"),n("a",{attrs:{href:"%E5%8D%B3%E8%B0%83%E7%94%A8%E8%BF%99%E4%B8%AA%E8%84%9A%E6%9C%AC%E7%9A%84shell"}},[s._v("25")]),s._v("，或父进程的环境中。就好比我们在生物学中所学到的那样，子进程只会继承父进程, 反过来则不行。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WHATEVER")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/bozo\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" WHATEVER\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("bash$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WHATEVER")]),s._v("\nbash$\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("可以确定的是，即使回到命令行提示符，变量$WHATEVER仍然没有被设置。")])]),s._v(" "),n("li",[n("p",[s._v("在[子shell][26]中设置和操作变量之后，如果尝试在子shell作用域之外使用同名变量的话, 将会产生令人不快的结果。")])])]),s._v(" "),n("p",[s._v("样例 34-2. 子shell缺陷")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 子shell中的变量缺陷。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("outer_variable")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("outer\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outer_variable = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$outer_variable")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始子shell")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outer_variable inside subshell = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$outer_variable")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("inner_variable")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("inner  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inner_variable inside subshell = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$inner_variable")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("outer_variable")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("inner  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会修改全局变量吗？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outer_variable inside subshell = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$outer_variable")]),s._v('"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果将变量‘导出’会产生不同的结果么？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    export inner_variable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    export outer_variable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 试试看。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结束子shell")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inner_variable outside subshell = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$inner_variable")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unset.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outer_variable outside subshell = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$outer_variable")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unchanged.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你去掉第19和第20行的注释会怎样？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会产生不同的结果吗？")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("ul",[n("li",[s._v("将echo的输出通过[管道][27]传递给[read][28]命令可能会产生不可预料的结果。在这种情况下，read命令的行为就好像它在子shell中运行一样。可以使用[set][29]命令来代替(就好像[例子15-18][30]一样)。")])]),s._v(" "),n("p",[s._v("样例 34-3. 将echo的输出通过管道传递给read命令")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  badread.sh:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  尝试使用'echo'和'read'命令")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 非交互的给变量赋值。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   shopt -s lastpipe")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("aaa\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bbb\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("c")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ccc\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a b c\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 尝试重新给变量a，b，和c赋值。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a = aaa")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b = bbb")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c = ccc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新赋值失败。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 但如果 . . .")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##  去掉第6行的注释:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   shopt -s lastpipe")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##+ 就能解决这个问题！")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 这是Bash 4.2版本的新特性。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 试试下边这种方法。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("c")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-------"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a = one")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b = two")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c = three ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新赋值成功。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  也请注意，echo到'read'的值只会在子shell中起作用。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  所以，变量的值*只*会在子shell中被修改。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("aaa          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新开始。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bbb\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("c")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ccc\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a b c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Inside subshell: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a = one")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b = two")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c = three")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----------------"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Outside subshell: "')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a = aaa")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b = bbb")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c = ccc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("p",[s._v("事实上，也正如Anthony Richardson指出的那样，通过管道将输出传递到任何循环中, 都会引起类似的问题。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环的管道问题。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  这个例子由Anthony Richardson编写，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 由Wilbert Berendsen补遗。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(" -type f -atime +30 -size 100k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" f\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$f")]),s._v(' is over 100KB and has not been accessed in over 30 days"')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consider moving the file to archives."')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------------")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Subshell level = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASH_SUBSHELL")]),s._v('"')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Subshell level = 1")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 没错, 现在是在子shell中运行。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n   \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  变量foundone在这里肯定是false，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 因为它是在子shell中被设置为true的。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$foundone")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"No files need archiving."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# =====================现在，下边是正确的方法:=================")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("f")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(" -type f -atime +30 -size 100k"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里没使用管道。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$f")]),s._v(' is over 100KB and has not been accessed in over 30 days"')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consider moving the file to archives."')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n   \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$foundone")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"No files need archiving."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==================这里是另一种方法==================")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  将脚本中读取变量的部分放到一个代码块中，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 这样一来，它们就能在相同的子shell中共享了。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  感谢，W.B。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(" -type f -atime +30 -size 100k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" f\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$f")]),s._v(' is over 100KB and has not been accessed in over 30 days"')]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consider moving the file to archives."')]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("foundone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$foundone")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"No files need archiving."')]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br")])]),n("ul",[n("li",[s._v("一个相关的问题：当你尝试将tail -f的stdout通过管道传递给[grep][31]时，会产生问题。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -f /var/log/messages "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ERROR_MSG")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" error.log\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  “error.log”文件将不会写入任何东西。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  正如Samuli Kaipiainen指出的那样，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 这一结果是从grep的缓冲区输出的。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  解决的办法就是把“--line-buffered”参数添加到grep中。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("在脚本中使用“suid”命令是非常危险的，因为这会危及系统安全。"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote1"}},[s._v("[1]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})])])]),s._v(" "),n("li",[n("p",[s._v("使用shell脚本来编写CGI程序是值得商榷的。因为Shell脚本的变量不是“类型安全”的，当CGI被关联的时候，可能会产生令人不快的行为。此外，它还很难抵挡住“破解的考验”。")])]),s._v(" "),n("li",[n("p",[s._v("Bash不能正确地处理[双斜线(//)字符串][32]。")])]),s._v(" "),n("li",[n("p",[s._v("在Linux或BSD上编写的Bash脚本，可能需要修改一下，才能使它们运行在商业的UNIX机器上。这些脚本通常都使用GNU命令和过滤工具，GNU工具通常都比一般的UNIX上的同类工具更加强大。这方面的一个非常明显的例子就是，文本处理工具[tr][33]。")])]),s._v(" "),n("li",[n("p",[s._v("遗憾的是，更新Bash本身就会破坏[过去工作完全正常][34]的脚本。让我们回顾一下[使用无正式文件的Bash功能有多危险][35]。")])])]),s._v(" "),n("blockquote",[n("p",[s._v("危险正在接近你 --\n小心，小心，小心，小心。\n许多勇敢的心都在沉睡。\n所以一定要小心 --\n小心。")])]),s._v(" "),n("blockquote",[n("p",[s._v("——A.J. Lamb and H.W. Petrie\n[1]: http://tldp.org/LDP/abs/html/special-chars.html#WHITESPACEREF\n[2]: http://tldp.org/LDP/abs/html/special-chars.html#CODEBLOCKREF\n[3]: http://tldp.org/LDP/abs/html/special-chars.html#SEMICOLONREF\n[4]: http://tldp.org/LDP/abs/html/comparison-ops.html#SCOMPARISON1\n[5]: http://tldp.org/LDP/abs/html/internal.html#LETREF\n[6]: http://tldp.org/LDP/abs/html/comparison-ops.html#STRTEST\n[7]: http://tldp.org/LDP/abs/html/redircb.html#REDIR2\n[8]: http://tldp.org/LDP/abs/html/internalvariables.html#ARGLIST\n[9]: http://tldp.org/LDP/abs/html/quotingvar.html#WSQUO\n[10]: http://tldp.org/LDP/abs/html/quotingvar.html#VARSPLITTING\n[11]: http://tldp.org/LDP/abs/html/bashver2.html#BASH2REF\n[12]: http://tldp.org/LDP/abs/html/why-shell.html#BASHDEF\n[13]: http://tldp.org/LDP/abs/html/gotchas.html#BINSH\n[14]: http://tldp.org/LDP/abs/html/exit-status.html#EXITSTATUSREF\n[15]: http://tldp.org/LDP/abs/html/complexfunct.html#RETURNREF\n[16]: http://tldp.org/LDP/abs/html/complexfunct.html#RETURNTEST\n[17]: http://tldp.org/LDP/abs/html/exit-status.html#EXITSTATUSREF\n[18]: http://tldp.org/LDP/abs/html/localvar.html#EXITVALANOMALY01\n[19]: http://tldp.org/LDP/abs/html/internal.html#EXITVALANOMALY02\n[20]: http://tldp.org/LDP/abs/html/testconstructs.html#ARXS\n[21]: http://tldp.org/LDP/abs/html/here-docs.html#HEREDOCREF\n[22]: http://tldp.org/LDP/abs/html/here-docs.html#INDENTEDLS\n[23]: http://tldp.org/LDP/abs/html/assortedtips.html#RVT\n[24]: http://tldp.org/LDP/abs/html/assortedtips.html#RVTCAUTION\n[25]: http://tldp.org/LDP/abs/html/internal.html#FORKREF\n[26]: http://tldp.org/LDP/abs/html/subshells.html#SUBSHELLSREF\n[27]: http://tldp.org/LDP/abs/html/special-chars.html#PIPEREF\n[28]: http://tldp.org/LDP/abs/html/internal.html#READREF\n[29]: http://tldp.org/LDP/abs/html/internal.html#SETREF\n[30]: http://tldp.org/LDP/abs/html/internal.html#SETPOS\n[31]: http://tldp.org/LDP/abs/html/textproc.html#GREPREF\n[32]: http://tldp.org/LDP/abs/html/internal.html#DOUBLESLASHREF\n[33]: http://tldp.org/LDP/abs/html/textproc.html#TRREF\n[34]: http://tldp.org/LDP/abs/html/string-manipulation.html#PARAGRAPHSPACE\n[35]: http://tldp.org/LDP/abs/html/gotchas.html#UNDOCF\n[36]: http://tldp.org/LDP/abs/html/fto.html#SUIDREF")])]),s._v(" "),n("h4",{attrs:{id:"注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),n("hr",{staticClass:"footnotes-sep"}),s._v(" "),n("section",{staticClass:"footnotes"},[n("ol",{staticClass:"footnotes-list"},[n("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[n("p",[s._v("在Linux和绝大多数的UNIX机器上，给脚本设置[suid][36]权限是没用的。 "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[s._v("↩︎")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
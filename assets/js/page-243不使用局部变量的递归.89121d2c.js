(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{1114:function(s,n,a){"use strict";a.r(n);var e=a(1),i=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_24-3-不使用局部变量的递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-3-不使用局部变量的递归"}},[s._v("#")]),s._v(" 24.3 不使用局部变量的递归")]),s._v(" "),a("p",[s._v("即使不适用局部变量，函数也可以递归的调用自身。")]),s._v(" "),a("h2",{attrs:{id:"斐波那契序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契序列"}},[s._v("#")]),s._v(" 斐波那契序列")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# fibo.sh : 斐波那契序列 (递归)\n# 作者: M. Cooper\n# License: GPL3\n\n# ----------算法--------------\n# Fibo(0) = 0\n# Fibo(1) = 1\n# else\n#   Fibo(j) = Fibo(j-1) + Fibo(j-2)\n# ---------------------------------\n\nMAXTERM=15       # 要产生的计算次数。\nMINIDX=2         # 如果下标小于2，那么 Fibo(idx) = idx.\n\nFibonacci ()\n{\n    idx=$1   # 不需要是局部变量，为什么？\n    if [ "$idx" -lt "$MINIDX" ]\n    then\n        echo "$idx"  # 前两个下标是0和1 ... 从上面的算法可以看出来。\n    else\n        (( --idx ))  # j-1\n        term1=$( Fibonacci $idx )   #  Fibo(j-1)\n        (( --idx ))  # j-2\n        term2=$( Fibonacci $idx )   #  Fibo(j-2)\n        echo $(( term1 + term2 ))\n    fi\n    #  一个丑陋的实现\n    #  C语言里，一个更加优雅的斐波那契递归实现\n    #+ 是一个简单的只需要7-10代码的算法翻译。\n}\n\nfor i in $(seq 0 $MAXTERM)\ndo  # 计算 $MAXTERM+1 次.\n    FIBO=$(Fibonacci $i)\n    echo -n "$FIBO "\ndone\n# 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610\n# 要花费一段时间，不是么？ 一个递归脚本是有些慢的。\n\necho\n\nexit 0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])]),a("p",[s._v("例子 24-17. 汉诺塔")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#! /bin/bash\n#\n# 汉诺塔\n# Bash script\n# Copyright (C) 2000 Amit Singh. All Rights Reserved.\n# http://hanoi.kernelthread.com\n#\n# 在 Bash version 2.05b.0(13)-release下通过测试.\n# 同样在Bash3.x版本下工作正常。\n#\n#  在 "Advanced Bash Scripting Guide" 一书中使用\n#+ 经过了脚本作者的许可。\n#  ABS的作者对脚本进行了轻微的修改和注释。\n#=================================================================#\n#  汉诺塔是由Edouard Lucas,提出的数学谜题， \n#+  他是19世纪的法国数学家。\n#\n# 有三个直立的柱子竖在地面上。\n# 第一个柱子上有一组盘子套在上面。\n# 这些盘子是平的，中间有孔，\n#+ 可以套在柱子上面。\n# 这些盘子的直径不同，它们从下而上， \n#+ 按照尺寸递减的顺序摆放。\n# 也就是说，最小的在最上边，最大的在最下面。\n#\n# 现在的任务是要把这组盘子  \n#+ 从一个柱子上全部搬到另一个柱子上 \n# 你每次只能将一个盘子从一个柱子移到另一个柱子上。\n# 你也可以把盘子从其他的柱子上移回到原来的柱子上。\n# 你只能把小的盘子放到大的盘子上。\n#+ 反过来就不行。\n# 切记，绝对不能把大盘子放到小盘子的上面。\n# 如果盘子的数量比较少，那么移不了几次就能完成。\n#+ 但是随着盘子数量的增加，\n#+ 移动次数几乎成倍的增长，\n#+ 而且移动的“策略”也会变得越来越复杂。\n#\n# 想了解更多信息的话，请访问http://hanoi.kernelthread.com\n#+ 或者 pp. 186-92 of _The Armchair Universe_ by A.K. Dewdney.\n#\n#\n#           ...             ...         ...\n#           | |             | |         | |\n#          _|_|_            | |         | |\n#         |_____|           | |         | |\n#        |_______|          | |         | |\n#       |_________|         | |         | |\n#      |___________|        | |         | |\n#     |             |       | |         | |\n# .--------------------------------------------------------------. \n# |**************************************************************| \n#            #1              #2          #3\n# #=================================================================#\n\nE_NOPARAM=66  # 没有参数传给脚本。\nE_BADPARAM=67 # 传给脚本的盘子个数不符合要求。\nMoves=        # 保存移动次数的全局变量。\n              # 这里修改了原来的脚本。\n\ndohanoi() {   # 递归函数\n    case $1 in\n    0)\n        ;;\n    *)\n        dohanoi "$(($1-1))" $2 $4 $3\n        echo move $2 "--\x3e" $3\n        ((Moves++))          # 这里修改了原来的脚本。\n        dohanoi "$(($1-1))" $4 $3 $2\n        ;;\n    esac \n}\n\ncase $# in\n    1) case $(($1>0)) in     # 至少要有一个盘子\n        1)  # Nested case statement.\n            dohanoi $1 1 3 2\n            echo "Total moves = $Moves"     # 2^n - 1, where n = # of disks.\n            exit 0;\n            ;; \n        *)    \n            echo "$0: illegal value for number of disks";\n            exit $E_BADPARAM;\n            ;;\n        esac ;;\n    *)\n        echo "usage: $0 N"\n        echo "       Where \\"N\\" is the number of disks."\n        exit $E_NOPARAM;\n        ;;\n    esac\n\n# 练习:\n# ---------\n# 1) 这个位置以下的代码会不会执行？ \n#    为什么不(容易)\n# 2) 解释一下这个 "dohanoi" 函数的运行原理.\n#    (比较难 可以参考上面的Dewdney 的引用)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br")])])])}),[],!1,null,null,null);n.default=i.exports}}]);
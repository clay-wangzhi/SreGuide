(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{1064:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_5-1-引用变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-引用变量"}},[s._v("#")]),s._v(" 5.1 引用变量")]),s._v(" "),t("p",[s._v("引用变量时，通常建议将变量包含在双引号中。因为这样可以防止除 "),t("code",[s._v("$")]),s._v("，"),t("code",[s._v("`")]),s._v("（反引号）和"),t("code",[s._v("\\")]),s._v("（转义符）之外的其他特殊字符被重新解释。"),t("sup",{staticClass:"footnote-ref"},[t("a",{attrs:{href:"#footnote1"}},[s._v("[1]")]),t("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})]),s._v("在双引号中仍然可以使用"),t("code",[s._v("$")]),s._v("引用变量（"),t("code",[s._v('"$variable"')]),s._v("），也就是将变量名替换为变量值（详情查看样例 4-1）。")]),s._v(" "),t("p",[s._v("使用双引号可以防止字符串被分割。"),t("sup",{staticClass:"footnote-ref"},[t("a",{attrs:{href:"#footnote2"}},[s._v("[2]")]),t("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})]),s._v("即使参数中拥有很多空白分隔符，被包在双引号中后依旧是算作单一字符。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$List")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 空白符将变量分成几个部分。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# one")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# two")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# three")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$List")]),s._v('"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在单一变量中保留所有空格。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ^     ^")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# one two three")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("下面是一个更加复杂的例子：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("variable1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a variable containing five words"')]),s._v("\nCOMMAND This is "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable1")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 带上7个参数执行COMMAND命令：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "This" "is" "a" "variable" "containing" "five" "words"')]),s._v("\n\nCOMMAND "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable1")]),s._v('"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 带上1个参数执行COMMAND命令：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "This is a variable containing five words"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("variable2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 空值。")]),s._v("\n\nCOMMAND  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不带参数执行COMMAND命令。")]),s._v("\nCOMMAND "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v('"')]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 带上3个参数执行COMMAND命令。")]),s._v("\nCOMMAND "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable2")]),s._v('"')]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 带上1个参数执行COMMAND命令（2空格）。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 感谢 Stéphane Chazelas。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("blockquote",[t("p",[t("img",{attrs:{src:"http://tldp.org/LDP/abs/images/tip.gif",alt:"info"}}),s._v(" 当字符分割或者保留空白符出现问题时，才需要在"),t("code",[s._v("echo")]),s._v("语句中用双引号包住参数。")])]),s._v(" "),t("p",[s._v("样例 5-1. 输出一些奇怪的变量")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# weirdvars.sh: 输出一些奇怪的变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'(]"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v("{}\\$"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '(]\\{}$\"")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v('"')]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '(]\\{}$\"     没有任何区别。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\'\necho "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("        # '")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"     \\ 被转换成了空格，为什么？\necho "')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"      # \'(]\\{}$"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上面的例子由 Stephane Chazelas 提供。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var2")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var2")]),s._v('"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# \\\\"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 但是...var2="\\\\\\\\"" 不是合法的语句，为什么？')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v("'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var3")]),s._v('"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\\\\\\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强引用是可以的。")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ************************************************************ #")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就像第一个例子展示的那样，嵌套引用是允许的。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ^           ^")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在有些时候这种方法非常有用。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Two bits"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var1")]),s._v(' = "')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var1")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $var1 = Two bits")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ^                ^")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者，可以像 Chris Hiestand 指出的那样：")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$My_File1")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$My_File2")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     ^     ^         ^ ^     ^     ^         ^ ^")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ************************************************************ #")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br")])]),t("p",[s._v("单引号（' '）与双引号类似，但是在单引号中不能引用变量，因为 "),t("code",[s._v("$")]),s._v(" 不再具有特殊含义。在单引号中，除"),t("code",[s._v("'")]),s._v("之外的所有特殊字符都将会被直接按照字面意思解释。可以认为单引号（“全引用”）是双引号（“部分引用”）的一种更严格的形式。")]),s._v(" "),t("blockquote",[t("p",[t("img",{attrs:{src:"http://tldp.org/LDP/abs/images/note.gif",alt:"extra"}}),s._v(" 因为在单引号中转义符（\\）都已经按照字面意思解释了，因此尝试在单引号中包含单引号将不会产生你所预期的结果。")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Why can't I write 's between single quotes\"")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以采取迂回的方式。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Why can'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("'"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t I write '")]),s._v('"'),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"'")]),s._v("s between single quotes'\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    |-------|  |----------|   |-----------------------|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由三个单引号引用的字符串，再加上转义以及双引号包住的单引号组成。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 感谢 Stéphane Chazelas 提供的例子。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("hr",{staticClass:"footnotes-sep"}),s._v(" "),t("section",{staticClass:"footnotes"},[t("ol",{staticClass:"footnotes-list"},[t("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[t("p",[s._v('在命令行里，如果双引号包含了 "!" 将会产生错误。这是因为shell将其解释为查看历史命令。而在脚本中，因为历史机制已经被关闭，所以不会产生这个问题。'),t("br"),s._v("我们更加需要注意的是在双引号中 "),t("code",[s._v("\\")]),s._v(" 的反常行为，尤其是在使用 "),t("code",[s._v("echo -e")]),s._v(" 命令时。"),t("br"),t("pre",[s._v("bash$ echo hello\\!"),t("br"),s._v("hello!"),t("br"),s._v('bash$ echo "hello\\!"'),t("br"),s._v("hello\\!"),t("br"),t("br"),t("br"),s._v("bash$ echo \\"),t("br"),s._v(">"),t("br"),s._v('bash$ echo "\\"'),t("br"),s._v(">"),t("br"),s._v("bash$ echo \\a"),t("br"),s._v("a"),t("br"),s._v('bash$ echo "\\a"'),t("br"),s._v("\\a"),t("br"),t("br"),t("br"),s._v("bash$ echo x\\ty"),t("br"),s._v("xty"),t("br"),s._v('bash$ echo "x\\ty"'),t("br"),s._v("x\\ty"),t("br"),t("br"),s._v("bash$ echo -e x\\ty"),t("br"),s._v("xty"),t("br"),s._v('bash$ echo -e "x\\ty"'),t("br"),s._v("x       y")]),s._v("在 "),t("code",[s._v("echo")]),s._v(" 后的双引号中一般会转义 "),t("code",[s._v("\\")]),s._v("。并且 "),t("code",[s._v("echo -e")]),s._v(" 会将 "),t("code",[s._v('"\\t"')]),s._v(" 解释成制表符。"),t("br"),s._v("（感谢 Wayne Pollock 提出这些；感谢Geoff Lee 与 Daniel Barclay 对此做出的解释。） "),t("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[s._v("↩︎")])])]),s._v(" "),t("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[t("p",[s._v("字符分割（word splitting）在本文中的意思是指将一个字符串分割成独立的、离散的变量。 "),t("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[s._v("↩︎")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
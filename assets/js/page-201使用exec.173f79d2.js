(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{1109:function(s,n,a){"use strict";a.r(n);var e=a(1),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_20-1-使用-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-使用-exec"}},[s._v("#")]),s._v(" 20.1 使用 exec")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("exec < filename")]),s._v(" 命令重定向了 "),a("code",[s._v("标准输入")]),s._v(" 到一个文件。自此所有 "),a("code",[s._v("标准输入")]),s._v(" 都来自该文件而不是默认来源(通常是键盘输入)。在使用 "),a("a",{attrs:{href:"http://tldp.org/LDP/abs/html/sedawk.html#SEDREF",target:"_blank",rel:"noopener noreferrer"}},[s._v("sed"),a("OutboundLink")],1),s._v(" 和 "),a("a",{attrs:{href:"http://tldp.org/LDP/abs/html/awk.html#AWKREF",target:"_blank",rel:"noopener noreferrer"}},[s._v("awk"),a("OutboundLink")],1),s._v(" 时候这种方式可以逐行读文件并逐行解析。")]),s._v(" "),a("p",[s._v("样例 20-1. 使用 "),a("code",[s._v("exec")]),s._v(" 重定向 标准输入")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# 使用 \'exec\' 重定向 标准输入 .\n\n\nexec 6<&0          # 链接文件描述符 #6 到标准输入.\n                   # .\n\nexec < data-file   # 标准输入被文件 "data-file" 替换\n\nread a1            # 读取文件 "data-file" 首行.\nread a2            # 读取文件 "data-file" 第二行\n\necho\necho "Following lines read from file."\necho "-------------------------------"\necho $a1\necho $a2\n\necho; echo; echo\n\nexec 0<&6 6<&-\n#  现在在之前保存的位置将从文件描述符 #6 将 标准输出 恢复.\n#+ 且关闭文件描述符 #6 ( 6<&- ) 让其他程序正常使用.\n#\n# <&6 6<&-    also works.\n\necho -n "Enter data  "\nread b1  # 现在按预期的，从正常的标准输入 "read".\necho "Input read from stdin."\necho "----------------------"\necho "b1 = $b1"\n\necho\n\nexit 0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[s._v("同理, "),a("code",[s._v("exec >filename")]),s._v(" 重定向 标准输出 到指定文件. 他将所有的命令输出通常是 标准输出 重定向到指定的位置.")]),s._v(" "),a("p",[a("code",[s._v("exec N > filename")]),s._v(" 影响整个脚本或当前 shell。"),a("a",{attrs:{href:"http://tldp.org/LDP/abs/html/special-chars.html#PROCESSIDREF",target:"_blank",rel:"noopener noreferrer"}},[s._v("PID"),a("OutboundLink")],1),s._v(" 从重定向脚本或 shell 的那时候已经发生了改变. 然而 "),a("code",[s._v("N > filename")]),s._v(" 影响的就是新派生的进程，而不是整个脚本或 shell。")]),s._v(" "),a("p",[s._v("样例 20-2. 使用 exec 重定向标准输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# reassign-stdout.sh\n\nLOGFILE=logfile.txt\n\nexec 6>&1           # 链接文件描述符 #6 到标准输出.\n                    # 保存标准输出.\n\nexec > $LOGFILE     # 标准输出被文件 "logfile.txt" 替换.\n\n# ----------------------------------------------------------- #\n# 所有在这个块里的命令的输出都会发送到文件 $LOGFILE.\n\necho -n "Logfile: "\ndate\necho "-------------------------------------"\necho\n\necho "Output of \\"ls -al\\" command"\necho\nls -al\necho; echo\necho "Output of \\"df\\" command"\necho\ndf\n\n# ----------------------------------------------------------- #\n\nexec 1>&6 6>&-      # 关闭文件描述符 #6 恢复 标准输出.\n\necho\necho "== stdout now restored to default == "\necho\nls -al\necho\n\nexit 0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("p",[s._v("样例 20-3. 用 exec 在一个脚本里同时重定向 标准输入 和 标准输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# upperconv.sh\n# 转化指定的输入文件成大写.\n\nE_FILE_ACCESS=70\nE_WRONG_ARGS=71\n\nif [ ! -r "$1" ]     # 指定的输入文件是否可读?\nthen\n  echo "Can\'t read from input file!"\n  echo "Usage: $0 input-file output-file"\n  exit $E_FILE_ACCESS\nfi                   #  同样的错误退出\n                     #+ 等同如果输入文件 ($1) 未指定 (为什么?).\n\nif [ -z "$2" ]\nthen\n  echo "Need to specify output file."\n  echo "Usage: $0 input-file output-file"\n  exit $E_WRONG_ARGS\nfi\n\n\nexec 4<&0\nexec < $1            # 将从输入文件读取.\n\nexec 7>&1\nexec > $2            # 将写入输出文件.\n                     # 假定输出文件可写 (增加检测?).\n\n# -----------------------------------------------\n    cat - | tr a-z A-Z   # 转化大写.\n#   ^^^^^                # 读取标准输入.\n#           ^^^^^^^^^^   # 写到标准输出.\n# 然而标准输入和标准输出都会被重定向.\n# 注意 \'cat\' 可能会被遗漏.\n# -----------------------------------------------\n\nexec 1>&7 7>&-       # 恢复标准输出.\nexec 0<&4 4<&-       # 恢复标准输入.\n\n# 恢复后, 下面这行会预期从标准输出打印.\necho "File \\"$1\\" written to \\"$2\\" as uppercase conversion."\n\nexit 0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("p",[s._v("I/O 重定向是种明智的规避 "),a("a",{attrs:{href:"http://tldp.org/LDP/abs/html/subshells.html#PARVIS",target:"_blank",rel:"noopener noreferrer"}},[s._v("inaccessible variables within a subshell"),a("OutboundLink")],1),s._v(" 问题的方法.")]),s._v(" "),a("p",[s._v("样例 20-4. 规避子 shell")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# avoid-subshell.sh\n# Matthew Walker 的建议.\n\nLines=0\n\necho\n\ncat myfile.txt | while read line;\n                 do {\n                   echo $line\n                   (( Lines++ ));  #  递增变量的值趋近外层循环\n                                   #  使用子 shell 会有问题.\n                 }\n                 done\n\necho "Number of lines read = $Lines"     # 0\n                                         # 报错!\n\necho "------------------------"\n\n\nexec 3<> myfile.txt\nwhile read line <&3\ndo {\n  echo "$line"\n  (( Lines++ ));                   #  递增变量的值趋近外层循环.\n                                   #  没有子 shell，就不会有问题.\n}\ndone\nexec 3>&-\n\necho "Number of lines read = $Lines"     # 8\n\necho\n\nexit 0\n\n# 下面的行并不在脚本里.\n\n$ cat myfile.txt\n\nLine 1.\nLine 2.\nLine 3.\nLine 4.\nLine 5.\nLine 6.\nLine 7.\nLine 8.\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);
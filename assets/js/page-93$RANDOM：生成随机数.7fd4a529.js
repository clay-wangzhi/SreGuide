(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{1064:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_9-3-random-生成随机数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-random-生成随机数"}},[s._v("#")]),s._v(" 9.3 "),n("code",[s._v("$RANDOM")]),s._v("：生成随机数")]),s._v(" "),n("blockquote",[n("p",[s._v("任何试图通过确定性方法生成随机数的行为都是在犯罪。")]),s._v(" "),n("p",[s._v("—— 约翰·冯·诺伊曼")])]),s._v(" "),n("p",[n("code",[s._v("$RANDOM")]),s._v(" 是 Bash 中用来生成 0 至 32767 之间随机整数"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote1"}},[s._v("[1]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})]),s._v("的一个内置 "),n("a",{attrs:{href:""}},[s._v("函数")]),s._v("（而非常量）。其"),n("strong",[s._v("不应")]),s._v("被用于生成密钥。")]),s._v(" "),n("h4",{attrs:{id:"样例-9-11-生成随机数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-11-生成随机数"}},[s._v("#")]),s._v(" 样例 9-11. 生成随机数")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $RANDOM 每一次调用都会返回一个随机的不同的整数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机数的标称范围为 0 - 32767（16位有符号整型）。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MAXCOUNT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MAXCOUNT")]),s._v(' random numbers:"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----------------"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$count")]),s._v('"')]),s._v(" -le "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MAXCOUNT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 10 ($MAXCOUNT) 个随机整数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count += 1"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加计数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----------------"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你需要一个小于指定上界的随机数，可以使用 'modulo' 操作符。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该操作符可以返回除法后的余数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RANGE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number %= '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RANGE")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#           ^^")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random number less than '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RANGE")]),s._v(" --- "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果你需要生成的随机数大于一个指定的下界，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 可以增加一步判断，判别并丢弃所有小于下界的数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLOOR")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v(" -le "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FLOOR")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random number greater than '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FLOOR")]),s._v(" --- "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在来看一种可以代替上面循环的更简单的方式，也就是")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#       let "number = $RANDOM + $FLOOR"')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该方式可以不使用 while 循环，效率更高。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是，该方法可能会产生一些问题，是什么呢？")]),s._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过结合上面的两种方法，可以获得一个特定范围内的随机数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v(" -le "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FLOOR")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number %= '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RANGE")]),s._v('"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 $number 缩小至 $RANGE 的范围内。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random number between '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FLOOR")]),s._v(" and "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RANGE")]),s._v(" --- "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成二元选择值，即真(true)或假(false)。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BINARY")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number %= '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BINARY")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  如果使用    let "number >>= 14"    可以获得更优的随机分布')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ （除了最低位，其余二进制位都右移）。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v('"')]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$T")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TRUE"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FALSE"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 扔一个骰子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SPOTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模 6 的余数范围为 0 - 5。")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后加 1 就可以得到期望的范围 1 - 6。")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 感谢 Paulo Marcel Coelho Aragao 简化了代码。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("die1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("die2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果设置 SPOTS=7 就可以不用加 1 得到值。这是不是一种更好的方法，为什么？")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为了保证公平，独立的投每一个骰子。")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die1 = '),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v(" % "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SPOTS")]),s._v(' + 1"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 投第一个骰子。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die2 = '),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v(" % "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SPOTS")]),s._v(' + 1"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 投第二个骰子。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  哪一种运算符有更高的优先级，")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 取余(%)还是加法(+)？")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"throw = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$die1")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$die2")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Throw of the dice = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$throw")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br")])]),n("h4",{attrs:{id:"样例-9-12-从牌组中随机选牌"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-12-从牌组中随机选牌"}},[s._v("#")]),s._v(" 样例 9-12. 从牌组中随机选牌")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pick-card.sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该样例演示了如何从数组中随机选择元素。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机选择任意一张牌。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Suites")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clubs\nDiamonds\nHearts\nSpades"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Denominations")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2\n3\n4\n5\n6\n7\n8\n9\n10\nJack\nQueen\nKing\nAce"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意一个变量占了多行。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("suite")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Suites")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读入数组变量。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("denomination")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Denominations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num_suites")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("suite"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数组中的元素数量。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num_denominations")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("denomination"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${denomination"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$((RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("num_denominations))"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(' of "')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${suite"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$((RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("num_suites))"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $bozo sh pick-cards.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Jack of Clubs")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 感谢 jipe 指出可以用 $RANDOM 随机选牌。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("h4",{attrs:{id:"example-9-13-模拟布朗运动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-9-13-模拟布朗运动"}},[s._v("#")]),s._v(" Example 9-13. 模拟布朗运动")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# brownian.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 作者：Mendel Cooper")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发布日期：10/26/07")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开源协议：GPL3")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ----------------------------------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  该脚本模拟了布朗运动。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 布朗运动是指微小粒子受到流体粒子随机碰撞，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 而在流体中做的无规则随机运动。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 也就是俗称的“醉汉走路”。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  布朗运动也可以被视作是一个简化的高尔顿板。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 高尔顿板是一个有着交错排列的钉子的倾斜板子，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 每次可以从中向下滚动一堆石子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 在板子底端是一排槽位，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 石子最后会落在槽位中。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  把它想象成一个简单的弹珠游戏就可以了。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  当运行这个脚本之后，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 你就会发现大部分的石子都聚集在中间的槽位里。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 这与预期的二项分布相符。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  作为模拟高尔顿板的程序，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 脚本忽略了许多参数，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 例如板子的倾斜角度、石子滚动的摩擦系数、")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 冲击角度以及钉子的弹性系数等等。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  忽略的这些参数能够在多大程度上影响模拟的精度？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  -------------------------------------------------------------")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PASSES")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  粒子作用数 / 石子数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROWS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  碰撞数 / 每一排钉子的数量。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RANGE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  $RANDOM 的输出范围为 0 - 2。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  滚落左侧或是右侧。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  将脚本的进程 ID 作为")]),s._v("\n                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 生成随机数的种子。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -a Slots      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于储存落入每一个槽位的石子数量。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NUMSLOTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 底部槽位的数量。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Initialize_Slots")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化数组。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" $NUMSLOTS "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  Slots"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在正式模拟开始之前先输出空行。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Show_Slots")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" $NUMSLOTS "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更精致地输出数组中的所有元素。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%3d"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${Slots"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个结果都占三个字符的宽度。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 槽位：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" |__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"                                ||"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  需要注意的是，如果任意一个槽位中石子的数量超过 99，")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 将会打乱整个程序的显示效果。")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果只运行 500 次通常可以避免这个问题。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Move")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将一个单位左移、右移或保持原地不动。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Move")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $RANDOM 到底有多随机？让我们看看...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Move %= RANGE"')]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标准化至范围 0 - 2。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Move")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 什么也不做，也就是原地不动。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("POS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左移。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("POS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右移。")]),s._v("\n    * "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 出现异常！（应该永远不会发生）")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Play")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模拟单次运行（内部循环）。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROWS")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每一排钉子经过且仅经过一次石子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  Move\n  "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SHIFT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为什么是 11 而不是 10？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POS += '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SHIFT")]),s._v('"')]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将原点移到中间。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" Slots[$POS]"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调试：echo $POS")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo -n "$POS "')]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Run")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 外部循环。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("p")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$p")]),s._v('"')]),s._v(' -lt "'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PASSES")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  Play\n  "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重置为 0。为什么要这么做？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main ()")]),s._v("\nInitialize_Slots\nRun\nShow_Slots\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --------------")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  练习：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ---------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  1) 将结果显示为一张直方图，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+    或者是一张散点图。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2) 修改脚本，使用 /dev/urandom 提到 $RANDOM。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     这会使脚本更加的随机化么？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  3) 当每一个石子落下的时候，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+    尝试添加一些动画效果。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br")])]),n("p",[s._v("Jipe 提供了一些生成指定范围内随机数的方法。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  生成范围为 6 到 30 的随机数。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rnumber")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  生成范围为 6 到 30 的随机数，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 并且该随机数能被 3 整除。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rnumber")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  需要注意这种方法并不是在所有情况下都能起效。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  会在 $RANDOM%30 为 0 时失效。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Frank Wang 建议可以换用下面的方法：")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rnumber")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("Bill Gradwohl 提出了一种改良后的仅适用于正数的公式。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rnumber")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("/divisibleBy*divisibleBy+min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("Bill 在这还给出了一个生成指定范围内随机数的通用函数。")]),s._v(" "),n("h4",{attrs:{id:"样例-9-14-指定范围随机数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-14-指定范围随机数"}},[s._v("#")]),s._v(" 样例 9-14. 指定范围随机数")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# random-between.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成指定范围内的随机数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本书作者在 Bill Gradwhol 所提供的脚本的基础上作了些细微修改。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Anthony Le Clezio 修正了 187 行和 189 行。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本书被授权使用该脚本。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("randomBetween")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  生成一个范围在 $min 和 $max 之间，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 并且能被 $divisibleBy 整除的")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 随机正数或负数。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  返回的随机数遵循合理的随机分布。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Bill Gradwohl - Oct 1, 2003")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("syntax")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 嵌套函数。")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Syntax: randomBetween [min] [max] [multiple]"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Expects up to 3 passed parameters, "')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"but all are completely optional."')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"min is the minimum value"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max is the maximum value"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"multiple specifies that the answer must be "')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a multiple of this value."')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    i.e. answer must be evenly divisible by this number."')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"If any value is missing, defaults area supplied as: 0 32767 1"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Successful completion returns 0, "')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unsuccessful completion returns"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"function syntax and 1."')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The answer is returned in the global variable "')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"randomBetweenAnswer"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Negative values for any passed parameter are "')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handled correctly."')]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":-")]),s._v("0}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":-")]),s._v("32767}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("divisibleBy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${3"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":-")]),s._v("1}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 考虑到没有给函数传参的情况，给变量设置默认值。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" x\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" spread\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保 divisibleBy 的值为正数。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${divisibleBy}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("divisibleBy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合规校验。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v(" -gt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${divisibleBy}")]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -o  "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      syntax\n      "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 min 和 max 的值是否颠倒。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" -gt "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 交换它们。")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${x}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果 min 值本身不能被 $divisibleBy 整除，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 则将其修正到范围内。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果 max 值本身不能被 $divisibleBy 整除，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 则将其修正到范围内。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ---------------------------------------------------------------------")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  接下来开始真正的内容。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  需要注意的是，为了得到端点间合理的随机分布，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 随机数的取值范围应是 0 至 abs(max-min)+divisibleBy，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 而不是简单的 abs(max-min)+1。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  少量的增长将会带来端点间")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 合理的随机分布。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  将公式修改为使用 abs(max-min)+1 仍然可以得到正确的答案，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 但是获得的这些随机数的随机性是有缺陷的，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 因为这种情况下返回的端点值 ($min 和 $max) 的次数远少于")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 使用正确公式时所返回的次数。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ---------------------------------------------------------------------")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spread")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Omair Eshkenazi 指出在这里没有必要进行校验，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 因为 max 和 min 的值已经被交换了。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${spread}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spread")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("spread"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spread")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("divisibleBy\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("randomBetweenAnswer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RANDOM"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("spread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  但是 Paulo Marcel Coelho Aragao 指出")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 当 $max 和 $min 不能被 $divisibleBy 整除时，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 该公式就会失效。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  他建议替换为下面的公式：")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    rnumber = $(((RANDOM%(max-min+1)+min)/divisibleBy*divisibleBy))")]),s._v("\n   \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 接下来测试函数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-14\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("divisibleBy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  循环执行足够多次数的函数，生成包含这些随机数的数组，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 然后校验数组中是否包含了端点范围内的每一个数字。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -a answer\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minimum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maximum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("minimum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${minimum}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${minimum}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minimum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("minimum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minimum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("minimum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   \n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  如果 max 值本身不能被 $divisibleBy 整除，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 则将其修正到范围内。")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("maximum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${maximum}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${maximum}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maximum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("maximum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maximum")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("maximum"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  需要保证数组的下标只能为正数，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 因此这里需要通过位移来保证")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 结果为正。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("disp")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("minimum"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("${minimum}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("${maximum}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i+disp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在开始循环执行函数以获得大量的随机数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("loopIt")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  脚本的作者建议使用 100000，")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 但是这会花费大量的时间。")]),s._v("\n              \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("${loopIt}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  注意，我们在这里颠倒了 min 和 max 的值，")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 为的是校验函数在这种情况下是否能正常执行。")]),s._v("\n   \n   randomBetween "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${divisibleBy}")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果获得了非预期的答案，则报错。")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${randomBetweenAnswer}")]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${min}")]),s._v(" -o "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${randomBetweenAnswer}")]),s._v(" -gt "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${max}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" MIN or MAX error - "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${randomBetweenAnswer}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("randomBetweenAnswer"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("${divisibleBy}"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" -ne "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" DIVISIBLE BY error - "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${randomBetweenAnswer}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存统计结果。")]),s._v("\n   answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("randomBetweenAnswer+disp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("answer[randomBetweenAnswer"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("disp]"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 校验最终结果。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("${minimum}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("${maximum}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("divisibleBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i+disp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" -eq "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We never got an answer of '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('."')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${i}")]),s._v(" occurred "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i+disp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(' times."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br")])]),n("p",[s._v("那么 "),n("code",[s._v("$RANDOM")]),s._v(" 到底有多随机？最好的测试方法就是写一个脚本跟踪由 "),n("code",[s._v("$RANDOM")]),s._v(" 生成的随机数的分布。接下来让我们多投几次由 "),n("code",[s._v("$RANDOM")]),s._v(" 做的骰子...")]),s._v(" "),n("h4",{attrs:{id:"样例-9-15-用-random-投骰子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-15-用-random-投骰子"}},[s._v("#")]),s._v(" 样例 9-15. 用 "),n("code",[s._v("RANDOM")]),s._v(" 投骰子")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RANDOM 有多随机？")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用脚本的进程 ID 重置随机数生成器种子。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PIPS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 骰子有 6 个点。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MAXTHORWS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你没有更好消磨时间的办法，就增加这个值。")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 投骰子的次数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ones")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  必须初始化计数器的值为 0，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("twos")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 因为未初始化的变量的值为 null 而非 0。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threes")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("fours")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("fives")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sixes")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("print_result")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ones =   '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ones")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"twos =   '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$twos")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"threes = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$threes")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fours =  '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fours")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fives =  '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fives")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sixes =  '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sixes")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("update_count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("ones"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为骰子没有 0 点，所以这个其实对应的是 1 点。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("twos"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个对应 2 点。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("threes"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以此类推。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("fours"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("fives"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("sixes"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$throw")]),s._v('"')]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MAXTHROWS")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die1 = RANDOM % '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PIPS")]),s._v('"')]),s._v("\n  update_count "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$die1")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"throw += 1"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\nprint_result\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  假设 RANDOM 是真随机，那么计数结果应该均匀分布。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  当 $MAXTHROWS 的值为 600 时，每一个计数器的值都应该在 100 左右，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 上下浮动大约 20。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  记住 RANDOM 是一个 ***伪随机*** 生成器，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 并且也不是其中最优秀的那一个。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  随机化是一个很深奥且复杂的话题。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  足够长的“随机”序列可能会出现一些")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 混乱或其他非随机化的表现。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 练习（简单）：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ---------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重写脚本，修改为投掷硬币 1000 次。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 显示为正面 "HEADS" 和背面 "TAILS"。')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br")])]),n("p",[s._v("从上一个样例中我们可以发现，在每次调用 "),n("code",[s._v("RANDOM")]),s._v(" 生成器时，最好利用重置生成器种子。在 "),n("code",[s._v("RANDOM")]),s._v(" 生成器中使用相同的种子会生成相同序列的随机数。"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote2"}},[s._v("[2]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})]),s._v("（与 C 语言中的 "),n("code",[s._v("random()")]),s._v(" 函数的行为一致）")]),s._v(" "),n("h4",{attrs:{id:"样例-9-16-重置-random-种子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-16-重置-random-种子"}},[s._v("#")]),s._v(" 样例 9-16. 重置 "),n("code",[s._v("RANDOM")]),s._v(" 种子")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seeding-random.sh: 设置 RANDOM 变量的种子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本号 1.1, 发布日期 09 Feb 2013")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MAXCOUNT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成随机数的个数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEED")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("random_numbers")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" number\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$count")]),s._v('"')]),s._v(" -lt "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MAXCOUNT")]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("number")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$number")]),s._v(' "')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count++"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEED")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置变量 RANDOM 会为随机数生成器设置种子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random seed = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v('"')]),s._v("\nrandom_numbers\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同样的种子 ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Again, with same random seed ..."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random seed = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v('"')]),s._v("\nrandom_numbers    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... 生成了同样的数字序列。")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在什么情况下重复一个随机化序列会有用？")]),s._v("\n                  \n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEED")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用不同的种子再试一次 ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random seed = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v('"')]),s._v("\nrandom_numbers    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... 生成了不同的数字序列。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RANDOM=$$  利用脚本的进程 ID 设置 RANDOM 的种子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同样也可以利用 'time' 或是 'date' 命令设置 RANDOM 的种子。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更花哨一点的 ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEED")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -1 /dev/urandom "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" od -N "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" }'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/^0*//"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  从 /dev/urandom （系统的伪随机设备文件）中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 获取伪随机输出，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#+ 然后通过 "od" 转换为可打印八进制字符行，')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#+ 然后 "awk" 命令会检索出一个数字作为种子，')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#+ 最后用 "sed" 命令删除数字前面所有的前置 0。')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("RANDOM")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random seed = '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SEED")]),s._v('"')]),s._v("\nrandom_numbers\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br")])]),n("p",[s._v('{% hint style="info" %}')]),s._v(" "),n("p",[s._v("伪设备文件 "),n("code",[s._v("/dev/urandom")]),s._v(" 提供了比 "),n("code",[s._v("$RANDOM")]),s._v(" 变量更随机化的伪随机数。命令 "),n("code",[s._v("dd if=/dev/urandom of=targetfile bs=1 count=XXX")]),s._v(" 将会创建一个包含均匀分布的伪随机数的文件。但是想要在脚本中将这些随机数赋值给变量需要做一些变通，比如使用命令 "),n("a",{attrs:{href:""}},[n("code",[s._v("od")])]),s._v(" 进行过滤（参照上面的样例以及 "),n("a",{attrs:{href:""}},[s._v("样例 16-14")]),s._v(" 和 "),n("a",{attrs:{href:""}},[s._v("样例 A-36")]),s._v("）或者使用管道导入命令 "),n("a",{attrs:{href:""}},[s._v("md5sum")]),s._v(" 中（参照 "),n("a",{attrs:{href:""}},[s._v("样例 36-16")]),s._v("）。")]),s._v(" "),n("p",[s._v("当然也有其他在脚本中生成伪随机数的方法。比如 "),n("code",[s._v("Awk")]),s._v(" 命令就提供了这样一种非常简易的方法。")]),s._v(" "),n("h4",{attrs:{id:"样例-9-17-使用-awk-命令生成伪随机数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样例-9-17-使用-awk-命令生成伪随机数"}},[s._v("#")]),s._v(" 样例 9-17. 使用 "),n("a",{attrs:{href:""}},[n("code",[s._v("awk")])]),s._v(" 命令生成伪随机数")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  random2.sh: 返回大小在 0 - 1 内，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+ 精度为小数点后 6 位的伪随机数。例如：0.822725")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  使用 awk rand() 函数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AWKSCRIPT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' { srand(); print rand() } '")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#           传递给 awk 的命令或参数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意 srand() 重置了 awk 的随机数生成种子。")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Random number between 0 and 1 = "')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$AWKSCRIPT")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果省略 'echo' 将会发生什么？")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 练习：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ---------")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) 使用循环结构，输出 10 个不同的随机数。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#      （提示：你必须在每次循环中使用 srand() 函数重置种子以获得不同的随机数种子。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+       如果你省略了这一步会发生什么？）")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) 利用整型乘数作为随机数的缩放因子，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#+   生成大小在 10 到 100 之间的随机数。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3) 内容与练习 #2 相同，只是这次生成随机整数。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("同样，命令 "),n("a",{attrs:{href:""}},[n("code",[s._v("date")])]),s._v(" 可以用于 "),n("a",{attrs:{href:""}},[s._v("生成整型随机数序列")]),s._v("。")]),s._v(" "),n("p",[s._v("{% endhint %}")]),s._v(" "),n("h2",{attrs:{id:"注记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注记"}},[s._v("#")]),s._v(" 注记")]),s._v(" "),n("p",[s._v('{% hint style="info" %}\n真正的“随机性”，就其存在而言，只存在于一些类似放射性衰变这样还未被完全理解的自然现象中。计算机只能模拟这样的随机性，因此计算机生成的“随机数”序列被称作伪随机数。\n{% endhint %}')]),s._v(" "),n("p",[s._v('{% hint style="info" %}\n计算机用于生成伪随机数的种子可以被视作一个标识标签。例如，你可以将用种子 23 生成的随机数序列视作第23号序列。')]),s._v(" "),n("p",[s._v("伪随机数序列的一个属性是该序列在开始重复之前的周期长度。一个好的伪随机数生成器能够生成周期非常长的序列。\n{% endhint %}")]),s._v(" "),n("hr",{staticClass:"footnotes-sep"}),s._v(" "),n("section",{staticClass:"footnotes"},[n("ol",{staticClass:"footnotes-list"},[n("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[n("p",[s._v("Footnote Placeholder "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[s._v("↩︎")])])]),s._v(" "),n("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[n("p",[s._v("Footnote Placeholder "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[s._v("↩︎")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
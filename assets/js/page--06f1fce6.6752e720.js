(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{1233:function(s,t,e){"use strict";e.r(t);var a=e(1),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("subprocess模块允许你去创建一个新的进程让其执行另外的程序，并与它进行通信，获取标准的输入、标准输")]),s._v(" "),e("p",[s._v("出、标准错误以及返回码等。(使用这个模块之前先导入import subprocess)。")]),s._v(" "),e("p",[s._v("subprocess模块打算来替代几个过时的模块和函数，比如： os.system, os.spawn*, os.popen*, popen2.*命令。")]),s._v(" "),e("p",[s._v("让我们来看一下subprocess 有哪些不同的函数.")]),s._v(" "),e("h2",{attrs:{id:"subprocess-call-subprocess-check-call-subprocess-check-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subprocess-call-subprocess-check-call-subprocess-check-output"}},[s._v("#")]),s._v(" subprocess.call(), subprocess.check_call(), subprocess.check_output()")]),s._v(" "),e("p",[s._v("执行由参数提供的命令.")]),s._v(" "),e("p",[s._v("我们可以用数组作为参数运行命令,也可以用字符串作为参数运行命令(通过设置参数shell=True)")]),s._v(" "),e("p",[s._v("注意,参数shell默认为False")]),s._v(" "),e("p",[s._v("我们用subprocess.call()来做一个查看文件的例子:")]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[s._v("subprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("将上边的例子,把shell设置为True,就可以使用字符串了:")]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[s._v("subprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls -a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shell"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"subprocess-call"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subprocess-call"}},[s._v("#")]),s._v(" subprocess.call()")]),s._v(" "),e("p",[s._v("父进程等待子进程完成")]),s._v(" "),e("p",[s._v("返回退出信息(returncode，相当于Linux exit code)")]),s._v(" "),e("h3",{attrs:{id:"subprocess-check-call"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subprocess-check-call"}},[s._v("#")]),s._v(" subprocess.check_call()")]),s._v(" "),e("p",[s._v("父进程等待子进程完成")]),s._v(" "),e("p",[s._v("返回0")]),s._v(" "),e("p",[s._v("检查退出信息，如果returncode不为0，则举出错误subprocess.CalledProcessError，该对象包含有returncode")]),s._v(" "),e("p",[s._v("属性，可用try…except…来检查。")]),s._v(" "),e("h3",{attrs:{id:"subprocess-check-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subprocess-check-output"}},[s._v("#")]),s._v(" subprocess.check_output()")]),s._v(" "),e("p",[s._v("父进程等待子进程完成")]),s._v(" "),e("p",[s._v("返回子进程向标准输出的输出结果")]),s._v(" "),e("p",[s._v("检查退出信息，如果returncode不为0，则举出错误subprocess.CalledProcessError，该对象包含有returncode")]),s._v(" "),e("p",[s._v("属性和output属性，output属性为标准输出的输出结果，可用try…except…来检查。")]),s._v(" "),e("p",[s._v("这三个函数的使用方法相类似，下面来以subprocess.call()举例说明:")]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" subprocess\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    retcode "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" subprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"df -h"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shell"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{0}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("retcode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#retcode = 0")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    main"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"subprocess-popen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subprocess-popen"}},[s._v("#")]),s._v(" subprocess.Popen()")]),s._v(" "),e("p",[s._v("class Popen(args, bufsize=0, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=False, shell=False, cwd=None, env=None, universal_newlines=False, startupinfo=None, creationflags=0)")]),s._v(" "),e("p",[s._v("实际上，上面的几个函数都是基于Popen()的封装(wrapper)。这些封装的目的在于让我们容易使用子进程。当我")]),s._v(" "),e("p",[s._v("们想要更个性化我们的需求的时候，就要转向Popen类，该类生成的对象用来代表子进程。")]),s._v(" "),e("p",[s._v("与上面的封装不同，Popen对象创建后，主程序不会自动等待子进程完成。我们必须调用对象的wait()方法，父进")]),s._v(" "),e("p",[s._v("程才会等待 (也就是阻塞block)，举例：")]),s._v(" "),e("p",[s._v("代码如下:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(">>> import subprocess\n>>> child = subprocess.Popen(['ping','-c','4','www.baidu.com'])\n>>> print('parent process')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import subprocess\nchild = subprocess.Popen(['ping','-c','4','www.baidu.com'])\nprint('parent process')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("从运行结果中看到，父进程在开启子进程之后并没有等待child的完成，而是直接运行print。")]),s._v(" "),e("p",[s._v("对比等待的情况:")]),s._v(" "),e("p",[s._v("代码如下:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(">>> import subprocess\n>>> child = subprocess.Popen('ping -c 4 www.baidu.com',shell=True)\n>>> child.wait()\n>>> print('parent process')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import subprocess\nchild = subprocess.Popen('ping -c 4 www.baidu.com',shell=True)\nchild.wait()\nprint('parent process')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("从运行结果中看到，父进程在开启子进程之后并等待child的完成后，再运行print。")]),s._v(" "),e("p",[s._v("此外，你还可以在父进程中对子进程进行其它操作，比如我们上面例子中的child对象:代码如下:")]),s._v(" "),e("ul",[e("li",[s._v("child.poll() # 检查子进程状态")]),s._v(" "),e("li",[s._v("child.kill() # 终止子进程")]),s._v(" "),e("li",[s._v("child.send_signal() # 向子进程发送信号")]),s._v(" "),e("li",[s._v("child.terminate() # 终止子进程")])]),s._v(" "),e("p",[s._v("子进程的PID存储在child.pid")]),s._v(" "),e("h2",{attrs:{id:"子进程的文本流控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子进程的文本流控制"}},[s._v("#")]),s._v(" 子进程的文本流控制")]),s._v(" "),e("p",[s._v("子进程的标准输入、标准输出和标准错误如下属性分别表示:")]),s._v(" "),e("p",[s._v("代码如下:")]),s._v(" "),e("ul",[e("li",[s._v("child.stdin")]),s._v(" "),e("li",[s._v("child.stdout")]),s._v(" "),e("li",[s._v("child.stderr")])]),s._v(" "),e("p",[s._v("可以在Popen()建立子进程的时候改变标准输入、标准输出和标准错误，并可以利用subprocess.PIPE将多个子进")]),s._v(" "),e("p",[s._v("程的输入和输出连接在一起，构成管道(pipe)，如下2个例子：")]),s._v(" "),e("p",[s._v("代码如下:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('>>> import subprocess\n>>> child1 = subprocess.Popen(["ls","-l"], stdout=subprocess.PIPE)\n>>> print child1.stdout.read(),\n>>> #或者child1.communicate()\n>>> import subprocess\n>>> child1 = subprocess.Popen(["cat","/etc/passwd"], stdout=subprocess.PIPE)\n>>> child2 = subprocess.Popen(["grep","0:0"],stdin=child1.stdout, stdout=subprocess.PIPE)\n>>> out = child2.communicate()\n>>> print(out)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("subprocess.PIPE实际上为文本流提供一个缓存区。")]),s._v(" "),e("p",[s._v("child1的stdout将文本输出到缓存区，随后child2的stdin从该PIPE中将文本读取走。")]),s._v(" "),e("p",[s._v("child2的输出文本也被存放在PIPE中，直到communicate()方法从PIPE中读取出PIPE中的文本。")]),s._v(" "),e("blockquote",[e("p",[s._v("注意：communicate()是Popen对象的一个方法，该方法会阻塞父进程，直到子进程完成")])]),s._v(" "),e("p",[s._v("wait()方法可能会造成死锁, 那死锁问题如何避免呢？")]),s._v(" "),e("p",[s._v("官方文档里推荐使用 Popen.communicate()。")]),s._v(" "),e("p",[s._v("这个方法会把输出放在内存，而不是管道里，所以这时候上限就和内存大小有关了，一般不会有问题。")]),s._v(" "),e("p",[s._v("而且如果要获得程序返回值，可以在调用 Popen.communicate() 之后取 Popen.returncode 的值。")]),s._v(" "),e("blockquote",[e("p",[s._v("结论：如果使用 subprocess.Popen，就不使用 Popen.wait()，而使用 Popen.communicate() 来等待外部程序执行结束")])]),s._v(" "),e("blockquote",[e("p",[s._v("转载链接：https://blog.csdn.net/qq_34765864/article/details/91517246")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{1087:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_8-1-运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-运算符"}},[s._v("#")]),s._v(" 8.1 运算符")]),s._v(" "),n("h2",{attrs:{id:"赋值运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),n("p",[n("em",[s._v("变量赋值")]),s._v("，初始化或改变一个变量的值。")]),s._v(" "),n("h3",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")]),s._v(" =")]),s._v(" "),n("p",[s._v("等号"),n("code",[s._v("=")]),s._v("赋值运算符，既可用于算术赋值，也可用于字符串赋值。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var=27\ncategory=minerals  # "="左右不允许有空格\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[n("img",{attrs:{src:"http://tldp.org/LDP/abs/images/caution.gif",alt:"caution"}}),s._v(" 注意，不要混淆"),n("code",[s._v("=")]),s._v("赋值运算符与"),n("code",[s._v("=")]),n("a",{attrs:{href:"http://tldp.org/LDP/abs/html/comparison-ops.html#EQUALSIGNREF",target:"_blank",rel:"noopener noreferrer"}},[s._v("测试操作符"),n("OutboundLink")],1),s._v("。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#   =   作为测试操作符\n\nif [ "$string1" = "$string2" ]\nthen\n   command\nfi\n\n#  [ "X$string1" = "X$string2" ] 这样写是安全的,\n#  这样写可以避免任意一个变量为空时的报错。\n#  (变量前加的"X"字符规避了变量为空的情况)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"算术运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),n("h3",{attrs:{id:"-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[s._v("#")]),s._v(" +")]),s._v(" "),n("p",[s._v("加")]),s._v(" "),n("h3",{attrs:{id:"-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[s._v("#")]),s._v(" -")]),s._v(" "),n("p",[s._v("减")]),s._v(" "),n("h3",{attrs:{id:"-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-4"}},[s._v("#")]),s._v(" *")]),s._v(" "),n("p",[s._v("乘")]),s._v(" "),n("h3",{attrs:{id:"-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-5"}},[s._v("#")]),s._v(" /")]),s._v(" "),n("p",[s._v("除")]),s._v(" "),n("h3",{attrs:{id:"-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-6"}},[s._v("#")]),s._v(" **")]),s._v(" "),n("p",[s._v("幂运算")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# Bash, 2.02版本，推出了"**"幂运算操作符。\n\nlet "z=5**3"    # 5 * 5 * 5\necho "z = $z"   # z = 125\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-7"}},[s._v("#")]),s._v(" %")]),s._v(" "),n("p",[s._v("取余(返回整数除法的余数)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("bash$ expr 5 % 3\n2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("5/3=1，余2\n取余运算符经常被用于生成一定范围内的数( 案例9-11, 案例9-15)，以及格式化程序输出(案例 27-16，案例 A-6)。\n取余运算符还可以用来产生素数（案例A-15），取余的出现大大扩展了整数的算术运算。")]),s._v(" "),n("p",[n("strong",[s._v("样例 8-1. 最大公约数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#!/bin/bash\n# gcd.sh: 最大公约数\n#         使用欧几里得算法\n\n#  两个整数的最大公约数（gcd）\n#  是两数能同时整除的最大数\n\n#  欧几里得算法使用辗转相除法\n#    In each pass,\n#       dividend <---  divisor\n#       divisor  <---  remainder\n#    until remainder = 0.\n#    The gcd = dividend, on the final pass.\n#\n#  关于欧几里得算法更详细的讨论，可以查看:\n#  Jim Loy\'s site, http://www.jimloy.com/number/euclids.htm.\n\n\n# ------------------------------------------------------\n# 参数检查\nARGS=2\nE_BADARGS=85\n\nif [ $# -ne "$ARGS" ]\nthen\n  echo "Usage: `basename $0` first-number second-number"\n  exit $E_BADARGS\nfi\n# ------------------------------------------------------\n\n\ngcd ()\n{\n\n  dividend=$1             #  随意赋值，\n  divisor=$2              #  两数谁大谁小是无关紧要的，\n                          #  为什么?\n\n  remainder=1             #  如果在测试括号里使用了一个未初始化的变量，\n                          #  会报错的。\n\n  until [ "$remainder" -eq 0 ]\n  do    #  ^^^^^^^^^^  该变量必须在使用前初始化！\n    let "remainder = $dividend % $divisor"\n    dividend=$divisor     # 对被除数，除数重新赋值\n    divisor=$remainder\n  done                    # 欧几里得算法\n\n}                         # 最后的 $dividend 就是最大公约数（gcd）\n\n\ngcd $1 $2\n\necho; echo "GCD of $1 and $2 = $dividend"; echo\n\n\n# 练习 :\n# ---------\n# 1) 检查命令行参数，保证其为整数，\n#+   如果有错误，捕捉错误并在脚本退出前打印出适当的错误信息。\n# 2) 使用本地变量(local variables)重写gcd()函数。\n\nexit 0\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("h3",{attrs:{id:"-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-8"}},[s._v("#")]),s._v(" +=")]),s._v(" "),n("p",[s._v("加等 （加上一个数）"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote1"}},[s._v("[1]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})]),s._v(" "),n("code",[s._v('let "var += 5"')]),s._v(" 的结果是"),n("code",[s._v("var")]),s._v("变量的值增加了5。")]),s._v(" "),n("h3",{attrs:{id:"-9"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-9"}},[s._v("#")]),s._v(" -=")]),s._v(" "),n("p",[s._v("减等 （减去一个数）")]),s._v(" "),n("h3",{attrs:{id:"-10"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-10"}},[s._v("#")]),s._v(" *=")]),s._v(" "),n("p",[s._v("乘等 （乘以一个数）\n"),n("code",[s._v('let "var *= 4"')]),s._v(" 的结果是"),n("code",[s._v("var")]),s._v("变量的值乘了4。")]),s._v(" "),n("h3",{attrs:{id:"-11"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-11"}},[s._v("#")]),s._v(" /=")]),s._v(" "),n("p",[s._v("除等 （除以一个数）")]),s._v(" "),n("h3",{attrs:{id:"-12"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-12"}},[s._v("#")]),s._v(" %=")]),s._v(" "),n("p",[s._v("余等 （取余赋值）")]),s._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("p",[s._v("算术运算符常用于"),n("code",[s._v("expr")]),s._v("或"),n("code",[s._v("let")]),s._v("表达式中。")]),s._v(" "),n("p",[n("strong",[s._v("样例 8-2. 使用算术运算符")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#!/bin/bash\n# 使变量自增1，10种不同的方法实现\n\nn=1; echo -n "$n "\n\nlet "n = $n + 1"   # 可以使用 let "n = n + 1"\necho -n "$n "\n\n\n: $((n = $n + 1))\n#  ":" 是必要的，不加的话，bash会将\n#+ "$((n = $n + 1))"看做一条命令。\necho -n "$n "\n\n(( n = n + 1 ))\n#  更简洁的写法。\n#  感谢 David Lombard指出。\necho -n "$n "\n\nn=$(($n + 1))\necho -n "$n "\n\n: $[ n = $n + 1 ]\n#  ":" 是必要的，不加的话，bash会将\n#+ "$[ n = $n + 1 ]"看做一条命令。\n#  即使"n"是字符串，也是可行的。\necho -n "$n "\n\nn=$[ $n + 1 ]\n#  即使"n"是字符串，也是可行的。\n#* 不要用这种写法，它已被废弃且不具有兼容性。\n#  感谢 Stephane Chazelas.\necho -n "$n "\n\n# 使用C风格的自增运算符也是可以的\n# 感谢 Frank Wang 指出。\n\nlet "n++"          # let "++n" 可行\necho -n "$n "\n\n(( n++ ))          # (( ++n ))  可行\necho -n "$n "\n\n: $(( n++ ))       # : $(( ++n )) 可行\necho -n "$n "\n\n: $[ n++ ]         # : $[ ++n ] 可行\necho -n "$n "\n\necho\n\nexit 0\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br")])]),n("p",[s._v("在早期的Bash版本中，整型变量是带符号的长整型数（32-bit），取值范围从 -2147483648 到 2147483647。如果算术操作超出了整数的取值范围，结果会不准确。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('echo $BASH_VERSION   # Bash 1.14版本\n\na=2147483646\necho "a = $a"        # a = 2147483646\nlet "a+=1"           # 自增 "a".\necho "a = $a"        # a = 2147483647\nlet "a+=1"           # 再次自增"a"，超出取值范围。\necho "a = $a"        # a = -2147483648\n                     #      错误：超出范围，\n                     #+     最左边的符号位被重置，\n                     #+     结果变负\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("Bash版本 >= 2.05b, Bash支持了64-bit整型数。")]),s._v(" "),n("blockquote",[n("p",[n("img",{attrs:{src:"http://tldp.org/LDP/abs/images/caution.gif",alt:"caution"}}),s._v(" 注意，Bash并不支持浮点运算，Bash会将带小数点的数看做字符串。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('a=1.5\n\nlet "b = $a + 1.3"  # 报错\n# t2.sh: let: b = 1.5 + 1.3: syntax error in expression\n#                            (error token is ".5 + 1.3")\n\necho "b = $b"       # b=1\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("如果你想在脚本中使用浮点数运算，借助"),n("a",{attrs:{href:"http://tldp.org/LDP/abs/html/mathc.html#BCREF",target:"_blank",rel:"noopener noreferrer"}},[s._v("bc"),n("OutboundLink")],1),s._v("或外部数学函数库吧。")]),s._v(" "),n("h2",{attrs:{id:"位运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[s._v("#")]),s._v(" 位运算")]),s._v(" "),n("p",[s._v("位运算很少出现在shell脚本中，在bash中加入位运算的初衷似乎是为了操控和检测来自"),n("code",[s._v("ports")]),s._v("或"),n("code",[s._v("sockets")]),s._v("的数据。位运算在编译型语言中能发挥更大的作用，比如C/C++，位运算提供了直接访问系统硬件的能力。然而，聪明的vladz在他的base64.sh(案例 A-54)脚本中也用到了位运算。\n下面介绍位运算符。")]),s._v(" "),n("h3",{attrs:{id:"-13"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-13"}},[s._v("#")]),s._v(" <<")]),s._v(" "),n("p",[s._v("左移运算符(左移1位相当于乘2)")]),s._v(" "),n("h3",{attrs:{id:"-14"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-14"}},[s._v("#")]),s._v(" <<=")]),s._v(" "),n("p",[s._v("左移赋值")]),s._v(" "),n("p",[n("code",[s._v('let "var <<= 2"')]),s._v(" 的结果是var变量的值向左移了2位(乘以4)")]),s._v(" "),n("h3",{attrs:{id:"-15"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-15"}},[s._v("#")]),s._v(" >>")]),s._v(" "),n("p",[s._v("右移运算符(右移1位相当于除2)")]),s._v(" "),n("h3",{attrs:{id:"-16"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-16"}},[s._v("#")]),s._v(" >>=")]),s._v(" "),n("p",[s._v("右移赋值")]),s._v(" "),n("h3",{attrs:{id:"-17"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-17"}},[s._v("#")]),s._v(" &")]),s._v(" "),n("p",[s._v("按位与（AND）")]),s._v(" "),n("h3",{attrs:{id:"-18"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-18"}},[s._v("#")]),s._v(" &=")]),s._v(" "),n("p",[s._v("按位与等（AND-equal）")]),s._v(" "),n("h3",{attrs:{id:"-19"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-19"}},[s._v("#")]),s._v(" |")]),s._v(" "),n("p",[s._v("按位或（OR）")]),s._v(" "),n("h3",{attrs:{id:"-20"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-20"}},[s._v("#")]),s._v(" |=")]),s._v(" "),n("p",[s._v("按位或等（OR-equal）")]),s._v(" "),n("h3",{attrs:{id:"-21"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-21"}},[s._v("#")]),s._v(" ~")]),s._v(" "),n("p",[s._v("按位取反")]),s._v(" "),n("h3",{attrs:{id:"-22"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-22"}},[s._v("#")]),s._v(" ^")]),s._v(" "),n("p",[s._v("按位异或（XOR）")]),s._v(" "),n("h3",{attrs:{id:"-23"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-23"}},[s._v("#")]),s._v(" ^=")]),s._v(" "),n("p",[s._v("按位异或等（XOR-equal）")]),s._v(" "),n("h2",{attrs:{id:"逻辑-布尔-运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑-布尔-运算符"}},[s._v("#")]),s._v(" 逻辑(布尔)运算符")]),s._v(" "),n("h3",{attrs:{id:"-24"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-24"}},[s._v("#")]),s._v(" !")]),s._v(" "),n("p",[s._v("非(NOT)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if [ ! -f $FILENAME ]\nthen\n  ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"-25"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-25"}},[s._v("#")]),s._v(" &&")]),s._v(" "),n("p",[s._v("与(AND)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if [ $condition1 ] && [ $condition2 ]\n#  等同于:  if [ $condition1 -a $condition2 ]\n#  返回true如果 condition1 和 condition2 同时为真...\n\nif [[ $condition1 && $condition2 ]]    # 可行\n#  注意，&& 运算符不能用在[ ... ]结构里。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("blockquote",[n("p",[n("img",{attrs:{src:"http://tldp.org/LDP/abs/images/note.gif",alt:"note"}}),s._v(" &&也可以被用在"),n("code",[s._v("list")]),s._v("结构中连接命令。")])]),s._v(" "),n("h3",{attrs:{id:"-26"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-26"}},[s._v("#")]),s._v(" ||")]),s._v(" "),n("p",[s._v("或(OR)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if [ $condition1 ] || [ $condition2 ]\n\n#  等同于:  if [ $condition1 -a $condition2 ]\n#  返回true如果 condition1 和 condition2 任意一个为真...\n\nif [[ $condition1 || $condition2 ]]    # 可行\n#  注意，|| 运算符不能用在[ ... ]结构里。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"小结-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("p",[n("strong",[s._v("样例 8-3. 在条件测试中使用 && 和 ||")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#!/bin/bash\n\na=24\nb=47\n\nif [ "$a" -eq 24 ] && [ "$b" -eq 47 ]\nthen\n  echo "Test #1 succeeds."\nelse\n  echo "Test #1 fails."\nfi\n\n#  错误:   if [ "$a" -eq 24 && "$b" -eq 47 ]\n#          这样写的话，bash会先执行\'[ "$a" -eq 24\'\n#          然后就找不到右括号\']\'了...\n#\n#  注意:  if [[ $a -eq 24 && $b -eq 24 ]]  这样写是可以的\n#  双方括号测试结构比单方括号更加灵活。\n#  (双方括号中的"&&"与单方括号中的"&&"意义不同)\n#  感谢 Stephane Chazelas 指出。\n\n\nif [ "$a" -eq 98 ] || [ "$b" -eq 47 ]\nthen\n  echo "Test #2 succeeds."\nelse\n  echo "Test #2 fails."\nfi\n\n\n#  使用 -a 和 -o 选项也具有同样的效果。\n#  感谢 Patrick Callahan 指出。\n\n\nif [ "$a" -eq 24 -a "$b" -eq 47 ]\nthen\n  echo "Test #3 succeeds."\nelse\n  echo "Test #3 fails."\nfi\n\n\nif [ "$a" -eq 98 -o "$b" -eq 47 ]\nthen\n  echo "Test #4 succeeds."\nelse\n  echo "Test #4 fails."\nfi\n\n\na=rhino\nb=crocodile\nif [ "$a" = rhino ] && [ "$b" = crocodile ]\nthen\n  echo "Test #5 succeeds."\nelse\n  echo "Test #5 fails."\nfi\n\nexit 0\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br")])]),n("p",[n("code",[s._v("&&")]),s._v("和"),n("code",[s._v("||")]),s._v("运算符也可以用在算术运算中。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("bash$ echo $(( 1 && 2 )) $((3 && 0)) $((4 || 0)) $((0 || 0))\n1 0 1 0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"其他运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他运算符"}},[s._v("#")]),s._v(" 其他运算符")]),s._v(" "),n("h3",{attrs:{id:"-27"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-27"}},[s._v("#")]),s._v(" ,")]),s._v(" "),n("p",[s._v("逗号运算符\n逗号运算符用于连接两个或多个算术操作，所有的操作会被依次求值（可能会有副作用）。"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote2"}},[s._v("[2]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('let "t1 = ((5 + 3, 7 - 1, 15 - 4))"\necho "t1 = $t1"           ^^^^^^  # t1 = 11\n# 这里的t1 被赋值了11，为什么？\n\nlet "t2 = ((a = 9, 15 / 3))"      # 对"a"赋值并对"t2"求值。\necho "t2 = $t2    a = $a"         # t2 = 5    a = 9\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("逗号运算符常被用在"),n("code",[s._v("for")]),s._v("循环中。参看案例 11-13。")]),s._v(" "),n("hr",{staticClass:"footnotes-sep"}),s._v(" "),n("section",{staticClass:"footnotes"},[n("ol",{staticClass:"footnotes-list"},[n("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[n("p",[s._v("取决与不同的上下文，+= 也可能作为字符串连接符。它可以很方便地修改环境变量。 "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[s._v("↩︎")])])]),s._v(" "),n("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[n("p",[s._v("副作用，顾名思义，就是预料之外的结果。 "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[s._v("↩︎")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
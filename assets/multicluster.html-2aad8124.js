import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as s,b as n,d as t,e as p}from"./app-4bb5a871.js";const l={},u=p(`<h1 id="k8s-多集群思考、实践和探索" tabindex="-1"><a class="header-anchor" href="#k8s-多集群思考、实践和探索" aria-hidden="true">#</a> K8s 多集群思考、实践和探索</h1><h2 id="为什么需要多集群" tabindex="-1"><a class="header-anchor" href="#为什么需要多集群" aria-hidden="true">#</a> 为什么需要多集群</h2><ul><li>多活建设：提高业务应用的可用性，避免单个集群或单个数据中心故障导致业务应用暂时不可用。</li><li>混合云建设：引入公有云弹性资源解决业务大促节假日资源洪峰</li><li>控制故障爆炸半径</li></ul><h2 id="建设多集群的前期准备" tabindex="-1"><a class="header-anchor" href="#建设多集群的前期准备" aria-hidden="true">#</a> 建设多集群的前期准备</h2><ul><li><p>多集群生命周期管理（新建集群、新增节点等）</p></li><li><p>多集群应用的分发部署</p></li><li><p>多集群监控告警</p></li><li><p>南北流量如何管理</p></li><li><p>东西流量如何管理</p></li><li><p>多集群应用迁移</p></li></ul><h2 id="多集群探索-联邦" tabindex="-1"><a class="header-anchor" href="#多集群探索-联邦" aria-hidden="true">#</a> 多集群探索（联邦）</h2><h3 id="federation-v1" tabindex="-1"><a class="header-anchor" href="#federation-v1" aria-hidden="true">#</a> Federation v1</h3><p>最早的多集群项目，由 K8s 社区提出和维护。</p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240509174747165.png" style="zoom:63%;"><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ReplicaSet
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>us
  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
    <span class="token key atrule">federation.kubernetes.io/replica-set-preferences</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
        {
            &quot;rebalance&quot;: true,
            &quot;clusters&quot;: {
                &quot;us-east1-b&quot;: {
                    &quot;minReplicas&quot;: 2,
                    &quot;maxReplicas&quot;: 4,
                    &quot;weight&quot;: 1
                },
                &quot;us-central1-b&quot;: {
                    &quot;minReplicas&quot;: 2,
                    &quot;maxReplicas&quot;: 4,
                    &quot;weight&quot;: 1
                }
            }
        }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把联邦的所有配置信息都写到 annotations 里，整个创建流程与 K8s 类似。配置信息先到 Federated API Server，Federated Controller 把应用创建到各子集群。</p><p>由于下面两个突出问题，在 K8s v1.11 左右正式被弃用。</p><ul><li>基于 Annotation 的资源分发让整个 API 过于臃肿，不够优雅。</li><li>在 Kubernetes 里一个 API 是通过 Group/Version/Kind 确定的，但是 Federation v1 里面对于K8s 原生 API、GVK 固定，导致对不同版本的集群 API 兼容性很差。</li></ul><h3 id="federation-v2" tabindex="-1"><a class="header-anchor" href="#federation-v2" aria-hidden="true">#</a> Federation v2</h3><p>Federation v2 最大的特点就是基于 CRD 和 Controller 的方式替换掉了 Federation v1 基于 Annotation 分发资源的方案，没有侵入原生的 K8s API，也没有引入额外的 API Server。</p><p>主要由两个组件构成：</p><ul><li>admission-webhook 提供了准入控制</li><li>controller-manager 处理自定义资源以及协调不同集群间的状态</li></ul><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240509180316117.png" alt="image-20240509180316117" style="zoom:60%;"><p>用户通过kubefedctl enable命令生成指定该资源类型的 FederatedTypeConfig CRD，使用定义好的yaml文件对资源进行联邦部署。</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240509192847799.png" alt=""></p><p>一个典型的 deployment 的 FederatedTypeConfig 示例如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> types.kubefed.io/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> FederatedDeployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> fed<span class="token punctuation">-</span>deploy
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> fed<span class="token punctuation">-</span>ns
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token punctuation">{</span>deployment<span class="token punctuation">-</span>define<span class="token punctuation">}</span>  
  <span class="token key atrule">overrides</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">clusterName</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span><span class="token number">1</span>
    <span class="token key atrule">clusterOverrides</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /spec/replicas
      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">10</span>
    <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /spec/template/spec/containers/0/image
      <span class="token key atrule">value</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.17.0<span class="token punctuation">-</span>alpine
  <span class="token key atrule">placement</span><span class="token punctuation">:</span>
    <span class="token key atrule">clusters</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span><span class="token number">1</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Federated Type CRD包含三个部分：</p><p>Template: 该资源本身的定义，用于集群中该资源的创建</p><p>Placement: 分发策略，定义该资源部署于哪些集群中</p><p>Overrides：对 template 中的字段进行覆盖重写，用于对资源的配置更新。如示例中对名称为 cluster-1 的 member cluster 中 deployment 的副本数和镜像进行了重新配置。Override 中未选择的集群使用 template 的定义，保持不变。</p><p>可以发现，上面配置文件只指定了 分发到哪个集群，并没有具体的分配比例、数量等，可以利用RSP（ReplicaSchedulingPreference）对Federated Type CRD中placement和Overrides字段内容进行重写，rs重写数据来源于用户配置的调度文件。</p><p>一个典型的RSP文件定义示例如下，该RSP文件定义了一个deployment应用负载在部署时，各集群的部署策略。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> scheduling.kubefed.io/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ReplicaSchedulingPreference
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> fed<span class="token punctuation">-</span>deploy
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> fed<span class="token punctuation">-</span>ns
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">targetKind</span><span class="token punctuation">:</span> FederatedDeployment
  <span class="token key atrule">totalReplicas</span><span class="token punctuation">:</span> <span class="token number">20</span>
  <span class="token key atrule">clusters</span><span class="token punctuation">:</span>
   <span class="token key atrule">&quot;*&quot;</span><span class="token punctuation">:</span>
     <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>
     <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token number">15</span>
   <span class="token key atrule">cluster-1</span><span class="token punctuation">:</span>
     <span class="token key atrule">weight</span><span class="token punctuation">:</span>
     <span class="token key atrule">minReplicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
     <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RSP 文件中主要包含以下字段：</p><p>targetKind：定义该RSP文件应用的联邦资源类型，目前仅支持 FederatedDeployment 和 FederatedReplicaSet。</p><p>totalReplicas：资源的总副本数，各个集群按照用户配置的权重或者比例进行资源计算时，会先根据总数进行计算得到一个初步结果，若集群中配置了最大值或最小值与计算得到的值冲突，则会使用用户配置的最大值或者最小值。因此实际的总副本数可能会和配置的总副本数不一致。</p><p><strong>已经被社区废弃。</strong></p><h3 id="karmada" tabindex="-1"><a class="header-anchor" href="#karmada" aria-hidden="true">#</a> Karmada</h3>`,34),r={href:"https://github.com/kubernetes-retired/federation",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/kubernetes-sigs/kubefed",target:"_blank",rel:"noopener noreferrer"},d=s("p",null,"Karmada 旨在为多云和混合云场景下的多集群应用程序管理提供即插即用的自动化，具有集中式多云管理、高可用性、故障恢复和流量调度等关键功能。",-1),v={href:"https://cncf.io/",target:"_blank",rel:"noopener noreferrer"},m=p(`<p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240510111516451.png" alt=""></p><p>和 Federation v1 类似，我们下发一个资源也是要写入到 Karmada 自己的 API Server 中，之前 controller-manager 根据一些 policy 把资源下发到各个集群中；不过这个 API Server 直接使用 Kubernetes 的 kube-apiserver 实现的，所以支持任何资源，不会出现之前 v1 版本中的问题，然后联邦托管资源的分发策略也是由一个单独的 CRD 来控制的，也不需要配置 v2 中的 Federated Resource CRD 和 Type Configure。</p><p>分发应用程序 Demo</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx
        <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
        
<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">placement</span><span class="token punctuation">:</span>
    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>
      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> member1
        <span class="token punctuation">-</span> member2
    <span class="token key atrule">replicaScheduling</span><span class="token punctuation">:</span>
      <span class="token key atrule">replicaDivisionPreference</span><span class="token punctuation">:</span> Weighted
      <span class="token key atrule">replicaSchedulingType</span><span class="token punctuation">:</span> Divided
      <span class="token key atrule">weightPreference</span><span class="token punctuation">:</span>
        <span class="token key atrule">staticWeightList</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>
              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>
                <span class="token punctuation">-</span> member1
            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>
          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>
              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>
                <span class="token punctuation">-</span> member2
            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>

<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>op
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>
        <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> member2
      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>
        <span class="token key atrule">labelsOverrider</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> add
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">env</span><span class="token punctuation">:</span> skoala<span class="token punctuation">-</span>dev
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> add
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">env-stat</span><span class="token punctuation">:</span> skoala<span class="token punctuation">-</span>stage
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> remove
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">for</span><span class="token punctuation">:</span> for
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> replace
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">bar</span><span class="token punctuation">:</span> test
    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>
        <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> member1
      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>
        <span class="token key atrule">annotationsOverrider</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> add
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">env</span><span class="token punctuation">:</span> skoala<span class="token punctuation">-</span>stage
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> remove
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">bom</span><span class="token punctuation">:</span> bom
          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> replace
            <span class="token key atrule">value</span><span class="token punctuation">:</span>
              <span class="token key atrule">emma</span><span class="token punctuation">:</span> sophia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240510161505970.png" alt=" "> Policy Controller: 监听PropagationPolicy 对象，PropagationPolicy 对象被创建后，Policy Controller会选择一组匹配resourceSelector 的资源，然后为每个单独则资源创建ResourceBinding。</p><p>Binding Controller: 监听ResourceBinding 对象，然后创建每个集群对应的work 对象。work 对象里面包含了一个具体的资源。</p><p>Execution Controller: 监听work对象，然后在member cluster 里创建对应的资源</p><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p>以上多集群项目主要功能为资源分发和调度，还有如多云基础设施管理 cluster-api，多集群检索 Clusterpedia，多集群 pod 互通 submariner，multicluster-ingress 解决多集群的 ingress，服务治理和流量调度 Service Mesh，如 istio、cilium 等网络组件实现的 multi cluster mesh 解决跨集群的 mesh 网络管理，以及结合存储相关项目实现跨集群存储管理和迁移等。</p><h2 id="多集群落地实践-非联邦" tabindex="-1"><a class="header-anchor" href="#多集群落地实践-非联邦" aria-hidden="true">#</a> 多集群落地实践（非联邦）</h2><p>介绍了半天联邦集群，但~~~~~是，我们落地用的非联邦方式 🤣</p><h3 id="应用如何在多个集群部署" tabindex="-1"><a class="header-anchor" href="#应用如何在多个集群部署" aria-hidden="true">#</a> 应用如何在多个集群部署</h3><p>当单个集群时， 内部的 自动化运维平台 和 发布系统 已经支持了，单集群的 <code>容器生命周期管理</code>、<code>Ingress 生命周期管理</code>、<code>升降配 &amp; 扩缩容</code>、<code>HPA &amp; HPC</code>、<code>滚动发布 &amp; 灰度发布</code> 等。</p><p>在多纳管几个集群，改动很小， 发布系统支持 多集群 容器编排发布即可 （串行 or 并行）等。</p><h3 id="多集群监控告警" tabindex="-1"><a class="header-anchor" href="#多集群监控告警" aria-hidden="true">#</a> 多集群监控告警</h3><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/test.png" alt=""></p><p>几个注意点：</p><p>修改默认 monitoring.coreos.com/v1 Prometheus 对象</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 修改 alertmanagers 为 外置 alertmanager 配置， 提前新建 svc 和 ep</span>
  <span class="token key atrule">alerting</span><span class="token punctuation">:</span>
    <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v2
      <span class="token key atrule">name</span><span class="token punctuation">:</span> xxx
      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xxx
      <span class="token key atrule">pathPrefix</span><span class="token punctuation">:</span> /
      <span class="token key atrule">port</span><span class="token punctuation">:</span> xxx
<span class="token comment"># 添加集群唯一标识</span>
  <span class="token key atrule">externalLabels</span><span class="token punctuation">:</span>
    <span class="token key atrule">cluster</span><span class="token punctuation">:</span> xxx
    <span class="token key atrule">environment</span><span class="token punctuation">:</span> xxx
    <span class="token key atrule">zone</span><span class="token punctuation">:</span> xxx
<span class="token comment"># 远端写入到 VictoriaMetrics, 配置多副本去重</span>
  <span class="token key atrule">remoteWrite</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//xxx/api/v1/write
    <span class="token key atrule">writeRelabelConfigs</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labeldrop
      <span class="token key atrule">regex</span><span class="token punctuation">:</span> prometheus_replica
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="南北流量如何管理" tabindex="-1"><a class="header-anchor" href="#南北流量如何管理" aria-hidden="true">#</a> 南北流量如何管理</h3><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/ingress1.png" alt=""></p><p>外层 Nginx 反向代理各集群 Ingress Node，Ingress Node 节点的权重会自动调整，当有容器和虚拟机混布时，规则如下，且 Ingress Node 会随 Pod 数量的变化和 Ingress Node 数量的变化自动调整权限，在内存中调整，无需 reload 外层Nginx：</p><p>1个 pod = 1个 kvm 基础权重都为10，每个 ingress node 权重 为 （pod 数量 * 10 / ingress 节点数） 取整，最小为1。</p><h3 id="东西流量如何管理" tabindex="-1"><a class="header-anchor" href="#东西流量如何管理" aria-hidden="true">#</a> 东西流量如何管理</h3><p>三层网络走 Calico BGP 拉平打通， 多集群 Pod 之间，网络可以直连， 容器和虚拟机之间，也可以直连。</p><p>服务发现用的 Nacos，没走 Coredns。</p><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240510190151337.png" alt=""></p><h3 id="多集群应用迁移" tabindex="-1"><a class="header-anchor" href="#多集群应用迁移" aria-hidden="true">#</a> 多集群应用迁移</h3><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/image-20240510192111438.png" style="zoom:67%;"><p><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/migrate.png" alt=""></p><blockquote><p>前置条件，所有集群备份通过 Velero 工具，备份到了 统一的 S3 桶里面。</p><p>当 A 集群发生 集群层故障时， 且 B 集群 没有足够的资源下， 还要考虑降级方案， 比如各 AppID 迁移副本数减半，优先迁移核心服务等策略。</p></blockquote><p>核心伪代码如下：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Handlek8sMigrate 处理 K8s  迁移</span>
<span class="token keyword">func</span> <span class="token function">Handlek8sMigrate</span><span class="token punctuation">(</span>r migration<span class="token punctuation">.</span>K8sMigrationRequest<span class="token punctuation">,</span> k <span class="token operator">*</span>K8sController<span class="token punctuation">,</span> l <span class="token operator">*</span>store<span class="token punctuation">.</span>LogTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span><span class="token string">&quot;从 %s 集群 %s 环境%s迁移如下 AppID %s 到 %s 集群&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>SrcCluster<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType<span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Appid<span class="token punctuation">,</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>DestCluster<span class="token punctuation">)</span>

	<span class="token keyword">if</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType <span class="token operator">==</span> <span class="token string">&quot;离线&quot;</span> <span class="token punctuation">{</span>
		<span class="token comment">// velero 下载解压</span>
		<span class="token keyword">var</span> cluster <span class="token builtin">string</span>
		<span class="token keyword">if</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env <span class="token operator">==</span> <span class="token string">&quot;xxx&quot;</span> <span class="token operator">||</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env <span class="token operator">==</span> <span class="token string">&quot;xx&quot;</span> <span class="token punctuation">{</span>
			cluster <span class="token operator">=</span> <span class="token string">&quot;xxxx&quot;</span>
		<span class="token punctuation">}</span>
		commandStr <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;mkdir -p /tmp/backupdownload/ &amp;&amp; cd /tmp/backupdownload/ &amp;&amp; velero backup download $(velero backup get | grep &quot;</span> <span class="token operator">+</span> cluster <span class="token operator">+</span> <span class="token string">&quot;-k8s-&quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env <span class="token operator">+</span> <span class="token string">&quot;| head -1 | awk &#39;{print $1}&#39;) &amp;&amp; tar -xvf *.tar.gz&quot;</span><span class="token punctuation">)</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">executeSSHCommand</span><span class="token punctuation">(</span>commandStr<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// 获取 k8sclient</span>
	srcK8sClient <span class="token operator">:=</span> k<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">GetK8sClient</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>SrcCluster<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span>
	destK8sClient <span class="token operator">:=</span> k<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">GetK8sClient</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>DestCluster<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span>

	<span class="token comment">// 计算迁移 Pod 数</span>
	<span class="token keyword">var</span> podNumSum <span class="token builtin">int32</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> appid <span class="token operator">:=</span> <span class="token keyword">range</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Appid <span class="token punctuation">{</span>
		replicas<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">getReplicasAndAppid</span><span class="token punctuation">(</span>srcK8sClient<span class="token punctuation">,</span> appid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 获取副本数储出错&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		podNumSum <span class="token operator">=</span> podNumSum <span class="token operator">+</span> replicas
	<span class="token punctuation">}</span>
	l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span><span class="token string">&quot;总共需要迁移 %d 个 Pod&quot;</span><span class="token punctuation">,</span> podNumSum<span class="token punctuation">)</span>

	<span class="token comment">// 获取目标集群剩余可创建 pod 数</span>
	destRemainingData<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">getRemainingData</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		l<span class="token punctuation">.</span><span class="token function">WriteFineshedLog</span><span class="token punctuation">(</span><span class="token string">&quot;failed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;获取不到目标集群可创建 Pod 数, 任务结束&quot;</span><span class="token operator">+</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span><span class="token string">&quot;目标集群可创建 Pod 数为 %d&quot;</span><span class="token punctuation">,</span> destRemainingData<span class="token punctuation">)</span>

	<span class="token comment">// 判断资源是否充足</span>
	<span class="token keyword">if</span> destRemainingData <span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span>podNumSum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span><span class="token string">&quot;目标集群资源充足, 继续进行迁移&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		l<span class="token punctuation">.</span><span class="token function">WriteFineshedLog</span><span class="token punctuation">(</span><span class="token string">&quot;failed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;目标集群资源不足, 迁移终止&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 资源充足，开始迁移 rollout、service、ingress 对象</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Appid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 在迁移开始之前增加 WaitGroup 的计数</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> appid <span class="token operator">:=</span> <span class="token keyword">range</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Appid <span class="token punctuation">{</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>appid <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 在 Goroutine 完成时减少 WaitGroup 的计数</span>
			<span class="token comment">// rollout 迁移</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 迁移中...&quot;</span><span class="token punctuation">)</span>
			msg<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">rolloutMigrate</span><span class="token punctuation">(</span>appid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> srcK8sClient<span class="token punctuation">,</span> destK8sClient<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在目标集群中新增 Rollouts 失败&quot;</span><span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span>

			<span class="token comment">// 更新元数据</span>
			count<span class="token punctuation">,</span> orginAppid<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">getReplicasAndAppid</span><span class="token punctuation">(</span>destK8sClient<span class="token punctuation">,</span> appid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType<span class="token punctuation">)</span>
			err <span class="token operator">=</span> <span class="token function">UpdateDockerData</span><span class="token punctuation">(</span>orginAppid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> destZone<span class="token punctuation">,</span> typeID<span class="token punctuation">,</span> destClusterID<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 更新元据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 更新元据失败数据成功&quot;</span><span class="token punctuation">)</span>

			<span class="token comment">// service 迁移</span>
			err <span class="token operator">=</span> <span class="token function">serviceMigrate</span><span class="token punctuation">(</span>appid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> srcK8sClient<span class="token punctuation">,</span> destK8sClient<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在目标集群中新增 Service 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在目标集群中新增 Service 成功&quot;</span><span class="token punctuation">)</span>

			<span class="token comment">// 判断是否关联域名</span>
			<span class="token keyword">var</span> isExists <span class="token builtin">bool</span>
			<span class="token keyword">var</span> lbupstreamID <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
			isExists<span class="token punctuation">,</span> lbupstreamID<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">IsAssociateDomain</span><span class="token punctuation">(</span>orginAppid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 判断是否关联域名出错&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
      <span class="token comment">// ingress 迁移 &amp; upstream 更新</span>
			<span class="token keyword">if</span> isExists <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 关联了 upstream&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> upstreamID <span class="token operator">:=</span> <span class="token keyword">range</span> lbupstreamID <span class="token punctuation">{</span>
					<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">ingressMigrate</span><span class="token punctuation">(</span>destClusterID<span class="token punctuation">,</span> upstreamID<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
						l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在目标集群中新增 Ingress 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
						<span class="token keyword">return</span>
					<span class="token punctuation">}</span>
					l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在目标集群中新增 Ingress &amp; 更新 Upstream 成功&quot;</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// upstream 更新 &amp; 删除 ingress</span>
			srcClusterID<span class="token punctuation">,</span> srcZone <span class="token operator">:=</span> <span class="token function">getClusterIDAndZone</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>SrcCluster<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span>
			<span class="token keyword">if</span> isExists <span class="token punctuation">{</span>
				err <span class="token operator">:=</span> <span class="token function">deleteIngress</span><span class="token punctuation">(</span>orginAppid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> srcZone<span class="token punctuation">,</span> srcClusterID<span class="token punctuation">)</span>
				<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Ingress 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Ingress 成功&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 删除 service</span>
			err <span class="token operator">=</span> srcK8sClient<span class="token punctuation">.</span>Clientset<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Services</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> appid<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Service 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Service 成功&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 删除 rollout</span>
			err <span class="token operator">=</span> srcK8sClient<span class="token punctuation">.</span>RolloutsClientset<span class="token punctuation">.</span><span class="token function">ArgoprojV1alpha1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rollouts</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> appid<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>DeleteOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Rollouts 失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 在源集群中删除 Rollouts 成功&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 删除源集群 cmdb 中数据</span>
			err <span class="token operator">=</span> <span class="token function">UpdateDockerData</span><span class="token punctuation">(</span>orginAppid<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>Env<span class="token punctuation">,</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>SrcCluster<span class="token punctuation">,</span> srcClusterID<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 删除源集群元数据失败&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 删除源集群元数据成功&quot;</span><span class="token punctuation">)</span>

			<span class="token comment">// 迁移完成</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span>appid <span class="token operator">+</span> <span class="token string">&quot; 迁移成功&quot;</span><span class="token punctuation">)</span>

			<span class="token comment">// 换行</span>
			l<span class="token punctuation">.</span><span class="token function">WriteNewLog</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span>appid<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 等待所有 Goroutine 完成</span>

	<span class="token keyword">if</span> r<span class="token punctuation">.</span>MigrationData<span class="token punctuation">.</span>MigrateType <span class="token operator">==</span> <span class="token string">&quot;离线&quot;</span> <span class="token punctuation">{</span>
		<span class="token comment">// 删除 velero 解压数据</span>
		commandStr <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;rm -rf /tmp/backupdownload/*&quot;</span><span class="token punctuation">)</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">executeSSHCommand</span><span class="token punctuation">(</span>commandStr<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// 迁移完成</span>
	l<span class="token punctuation">.</span><span class="token function">WriteFineshedLog</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;本次迁移完成&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结束语</strong></p><p>结合公司实际情况，适合自己的，就是最好的。</p><p>参考链接：</p><ul><li><p>Kubernetes多集群管理架构探索 | 徐信钊 KubeSphere Maintainer</p></li><li><p>Kubernetes多集群架构的思考、实践和探索 | 段朦 移动云</p></li><li><p>混合云下的 Kubernetes 多集群管理与应用部署 | 李宇： https://mp.weixin.qq.com/s/ohZ-kSbU5AgxaksRt5rkCw</p></li><li><p>智汇华云 | Kubernetes多集群管理方案kubefed原理解析：https://mp.weixin.qq.com/s/_LjH6H-y63MPqwgF8pC0sg</p></li><li><p>K8s 多集群实践思考和探索 | vivo互联网技术：https://mp.weixin.qq.com/s/vztX73tqfrx1r4suDQa9kw</p></li><li><p>karmada官方文档：https://karmada.io/zh/docs</p></li></ul><p>我是 Clay，下期见 👋</p><hr><blockquote><ul><li><p>欢迎订阅我的公众号「SRE运维进阶之路」或关注我的 Github https://github.com/clay-wangzhi/wiki 查看最新文章</p></li><li><p>欢迎加我微信<code>sre-k8s-ai</code>，与我讨论云原生、稳定性相关内容</p></li></ul></blockquote><img src="https://clay-blog.oss-cn-shanghai.aliyuncs.com/img/weixin-20240220180036567.png" alt="weixin" style="zoom:50%;">`,41);function b(g,y){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,s("p",null,[n("此项目是在 Kubernetes "),s("a",r,[n("Federation v1"),t(a)]),n("和"),s("a",k,[n("v2"),t(a)]),n("基础之上开发的。某些基本概念从这两个版本继承而来。")]),d,s("p",null,[n("Karmada 是"),s("a",v,[n("Cloud Native Computing Foundation"),t(a)]),n("（CNCF）的孵化项目。")]),m])}const q=e(l,[["render",b],["__file","multicluster.html.vue"]]);export{q as default};

const e=JSON.parse('{"key":"v-75f467df","path":"/code/shell/part5/34_Gotchas.html","title":"第34章 陷阱","lang":"zh-CN","frontmatter":{"author":"LinuxStory","category":"Linux","tag":["Bash"],"description":"第34章 陷阱 Turandot: Gli enigmi sono tre, la morte una! Caleph: No, no! Gli enigmi sono tre, una la vita! ——Puccini 以下的做法（非推荐）将让你原本平淡无奇的生活激动不已。 将保留字或特殊字符声明为变量名。 case=value0 # 引发错误。 23skidoo=value1 # 也会引发错误。 # 以数字开头的变量名是被shell保留使用的。 # 试试_23skidoo=value1。以下划线开头的变量名就没问题. # 然而 . . . 只用一个下划线作为变量名就不行。 _=25 echo $_ # $_是一个特殊变量, 代表最后一个命令的最后一个参数。 # 但是，_是一个有效的函数名！ xyz((!*=value2 # 引起严重的错误。 # Bash3.0之后，标点不能出现在变量名中。","head":[["meta",{"property":"og:url","content":"https://clay-wangzhi.com/code/shell/part5/34_Gotchas.html"}],["meta",{"property":"og:site_name","content":"SRE运维进阶之路"}],["meta",{"property":"og:title","content":"第34章 陷阱"}],["meta",{"property":"og:description","content":"第34章 陷阱 Turandot: Gli enigmi sono tre, la morte una! Caleph: No, no! Gli enigmi sono tre, una la vita! ——Puccini 以下的做法（非推荐）将让你原本平淡无奇的生活激动不已。 将保留字或特殊字符声明为变量名。 case=value0 # 引发错误。 23skidoo=value1 # 也会引发错误。 # 以数字开头的变量名是被shell保留使用的。 # 试试_23skidoo=value1。以下划线开头的变量名就没问题. # 然而 . . . 只用一个下划线作为变量名就不行。 _=25 echo $_ # $_是一个特殊变量, 代表最后一个命令的最后一个参数。 # 但是，_是一个有效的函数名！ xyz((!*=value2 # 引起严重的错误。 # Bash3.0之后，标点不能出现在变量名中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T13:08:31.000Z"}],["meta",{"property":"article:author","content":"LinuxStory"}],["meta",{"property":"article:tag","content":"Bash"}],["meta",{"property":"article:modified_time","content":"2023-04-19T13:08:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第34章 陷阱\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-19T13:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LinuxStory\\"}]}"]]},"headers":[{"level":3,"title":"以下的做法（非推荐）将让你原本平淡无奇的生活激动不已。","slug":"以下的做法-非推荐-将让你原本平淡无奇的生活激动不已。","link":"#以下的做法-非推荐-将让你原本平淡无奇的生活激动不已。","children":[]}],"git":{"createdTime":1681909711000,"updatedTime":1681909711000,"contributors":[{"name":"clay-wangzhi","email":"clay.wangzhi@gmail.com","commits":1}]},"readingTime":{"minutes":11.54,"words":3463},"filePathRelative":"code/shell/part5/34_Gotchas.md","localizedDate":"2023年4月19日","excerpt":"<h1> 第34章 陷阱</h1>\\n<blockquote>\\n<p>Turandot: Gli enigmi sono tre, la morte una!\\nCaleph: No, no! Gli enigmi sono tre, una la vita!</p>\\n</blockquote>\\n<blockquote>\\n<p>——Puccini</p>\\n</blockquote>\\n<h3> 以下的做法（非推荐）将让你原本平淡无奇的生活激动不已。</h3>\\n<ul>\\n<li>将保留字或特殊字符声明为变量名。</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token assign-left variable\\">case</span><span class=\\"token operator\\">=</span>value0       <span class=\\"token comment\\"># 引发错误。</span>\\n<span class=\\"token assign-left variable\\">23skidoo</span><span class=\\"token operator\\">=</span>value1   <span class=\\"token comment\\"># 也会引发错误。</span>\\n<span class=\\"token comment\\"># 以数字开头的变量名是被shell保留使用的。</span>\\n<span class=\\"token comment\\"># 试试_23skidoo=value1。以下划线开头的变量名就没问题.</span>\\n\\n<span class=\\"token comment\\"># 然而 . . .   只用一个下划线作为变量名就不行。</span>\\n<span class=\\"token assign-left variable\\">_</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">25</span>\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token variable\\">$_</span>           <span class=\\"token comment\\"># $_是一个特殊变量, 代表最后一个命令的最后一个参数。</span>\\n<span class=\\"token comment\\"># 但是，_是一个有效的函数名！</span>\\n\\nxyz<span class=\\"token punctuation\\">((</span><span class=\\"token operator\\">!</span>*<span class=\\"token operator\\">=</span>value2    <span class=\\"token comment\\"># 引起严重的错误。</span>\\n<span class=\\"token comment\\"># Bash3.0之后，标点不能出现在变量名中。</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"LinuxStory"},"autoDesc":true}');export{e as data};
